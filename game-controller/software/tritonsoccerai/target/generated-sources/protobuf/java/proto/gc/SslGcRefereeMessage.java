// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_gc_referee_message.proto

package proto.gc;

public final class SslGcRefereeMessage {
  private SslGcRefereeMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * MatchType is a meta information about the current match for easier log processing
   * </pre>
   *
   * Protobuf enum {@code proto.gc.MatchType}
   */
  public enum MatchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * not set
     * </pre>
     *
     * <code>UNKNOWN_MATCH = 0;</code>
     */
    UNKNOWN_MATCH(0),
    /**
     * <pre>
     * match is part of the group phase
     * </pre>
     *
     * <code>GROUP_PHASE = 1;</code>
     */
    GROUP_PHASE(1),
    /**
     * <pre>
     * match is part of the elimination phase
     * </pre>
     *
     * <code>ELIMINATION_PHASE = 2;</code>
     */
    ELIMINATION_PHASE(2),
    /**
     * <pre>
     * a friendly match, not part of a tournament
     * </pre>
     *
     * <code>FRIENDLY = 3;</code>
     */
    FRIENDLY(3),
    ;

    /**
     * <pre>
     * not set
     * </pre>
     *
     * <code>UNKNOWN_MATCH = 0;</code>
     */
    public static final int UNKNOWN_MATCH_VALUE = 0;
    /**
     * <pre>
     * match is part of the group phase
     * </pre>
     *
     * <code>GROUP_PHASE = 1;</code>
     */
    public static final int GROUP_PHASE_VALUE = 1;
    /**
     * <pre>
     * match is part of the elimination phase
     * </pre>
     *
     * <code>ELIMINATION_PHASE = 2;</code>
     */
    public static final int ELIMINATION_PHASE_VALUE = 2;
    /**
     * <pre>
     * a friendly match, not part of a tournament
     * </pre>
     *
     * <code>FRIENDLY = 3;</code>
     */
    public static final int FRIENDLY_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MatchType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MatchType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_MATCH;
        case 1: return GROUP_PHASE;
        case 2: return ELIMINATION_PHASE;
        case 3: return FRIENDLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MatchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchType>() {
            public MatchType findValueByNumber(int number) {
              return MatchType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return proto.gc.SslGcRefereeMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final MatchType[] VALUES = values();

    public static MatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MatchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.gc.MatchType)
  }

  public interface RefereeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.gc.Referee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return Whether the sourceIdentifier field is set.
     */
    boolean hasSourceIdentifier();
    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return The sourceIdentifier.
     */
    java.lang.String getSourceIdentifier();
    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return The bytes for sourceIdentifier.
     */
    com.google.protobuf.ByteString
        getSourceIdentifierBytes();

    /**
     * <pre>
     * The match type is a meta information about the current match that helps to process the logs after a competition
     * </pre>
     *
     * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
     * @return Whether the matchType field is set.
     */
    boolean hasMatchType();
    /**
     * <pre>
     * The match type is a meta information about the current match that helps to process the logs after a competition
     * </pre>
     *
     * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
     * @return The matchType.
     */
    proto.gc.SslGcRefereeMessage.MatchType getMatchType();

    /**
     * <pre>
     * The UNIX timestamp when the packet was sent, in microseconds.
     * Divide by 1,000,000 to get a time_t.
     * </pre>
     *
     * <code>required uint64 packet_timestamp = 1;</code>
     * @return Whether the packetTimestamp field is set.
     */
    boolean hasPacketTimestamp();
    /**
     * <pre>
     * The UNIX timestamp when the packet was sent, in microseconds.
     * Divide by 1,000,000 to get a time_t.
     * </pre>
     *
     * <code>required uint64 packet_timestamp = 1;</code>
     * @return The packetTimestamp.
     */
    long getPacketTimestamp();

    /**
     * <code>required .proto.gc.Referee.Stage stage = 2;</code>
     * @return Whether the stage field is set.
     */
    boolean hasStage();
    /**
     * <code>required .proto.gc.Referee.Stage stage = 2;</code>
     * @return The stage.
     */
    proto.gc.SslGcRefereeMessage.Referee.Stage getStage();

    /**
     * <pre>
     * The number of microseconds left in the stage.
     * The following stages have this value; the rest do not:
     * NORMAL_FIRST_HALF
     * NORMAL_HALF_TIME
     * NORMAL_SECOND_HALF
     * EXTRA_TIME_BREAK
     * EXTRA_FIRST_HALF
     * EXTRA_HALF_TIME
     * EXTRA_SECOND_HALF
     * PENALTY_SHOOTOUT_BREAK
     * If the stage runs over its specified time, this value
     * becomes negative.
     * </pre>
     *
     * <code>optional sint64 stage_time_left = 3;</code>
     * @return Whether the stageTimeLeft field is set.
     */
    boolean hasStageTimeLeft();
    /**
     * <pre>
     * The number of microseconds left in the stage.
     * The following stages have this value; the rest do not:
     * NORMAL_FIRST_HALF
     * NORMAL_HALF_TIME
     * NORMAL_SECOND_HALF
     * EXTRA_TIME_BREAK
     * EXTRA_FIRST_HALF
     * EXTRA_HALF_TIME
     * EXTRA_SECOND_HALF
     * PENALTY_SHOOTOUT_BREAK
     * If the stage runs over its specified time, this value
     * becomes negative.
     * </pre>
     *
     * <code>optional sint64 stage_time_left = 3;</code>
     * @return The stageTimeLeft.
     */
    long getStageTimeLeft();

    /**
     * <code>required .proto.gc.Referee.Command command = 4;</code>
     * @return Whether the command field is set.
     */
    boolean hasCommand();
    /**
     * <code>required .proto.gc.Referee.Command command = 4;</code>
     * @return The command.
     */
    proto.gc.SslGcRefereeMessage.Referee.Command getCommand();

    /**
     * <pre>
     * The number of commands issued since startup (mod 2^32).
     * </pre>
     *
     * <code>required uint32 command_counter = 5;</code>
     * @return Whether the commandCounter field is set.
     */
    boolean hasCommandCounter();
    /**
     * <pre>
     * The number of commands issued since startup (mod 2^32).
     * </pre>
     *
     * <code>required uint32 command_counter = 5;</code>
     * @return The commandCounter.
     */
    int getCommandCounter();

    /**
     * <pre>
     * The UNIX timestamp when the command was issued, in microseconds.
     * This value changes only when a new command is issued, not on each packet.
     * </pre>
     *
     * <code>required uint64 command_timestamp = 6;</code>
     * @return Whether the commandTimestamp field is set.
     */
    boolean hasCommandTimestamp();
    /**
     * <pre>
     * The UNIX timestamp when the command was issued, in microseconds.
     * This value changes only when a new command is issued, not on each packet.
     * </pre>
     *
     * <code>required uint64 command_timestamp = 6;</code>
     * @return The commandTimestamp.
     */
    long getCommandTimestamp();

    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     * @return Whether the yellow field is set.
     */
    boolean hasYellow();
    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     * @return The yellow.
     */
    proto.gc.SslGcRefereeMessage.Referee.TeamInfo getYellow();
    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     */
    proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getYellowOrBuilder();

    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     * @return Whether the blue field is set.
     */
    boolean hasBlue();
    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     * @return The blue.
     */
    proto.gc.SslGcRefereeMessage.Referee.TeamInfo getBlue();
    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     */
    proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getBlueOrBuilder();

    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     * @return Whether the designatedPosition field is set.
     */
    boolean hasDesignatedPosition();
    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     * @return The designatedPosition.
     */
    proto.gc.SslGcRefereeMessage.Referee.Point getDesignatedPosition();
    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     */
    proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder getDesignatedPositionOrBuilder();

    /**
     * <pre>
     * Information about the direction of play.
     * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
     * Obviously, the yellow team will play on the opposite half.
     * </pre>
     *
     * <code>optional bool blue_team_on_positive_half = 10;</code>
     * @return Whether the blueTeamOnPositiveHalf field is set.
     */
    boolean hasBlueTeamOnPositiveHalf();
    /**
     * <pre>
     * Information about the direction of play.
     * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
     * Obviously, the yellow team will play on the opposite half.
     * </pre>
     *
     * <code>optional bool blue_team_on_positive_half = 10;</code>
     * @return The blueTeamOnPositiveHalf.
     */
    boolean getBlueTeamOnPositiveHalf();

    /**
     * <pre>
     * The command that will be issued after the current stoppage and ball placement to continue the game.
     * </pre>
     *
     * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
     * @return Whether the nextCommand field is set.
     */
    boolean hasNextCommand();
    /**
     * <pre>
     * The command that will be issued after the current stoppage and ball placement to continue the game.
     * </pre>
     *
     * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
     * @return The nextCommand.
     */
    proto.gc.SslGcRefereeMessage.Referee.Command getNextCommand();

    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    java.util.List<proto.gc.SslGcGameEvent.GameEvent> 
        getGameEventsList();
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index);
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    int getGameEventsCount();
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
        getGameEventsOrBuilderList();
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
        int index);

    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup> 
        getGameEventProposalsList();
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    proto.gc.SslGcRefereeMessage.GameEventProposalGroup getGameEventProposals(int index);
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    int getGameEventProposalsCount();
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    java.util.List<? extends proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder> 
        getGameEventProposalsOrBuilderList();
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder getGameEventProposalsOrBuilder(
        int index);

    /**
     * <pre>
     * The time in microseconds that is remaining until the current action times out
     * The time will not be reset. It can get negative.
     * An autoRef would raise an appropriate event, if the time gets negative.
     * Possible actions where this time is relevant:
     *  * free kicks
     *  * kickoff, penalty kick, force start
     *  * ball placement
     * </pre>
     *
     * <code>optional int64 current_action_time_remaining = 15;</code>
     * @return Whether the currentActionTimeRemaining field is set.
     */
    boolean hasCurrentActionTimeRemaining();
    /**
     * <pre>
     * The time in microseconds that is remaining until the current action times out
     * The time will not be reset. It can get negative.
     * An autoRef would raise an appropriate event, if the time gets negative.
     * Possible actions where this time is relevant:
     *  * free kicks
     *  * kickoff, penalty kick, force start
     *  * ball placement
     * </pre>
     *
     * <code>optional int64 current_action_time_remaining = 15;</code>
     * @return The currentActionTimeRemaining.
     */
    long getCurrentActionTimeRemaining();
  }
  /**
   * <pre>
   * Each UDP packet contains one of these messages.
   * </pre>
   *
   * Protobuf type {@code proto.gc.Referee}
   */
  public static final class Referee extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.gc.Referee)
      RefereeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Referee.newBuilder() to construct.
    private Referee(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Referee() {
      sourceIdentifier_ = "";
      matchType_ = 0;
      stage_ = 0;
      command_ = 0;
      nextCommand_ = 0;
      gameEvents_ = java.util.Collections.emptyList();
      gameEventProposals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Referee();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Referee(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000004;
              packetTimestamp_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.gc.SslGcRefereeMessage.Referee.Stage value = proto.gc.SslGcRefereeMessage.Referee.Stage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                stage_ = rawValue;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000010;
              stageTimeLeft_ = input.readSInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.gc.SslGcRefereeMessage.Referee.Command value = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                command_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000040;
              commandCounter_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000080;
              commandTimestamp_ = input.readUInt64();
              break;
            }
            case 58: {
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) != 0)) {
                subBuilder = yellow_.toBuilder();
              }
              yellow_ = input.readMessage(proto.gc.SslGcRefereeMessage.Referee.TeamInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(yellow_);
                yellow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 66: {
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) != 0)) {
                subBuilder = blue_.toBuilder();
              }
              blue_ = input.readMessage(proto.gc.SslGcRefereeMessage.Referee.TeamInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blue_);
                blue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 74: {
              proto.gc.SslGcRefereeMessage.Referee.Point.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) != 0)) {
                subBuilder = designatedPosition_.toBuilder();
              }
              designatedPosition_ = input.readMessage(proto.gc.SslGcRefereeMessage.Referee.Point.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(designatedPosition_);
                designatedPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000800;
              blueTeamOnPositiveHalf_ = input.readBool();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.gc.SslGcRefereeMessage.Referee.Command value = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                nextCommand_ = rawValue;
              }
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              currentActionTimeRemaining_ = input.readInt64();
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                gameEvents_ = new java.util.ArrayList<proto.gc.SslGcGameEvent.GameEvent>();
                mutable_bitField0_ |= 0x00002000;
              }
              gameEvents_.add(
                  input.readMessage(proto.gc.SslGcGameEvent.GameEvent.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                gameEventProposals_ = new java.util.ArrayList<proto.gc.SslGcRefereeMessage.GameEventProposalGroup>();
                mutable_bitField0_ |= 0x00004000;
              }
              gameEventProposals_.add(
                  input.readMessage(proto.gc.SslGcRefereeMessage.GameEventProposalGroup.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              sourceIdentifier_ = bs;
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.gc.SslGcRefereeMessage.MatchType value = proto.gc.SslGcRefereeMessage.MatchType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(19, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                matchType_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) != 0)) {
          gameEvents_ = java.util.Collections.unmodifiableList(gameEvents_);
        }
        if (((mutable_bitField0_ & 0x00004000) != 0)) {
          gameEventProposals_ = java.util.Collections.unmodifiableList(gameEventProposals_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.gc.SslGcRefereeMessage.Referee.class, proto.gc.SslGcRefereeMessage.Referee.Builder.class);
    }

    /**
     * <pre>
     * These are the "coarse" stages of the game.
     * </pre>
     *
     * Protobuf enum {@code proto.gc.Referee.Stage}
     */
    public enum Stage
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * The first half is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>NORMAL_FIRST_HALF_PRE = 0;</code>
       */
      NORMAL_FIRST_HALF_PRE(0),
      /**
       * <pre>
       * The first half of the normal game, before half time.
       * </pre>
       *
       * <code>NORMAL_FIRST_HALF = 1;</code>
       */
      NORMAL_FIRST_HALF(1),
      /**
       * <pre>
       * Half time between first and second halves.
       * </pre>
       *
       * <code>NORMAL_HALF_TIME = 2;</code>
       */
      NORMAL_HALF_TIME(2),
      /**
       * <pre>
       * The second half is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>NORMAL_SECOND_HALF_PRE = 3;</code>
       */
      NORMAL_SECOND_HALF_PRE(3),
      /**
       * <pre>
       * The second half of the normal game, after half time.
       * </pre>
       *
       * <code>NORMAL_SECOND_HALF = 4;</code>
       */
      NORMAL_SECOND_HALF(4),
      /**
       * <pre>
       * The break before extra time.
       * </pre>
       *
       * <code>EXTRA_TIME_BREAK = 5;</code>
       */
      EXTRA_TIME_BREAK(5),
      /**
       * <pre>
       * The first half of extra time is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>EXTRA_FIRST_HALF_PRE = 6;</code>
       */
      EXTRA_FIRST_HALF_PRE(6),
      /**
       * <pre>
       * The first half of extra time.
       * </pre>
       *
       * <code>EXTRA_FIRST_HALF = 7;</code>
       */
      EXTRA_FIRST_HALF(7),
      /**
       * <pre>
       * Half time between first and second extra halves.
       * </pre>
       *
       * <code>EXTRA_HALF_TIME = 8;</code>
       */
      EXTRA_HALF_TIME(8),
      /**
       * <pre>
       * The second half of extra time is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>EXTRA_SECOND_HALF_PRE = 9;</code>
       */
      EXTRA_SECOND_HALF_PRE(9),
      /**
       * <pre>
       * The second half of extra time.
       * </pre>
       *
       * <code>EXTRA_SECOND_HALF = 10;</code>
       */
      EXTRA_SECOND_HALF(10),
      /**
       * <pre>
       * The break before penalty shootout.
       * </pre>
       *
       * <code>PENALTY_SHOOTOUT_BREAK = 11;</code>
       */
      PENALTY_SHOOTOUT_BREAK(11),
      /**
       * <pre>
       * The penalty shootout.
       * </pre>
       *
       * <code>PENALTY_SHOOTOUT = 12;</code>
       */
      PENALTY_SHOOTOUT(12),
      /**
       * <pre>
       * The game is over.
       * </pre>
       *
       * <code>POST_GAME = 13;</code>
       */
      POST_GAME(13),
      ;

      /**
       * <pre>
       * The first half is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>NORMAL_FIRST_HALF_PRE = 0;</code>
       */
      public static final int NORMAL_FIRST_HALF_PRE_VALUE = 0;
      /**
       * <pre>
       * The first half of the normal game, before half time.
       * </pre>
       *
       * <code>NORMAL_FIRST_HALF = 1;</code>
       */
      public static final int NORMAL_FIRST_HALF_VALUE = 1;
      /**
       * <pre>
       * Half time between first and second halves.
       * </pre>
       *
       * <code>NORMAL_HALF_TIME = 2;</code>
       */
      public static final int NORMAL_HALF_TIME_VALUE = 2;
      /**
       * <pre>
       * The second half is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>NORMAL_SECOND_HALF_PRE = 3;</code>
       */
      public static final int NORMAL_SECOND_HALF_PRE_VALUE = 3;
      /**
       * <pre>
       * The second half of the normal game, after half time.
       * </pre>
       *
       * <code>NORMAL_SECOND_HALF = 4;</code>
       */
      public static final int NORMAL_SECOND_HALF_VALUE = 4;
      /**
       * <pre>
       * The break before extra time.
       * </pre>
       *
       * <code>EXTRA_TIME_BREAK = 5;</code>
       */
      public static final int EXTRA_TIME_BREAK_VALUE = 5;
      /**
       * <pre>
       * The first half of extra time is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>EXTRA_FIRST_HALF_PRE = 6;</code>
       */
      public static final int EXTRA_FIRST_HALF_PRE_VALUE = 6;
      /**
       * <pre>
       * The first half of extra time.
       * </pre>
       *
       * <code>EXTRA_FIRST_HALF = 7;</code>
       */
      public static final int EXTRA_FIRST_HALF_VALUE = 7;
      /**
       * <pre>
       * Half time between first and second extra halves.
       * </pre>
       *
       * <code>EXTRA_HALF_TIME = 8;</code>
       */
      public static final int EXTRA_HALF_TIME_VALUE = 8;
      /**
       * <pre>
       * The second half of extra time is about to start.
       * A kickoff is called within this stage.
       * This stage ends with the NORMAL_START.
       * </pre>
       *
       * <code>EXTRA_SECOND_HALF_PRE = 9;</code>
       */
      public static final int EXTRA_SECOND_HALF_PRE_VALUE = 9;
      /**
       * <pre>
       * The second half of extra time.
       * </pre>
       *
       * <code>EXTRA_SECOND_HALF = 10;</code>
       */
      public static final int EXTRA_SECOND_HALF_VALUE = 10;
      /**
       * <pre>
       * The break before penalty shootout.
       * </pre>
       *
       * <code>PENALTY_SHOOTOUT_BREAK = 11;</code>
       */
      public static final int PENALTY_SHOOTOUT_BREAK_VALUE = 11;
      /**
       * <pre>
       * The penalty shootout.
       * </pre>
       *
       * <code>PENALTY_SHOOTOUT = 12;</code>
       */
      public static final int PENALTY_SHOOTOUT_VALUE = 12;
      /**
       * <pre>
       * The game is over.
       * </pre>
       *
       * <code>POST_GAME = 13;</code>
       */
      public static final int POST_GAME_VALUE = 13;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Stage valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Stage forNumber(int value) {
        switch (value) {
          case 0: return NORMAL_FIRST_HALF_PRE;
          case 1: return NORMAL_FIRST_HALF;
          case 2: return NORMAL_HALF_TIME;
          case 3: return NORMAL_SECOND_HALF_PRE;
          case 4: return NORMAL_SECOND_HALF;
          case 5: return EXTRA_TIME_BREAK;
          case 6: return EXTRA_FIRST_HALF_PRE;
          case 7: return EXTRA_FIRST_HALF;
          case 8: return EXTRA_HALF_TIME;
          case 9: return EXTRA_SECOND_HALF_PRE;
          case 10: return EXTRA_SECOND_HALF;
          case 11: return PENALTY_SHOOTOUT_BREAK;
          case 12: return PENALTY_SHOOTOUT;
          case 13: return POST_GAME;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Stage>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Stage> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Stage>() {
              public Stage findValueByNumber(int number) {
                return Stage.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.Referee.getDescriptor().getEnumTypes().get(0);
      }

      private static final Stage[] VALUES = values();

      public static Stage valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Stage(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.gc.Referee.Stage)
    }

    /**
     * <pre>
     * These are the "fine" states of play on the field.
     * </pre>
     *
     * Protobuf enum {@code proto.gc.Referee.Command}
     */
    public enum Command
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * All robots should completely stop moving.
       * </pre>
       *
       * <code>HALT = 0;</code>
       */
      HALT(0),
      /**
       * <pre>
       * Robots must keep 50 cm from the ball.
       * </pre>
       *
       * <code>STOP = 1;</code>
       */
      STOP(1),
      /**
       * <pre>
       * A prepared kickoff or penalty may now be taken.
       * </pre>
       *
       * <code>NORMAL_START = 2;</code>
       */
      NORMAL_START(2),
      /**
       * <pre>
       * The ball is dropped and free for either team.
       * </pre>
       *
       * <code>FORCE_START = 3;</code>
       */
      FORCE_START(3),
      /**
       * <pre>
       * The yellow team may move into kickoff position.
       * </pre>
       *
       * <code>PREPARE_KICKOFF_YELLOW = 4;</code>
       */
      PREPARE_KICKOFF_YELLOW(4),
      /**
       * <pre>
       * The blue team may move into kickoff position.
       * </pre>
       *
       * <code>PREPARE_KICKOFF_BLUE = 5;</code>
       */
      PREPARE_KICKOFF_BLUE(5),
      /**
       * <pre>
       * The yellow team may move into penalty position.
       * </pre>
       *
       * <code>PREPARE_PENALTY_YELLOW = 6;</code>
       */
      PREPARE_PENALTY_YELLOW(6),
      /**
       * <pre>
       * The blue team may move into penalty position.
       * </pre>
       *
       * <code>PREPARE_PENALTY_BLUE = 7;</code>
       */
      PREPARE_PENALTY_BLUE(7),
      /**
       * <pre>
       * The yellow team may take a direct free kick.
       * </pre>
       *
       * <code>DIRECT_FREE_YELLOW = 8;</code>
       */
      DIRECT_FREE_YELLOW(8),
      /**
       * <pre>
       * The blue team may take a direct free kick.
       * </pre>
       *
       * <code>DIRECT_FREE_BLUE = 9;</code>
       */
      DIRECT_FREE_BLUE(9),
      /**
       * <pre>
       * The yellow team may take an indirect free kick.
       * </pre>
       *
       * <code>INDIRECT_FREE_YELLOW = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated
      INDIRECT_FREE_YELLOW(10),
      /**
       * <pre>
       * The blue team may take an indirect free kick.
       * </pre>
       *
       * <code>INDIRECT_FREE_BLUE = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated
      INDIRECT_FREE_BLUE(11),
      /**
       * <pre>
       * The yellow team is currently in a timeout.
       * </pre>
       *
       * <code>TIMEOUT_YELLOW = 12;</code>
       */
      TIMEOUT_YELLOW(12),
      /**
       * <pre>
       * The blue team is currently in a timeout.
       * </pre>
       *
       * <code>TIMEOUT_BLUE = 13;</code>
       */
      TIMEOUT_BLUE(13),
      /**
       * <pre>
       * The yellow team just scored a goal.
       * For information only.
       * Deprecated: Use the score field from the team infos instead. That way, you can also detect revoked goals.
       * </pre>
       *
       * <code>GOAL_YELLOW = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated
      GOAL_YELLOW(14),
      /**
       * <pre>
       * The blue team just scored a goal. See also GOAL_YELLOW.
       * </pre>
       *
       * <code>GOAL_BLUE = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated
      GOAL_BLUE(15),
      /**
       * <pre>
       * Equivalent to STOP, but the yellow team must pick up the ball and
       * drop it in the Designated Position.
       * </pre>
       *
       * <code>BALL_PLACEMENT_YELLOW = 16;</code>
       */
      BALL_PLACEMENT_YELLOW(16),
      /**
       * <pre>
       * Equivalent to STOP, but the blue team must pick up the ball and drop
       * it in the Designated Position.
       * </pre>
       *
       * <code>BALL_PLACEMENT_BLUE = 17;</code>
       */
      BALL_PLACEMENT_BLUE(17),
      ;

      /**
       * <pre>
       * All robots should completely stop moving.
       * </pre>
       *
       * <code>HALT = 0;</code>
       */
      public static final int HALT_VALUE = 0;
      /**
       * <pre>
       * Robots must keep 50 cm from the ball.
       * </pre>
       *
       * <code>STOP = 1;</code>
       */
      public static final int STOP_VALUE = 1;
      /**
       * <pre>
       * A prepared kickoff or penalty may now be taken.
       * </pre>
       *
       * <code>NORMAL_START = 2;</code>
       */
      public static final int NORMAL_START_VALUE = 2;
      /**
       * <pre>
       * The ball is dropped and free for either team.
       * </pre>
       *
       * <code>FORCE_START = 3;</code>
       */
      public static final int FORCE_START_VALUE = 3;
      /**
       * <pre>
       * The yellow team may move into kickoff position.
       * </pre>
       *
       * <code>PREPARE_KICKOFF_YELLOW = 4;</code>
       */
      public static final int PREPARE_KICKOFF_YELLOW_VALUE = 4;
      /**
       * <pre>
       * The blue team may move into kickoff position.
       * </pre>
       *
       * <code>PREPARE_KICKOFF_BLUE = 5;</code>
       */
      public static final int PREPARE_KICKOFF_BLUE_VALUE = 5;
      /**
       * <pre>
       * The yellow team may move into penalty position.
       * </pre>
       *
       * <code>PREPARE_PENALTY_YELLOW = 6;</code>
       */
      public static final int PREPARE_PENALTY_YELLOW_VALUE = 6;
      /**
       * <pre>
       * The blue team may move into penalty position.
       * </pre>
       *
       * <code>PREPARE_PENALTY_BLUE = 7;</code>
       */
      public static final int PREPARE_PENALTY_BLUE_VALUE = 7;
      /**
       * <pre>
       * The yellow team may take a direct free kick.
       * </pre>
       *
       * <code>DIRECT_FREE_YELLOW = 8;</code>
       */
      public static final int DIRECT_FREE_YELLOW_VALUE = 8;
      /**
       * <pre>
       * The blue team may take a direct free kick.
       * </pre>
       *
       * <code>DIRECT_FREE_BLUE = 9;</code>
       */
      public static final int DIRECT_FREE_BLUE_VALUE = 9;
      /**
       * <pre>
       * The yellow team may take an indirect free kick.
       * </pre>
       *
       * <code>INDIRECT_FREE_YELLOW = 10 [deprecated = true];</code>
       */
      @java.lang.Deprecated public static final int INDIRECT_FREE_YELLOW_VALUE = 10;
      /**
       * <pre>
       * The blue team may take an indirect free kick.
       * </pre>
       *
       * <code>INDIRECT_FREE_BLUE = 11 [deprecated = true];</code>
       */
      @java.lang.Deprecated public static final int INDIRECT_FREE_BLUE_VALUE = 11;
      /**
       * <pre>
       * The yellow team is currently in a timeout.
       * </pre>
       *
       * <code>TIMEOUT_YELLOW = 12;</code>
       */
      public static final int TIMEOUT_YELLOW_VALUE = 12;
      /**
       * <pre>
       * The blue team is currently in a timeout.
       * </pre>
       *
       * <code>TIMEOUT_BLUE = 13;</code>
       */
      public static final int TIMEOUT_BLUE_VALUE = 13;
      /**
       * <pre>
       * The yellow team just scored a goal.
       * For information only.
       * Deprecated: Use the score field from the team infos instead. That way, you can also detect revoked goals.
       * </pre>
       *
       * <code>GOAL_YELLOW = 14 [deprecated = true];</code>
       */
      @java.lang.Deprecated public static final int GOAL_YELLOW_VALUE = 14;
      /**
       * <pre>
       * The blue team just scored a goal. See also GOAL_YELLOW.
       * </pre>
       *
       * <code>GOAL_BLUE = 15 [deprecated = true];</code>
       */
      @java.lang.Deprecated public static final int GOAL_BLUE_VALUE = 15;
      /**
       * <pre>
       * Equivalent to STOP, but the yellow team must pick up the ball and
       * drop it in the Designated Position.
       * </pre>
       *
       * <code>BALL_PLACEMENT_YELLOW = 16;</code>
       */
      public static final int BALL_PLACEMENT_YELLOW_VALUE = 16;
      /**
       * <pre>
       * Equivalent to STOP, but the blue team must pick up the ball and drop
       * it in the Designated Position.
       * </pre>
       *
       * <code>BALL_PLACEMENT_BLUE = 17;</code>
       */
      public static final int BALL_PLACEMENT_BLUE_VALUE = 17;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Command valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Command forNumber(int value) {
        switch (value) {
          case 0: return HALT;
          case 1: return STOP;
          case 2: return NORMAL_START;
          case 3: return FORCE_START;
          case 4: return PREPARE_KICKOFF_YELLOW;
          case 5: return PREPARE_KICKOFF_BLUE;
          case 6: return PREPARE_PENALTY_YELLOW;
          case 7: return PREPARE_PENALTY_BLUE;
          case 8: return DIRECT_FREE_YELLOW;
          case 9: return DIRECT_FREE_BLUE;
          case 10: return INDIRECT_FREE_YELLOW;
          case 11: return INDIRECT_FREE_BLUE;
          case 12: return TIMEOUT_YELLOW;
          case 13: return TIMEOUT_BLUE;
          case 14: return GOAL_YELLOW;
          case 15: return GOAL_BLUE;
          case 16: return BALL_PLACEMENT_YELLOW;
          case 17: return BALL_PLACEMENT_BLUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Command>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Command> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Command>() {
              public Command findValueByNumber(int number) {
                return Command.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.Referee.getDescriptor().getEnumTypes().get(1);
      }

      private static final Command[] VALUES = values();

      public static Command valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Command(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.gc.Referee.Command)
    }

    public interface TeamInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.gc.Referee.TeamInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * The number of goals scored by the team during normal play and overtime.
       * </pre>
       *
       * <code>required uint32 score = 2;</code>
       * @return Whether the score field is set.
       */
      boolean hasScore();
      /**
       * <pre>
       * The number of goals scored by the team during normal play and overtime.
       * </pre>
       *
       * <code>required uint32 score = 2;</code>
       * @return The score.
       */
      int getScore();

      /**
       * <pre>
       * The number of red cards issued to the team since the beginning of the game.
       * </pre>
       *
       * <code>required uint32 red_cards = 3;</code>
       * @return Whether the redCards field is set.
       */
      boolean hasRedCards();
      /**
       * <pre>
       * The number of red cards issued to the team since the beginning of the game.
       * </pre>
       *
       * <code>required uint32 red_cards = 3;</code>
       * @return The redCards.
       */
      int getRedCards();

      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @return A list containing the yellowCardTimes.
       */
      java.util.List<java.lang.Integer> getYellowCardTimesList();
      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @return The count of yellowCardTimes.
       */
      int getYellowCardTimesCount();
      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The yellowCardTimes at the given index.
       */
      int getYellowCardTimes(int index);

      /**
       * <pre>
       * The total number of yellow cards ever issued to the team.
       * </pre>
       *
       * <code>required uint32 yellow_cards = 5;</code>
       * @return Whether the yellowCards field is set.
       */
      boolean hasYellowCards();
      /**
       * <pre>
       * The total number of yellow cards ever issued to the team.
       * </pre>
       *
       * <code>required uint32 yellow_cards = 5;</code>
       * @return The yellowCards.
       */
      int getYellowCards();

      /**
       * <pre>
       * The number of timeouts this team can still call.
       * If in a timeout right now, that timeout is excluded.
       * </pre>
       *
       * <code>required uint32 timeouts = 6;</code>
       * @return Whether the timeouts field is set.
       */
      boolean hasTimeouts();
      /**
       * <pre>
       * The number of timeouts this team can still call.
       * If in a timeout right now, that timeout is excluded.
       * </pre>
       *
       * <code>required uint32 timeouts = 6;</code>
       * @return The timeouts.
       */
      int getTimeouts();

      /**
       * <pre>
       * The number of microseconds of timeout this team can use.
       * </pre>
       *
       * <code>required uint32 timeout_time = 7;</code>
       * @return Whether the timeoutTime field is set.
       */
      boolean hasTimeoutTime();
      /**
       * <pre>
       * The number of microseconds of timeout this team can use.
       * </pre>
       *
       * <code>required uint32 timeout_time = 7;</code>
       * @return The timeoutTime.
       */
      int getTimeoutTime();

      /**
       * <pre>
       * The pattern number of this team's goalkeeper.
       * </pre>
       *
       * <code>required uint32 goalkeeper = 8;</code>
       * @return Whether the goalkeeper field is set.
       */
      boolean hasGoalkeeper();
      /**
       * <pre>
       * The pattern number of this team's goalkeeper.
       * </pre>
       *
       * <code>required uint32 goalkeeper = 8;</code>
       * @return The goalkeeper.
       */
      int getGoalkeeper();

      /**
       * <pre>
       * The total number of countable fouls that act towards yellow cards
       * </pre>
       *
       * <code>optional uint32 foul_counter = 9;</code>
       * @return Whether the foulCounter field is set.
       */
      boolean hasFoulCounter();
      /**
       * <pre>
       * The total number of countable fouls that act towards yellow cards
       * </pre>
       *
       * <code>optional uint32 foul_counter = 9;</code>
       * @return The foulCounter.
       */
      int getFoulCounter();

      /**
       * <pre>
       * The number of consecutive ball placement failures of this team
       * </pre>
       *
       * <code>optional uint32 ball_placement_failures = 10;</code>
       * @return Whether the ballPlacementFailures field is set.
       */
      boolean hasBallPlacementFailures();
      /**
       * <pre>
       * The number of consecutive ball placement failures of this team
       * </pre>
       *
       * <code>optional uint32 ball_placement_failures = 10;</code>
       * @return The ballPlacementFailures.
       */
      int getBallPlacementFailures();

      /**
       * <pre>
       * Indicate if the team is able and allowed to place the ball
       * </pre>
       *
       * <code>optional bool can_place_ball = 12;</code>
       * @return Whether the canPlaceBall field is set.
       */
      boolean hasCanPlaceBall();
      /**
       * <pre>
       * Indicate if the team is able and allowed to place the ball
       * </pre>
       *
       * <code>optional bool can_place_ball = 12;</code>
       * @return The canPlaceBall.
       */
      boolean getCanPlaceBall();

      /**
       * <pre>
       * The maximum number of bots allowed on the field based on division and cards
       * </pre>
       *
       * <code>optional uint32 max_allowed_bots = 13;</code>
       * @return Whether the maxAllowedBots field is set.
       */
      boolean hasMaxAllowedBots();
      /**
       * <pre>
       * The maximum number of bots allowed on the field based on division and cards
       * </pre>
       *
       * <code>optional uint32 max_allowed_bots = 13;</code>
       * @return The maxAllowedBots.
       */
      int getMaxAllowedBots();

      /**
       * <pre>
       * The team has submitted an intent to substitute one or more robots at the next chance
       * </pre>
       *
       * <code>optional bool bot_substitution_intent = 14;</code>
       * @return Whether the botSubstitutionIntent field is set.
       */
      boolean hasBotSubstitutionIntent();
      /**
       * <pre>
       * The team has submitted an intent to substitute one or more robots at the next chance
       * </pre>
       *
       * <code>optional bool bot_substitution_intent = 14;</code>
       * @return The botSubstitutionIntent.
       */
      boolean getBotSubstitutionIntent();

      /**
       * <pre>
       * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
       * </pre>
       *
       * <code>optional bool ball_placement_failures_reached = 15;</code>
       * @return Whether the ballPlacementFailuresReached field is set.
       */
      boolean hasBallPlacementFailuresReached();
      /**
       * <pre>
       * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
       * </pre>
       *
       * <code>optional bool ball_placement_failures_reached = 15;</code>
       * @return The ballPlacementFailuresReached.
       */
      boolean getBallPlacementFailuresReached();

      /**
       * <pre>
       * The team is allowed to substitute one or more robots currently
       * </pre>
       *
       * <code>optional bool bot_substitution_allowed = 16;</code>
       * @return Whether the botSubstitutionAllowed field is set.
       */
      boolean hasBotSubstitutionAllowed();
      /**
       * <pre>
       * The team is allowed to substitute one or more robots currently
       * </pre>
       *
       * <code>optional bool bot_substitution_allowed = 16;</code>
       * @return The botSubstitutionAllowed.
       */
      boolean getBotSubstitutionAllowed();
    }
    /**
     * <pre>
     * Information about a single team.
     * </pre>
     *
     * Protobuf type {@code proto.gc.Referee.TeamInfo}
     */
    public static final class TeamInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:proto.gc.Referee.TeamInfo)
        TeamInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TeamInfo.newBuilder() to construct.
      private TeamInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TeamInfo() {
        name_ = "";
        yellowCardTimes_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TeamInfo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TeamInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                score_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                redCards_ = input.readUInt32();
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  yellowCardTimes_ = newIntList();
                  mutable_bitField0_ |= 0x00000008;
                }
                yellowCardTimes_.addInt(input.readUInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                  yellowCardTimes_ = newIntList();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  yellowCardTimes_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 40: {
                bitField0_ |= 0x00000008;
                yellowCards_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                timeouts_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                timeoutTime_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                goalkeeper_ = input.readUInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                foulCounter_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000100;
                ballPlacementFailures_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000200;
                canPlaceBall_ = input.readBool();
                break;
              }
              case 104: {
                bitField0_ |= 0x00000400;
                maxAllowedBots_ = input.readUInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00000800;
                botSubstitutionIntent_ = input.readBool();
                break;
              }
              case 120: {
                bitField0_ |= 0x00001000;
                ballPlacementFailuresReached_ = input.readBool();
                break;
              }
              case 128: {
                bitField0_ |= 0x00002000;
                botSubstitutionAllowed_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) != 0)) {
            yellowCardTimes_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_TeamInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_TeamInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRefereeMessage.Referee.TeamInfo.class, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * The team's name (empty string if operator has not typed anything).
       * </pre>
       *
       * <code>required string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCORE_FIELD_NUMBER = 2;
      private int score_;
      /**
       * <pre>
       * The number of goals scored by the team during normal play and overtime.
       * </pre>
       *
       * <code>required uint32 score = 2;</code>
       * @return Whether the score field is set.
       */
      @java.lang.Override
      public boolean hasScore() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The number of goals scored by the team during normal play and overtime.
       * </pre>
       *
       * <code>required uint32 score = 2;</code>
       * @return The score.
       */
      @java.lang.Override
      public int getScore() {
        return score_;
      }

      public static final int RED_CARDS_FIELD_NUMBER = 3;
      private int redCards_;
      /**
       * <pre>
       * The number of red cards issued to the team since the beginning of the game.
       * </pre>
       *
       * <code>required uint32 red_cards = 3;</code>
       * @return Whether the redCards field is set.
       */
      @java.lang.Override
      public boolean hasRedCards() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The number of red cards issued to the team since the beginning of the game.
       * </pre>
       *
       * <code>required uint32 red_cards = 3;</code>
       * @return The redCards.
       */
      @java.lang.Override
      public int getRedCards() {
        return redCards_;
      }

      public static final int YELLOW_CARD_TIMES_FIELD_NUMBER = 4;
      private com.google.protobuf.Internal.IntList yellowCardTimes_;
      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @return A list containing the yellowCardTimes.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getYellowCardTimesList() {
        return yellowCardTimes_;
      }
      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @return The count of yellowCardTimes.
       */
      public int getYellowCardTimesCount() {
        return yellowCardTimes_.size();
      }
      /**
       * <pre>
       * The amount of time (in microseconds) left on each yellow card issued to the team.
       * If no yellow cards are issued, this array has no elements.
       * Otherwise, times are ordered from smallest to largest.
       * </pre>
       *
       * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The yellowCardTimes at the given index.
       */
      public int getYellowCardTimes(int index) {
        return yellowCardTimes_.getInt(index);
      }
      private int yellowCardTimesMemoizedSerializedSize = -1;

      public static final int YELLOW_CARDS_FIELD_NUMBER = 5;
      private int yellowCards_;
      /**
       * <pre>
       * The total number of yellow cards ever issued to the team.
       * </pre>
       *
       * <code>required uint32 yellow_cards = 5;</code>
       * @return Whether the yellowCards field is set.
       */
      @java.lang.Override
      public boolean hasYellowCards() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The total number of yellow cards ever issued to the team.
       * </pre>
       *
       * <code>required uint32 yellow_cards = 5;</code>
       * @return The yellowCards.
       */
      @java.lang.Override
      public int getYellowCards() {
        return yellowCards_;
      }

      public static final int TIMEOUTS_FIELD_NUMBER = 6;
      private int timeouts_;
      /**
       * <pre>
       * The number of timeouts this team can still call.
       * If in a timeout right now, that timeout is excluded.
       * </pre>
       *
       * <code>required uint32 timeouts = 6;</code>
       * @return Whether the timeouts field is set.
       */
      @java.lang.Override
      public boolean hasTimeouts() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The number of timeouts this team can still call.
       * If in a timeout right now, that timeout is excluded.
       * </pre>
       *
       * <code>required uint32 timeouts = 6;</code>
       * @return The timeouts.
       */
      @java.lang.Override
      public int getTimeouts() {
        return timeouts_;
      }

      public static final int TIMEOUT_TIME_FIELD_NUMBER = 7;
      private int timeoutTime_;
      /**
       * <pre>
       * The number of microseconds of timeout this team can use.
       * </pre>
       *
       * <code>required uint32 timeout_time = 7;</code>
       * @return Whether the timeoutTime field is set.
       */
      @java.lang.Override
      public boolean hasTimeoutTime() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The number of microseconds of timeout this team can use.
       * </pre>
       *
       * <code>required uint32 timeout_time = 7;</code>
       * @return The timeoutTime.
       */
      @java.lang.Override
      public int getTimeoutTime() {
        return timeoutTime_;
      }

      public static final int GOALKEEPER_FIELD_NUMBER = 8;
      private int goalkeeper_;
      /**
       * <pre>
       * The pattern number of this team's goalkeeper.
       * </pre>
       *
       * <code>required uint32 goalkeeper = 8;</code>
       * @return Whether the goalkeeper field is set.
       */
      @java.lang.Override
      public boolean hasGoalkeeper() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The pattern number of this team's goalkeeper.
       * </pre>
       *
       * <code>required uint32 goalkeeper = 8;</code>
       * @return The goalkeeper.
       */
      @java.lang.Override
      public int getGoalkeeper() {
        return goalkeeper_;
      }

      public static final int FOUL_COUNTER_FIELD_NUMBER = 9;
      private int foulCounter_;
      /**
       * <pre>
       * The total number of countable fouls that act towards yellow cards
       * </pre>
       *
       * <code>optional uint32 foul_counter = 9;</code>
       * @return Whether the foulCounter field is set.
       */
      @java.lang.Override
      public boolean hasFoulCounter() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The total number of countable fouls that act towards yellow cards
       * </pre>
       *
       * <code>optional uint32 foul_counter = 9;</code>
       * @return The foulCounter.
       */
      @java.lang.Override
      public int getFoulCounter() {
        return foulCounter_;
      }

      public static final int BALL_PLACEMENT_FAILURES_FIELD_NUMBER = 10;
      private int ballPlacementFailures_;
      /**
       * <pre>
       * The number of consecutive ball placement failures of this team
       * </pre>
       *
       * <code>optional uint32 ball_placement_failures = 10;</code>
       * @return Whether the ballPlacementFailures field is set.
       */
      @java.lang.Override
      public boolean hasBallPlacementFailures() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The number of consecutive ball placement failures of this team
       * </pre>
       *
       * <code>optional uint32 ball_placement_failures = 10;</code>
       * @return The ballPlacementFailures.
       */
      @java.lang.Override
      public int getBallPlacementFailures() {
        return ballPlacementFailures_;
      }

      public static final int CAN_PLACE_BALL_FIELD_NUMBER = 12;
      private boolean canPlaceBall_;
      /**
       * <pre>
       * Indicate if the team is able and allowed to place the ball
       * </pre>
       *
       * <code>optional bool can_place_ball = 12;</code>
       * @return Whether the canPlaceBall field is set.
       */
      @java.lang.Override
      public boolean hasCanPlaceBall() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Indicate if the team is able and allowed to place the ball
       * </pre>
       *
       * <code>optional bool can_place_ball = 12;</code>
       * @return The canPlaceBall.
       */
      @java.lang.Override
      public boolean getCanPlaceBall() {
        return canPlaceBall_;
      }

      public static final int MAX_ALLOWED_BOTS_FIELD_NUMBER = 13;
      private int maxAllowedBots_;
      /**
       * <pre>
       * The maximum number of bots allowed on the field based on division and cards
       * </pre>
       *
       * <code>optional uint32 max_allowed_bots = 13;</code>
       * @return Whether the maxAllowedBots field is set.
       */
      @java.lang.Override
      public boolean hasMaxAllowedBots() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The maximum number of bots allowed on the field based on division and cards
       * </pre>
       *
       * <code>optional uint32 max_allowed_bots = 13;</code>
       * @return The maxAllowedBots.
       */
      @java.lang.Override
      public int getMaxAllowedBots() {
        return maxAllowedBots_;
      }

      public static final int BOT_SUBSTITUTION_INTENT_FIELD_NUMBER = 14;
      private boolean botSubstitutionIntent_;
      /**
       * <pre>
       * The team has submitted an intent to substitute one or more robots at the next chance
       * </pre>
       *
       * <code>optional bool bot_substitution_intent = 14;</code>
       * @return Whether the botSubstitutionIntent field is set.
       */
      @java.lang.Override
      public boolean hasBotSubstitutionIntent() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * The team has submitted an intent to substitute one or more robots at the next chance
       * </pre>
       *
       * <code>optional bool bot_substitution_intent = 14;</code>
       * @return The botSubstitutionIntent.
       */
      @java.lang.Override
      public boolean getBotSubstitutionIntent() {
        return botSubstitutionIntent_;
      }

      public static final int BALL_PLACEMENT_FAILURES_REACHED_FIELD_NUMBER = 15;
      private boolean ballPlacementFailuresReached_;
      /**
       * <pre>
       * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
       * </pre>
       *
       * <code>optional bool ball_placement_failures_reached = 15;</code>
       * @return Whether the ballPlacementFailuresReached field is set.
       */
      @java.lang.Override
      public boolean hasBallPlacementFailuresReached() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
       * </pre>
       *
       * <code>optional bool ball_placement_failures_reached = 15;</code>
       * @return The ballPlacementFailuresReached.
       */
      @java.lang.Override
      public boolean getBallPlacementFailuresReached() {
        return ballPlacementFailuresReached_;
      }

      public static final int BOT_SUBSTITUTION_ALLOWED_FIELD_NUMBER = 16;
      private boolean botSubstitutionAllowed_;
      /**
       * <pre>
       * The team is allowed to substitute one or more robots currently
       * </pre>
       *
       * <code>optional bool bot_substitution_allowed = 16;</code>
       * @return Whether the botSubstitutionAllowed field is set.
       */
      @java.lang.Override
      public boolean hasBotSubstitutionAllowed() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * The team is allowed to substitute one or more robots currently
       * </pre>
       *
       * <code>optional bool bot_substitution_allowed = 16;</code>
       * @return The botSubstitutionAllowed.
       */
      @java.lang.Override
      public boolean getBotSubstitutionAllowed() {
        return botSubstitutionAllowed_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasScore()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRedCards()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasYellowCards()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTimeouts()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTimeoutTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGoalkeeper()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, score_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, redCards_);
        }
        if (getYellowCardTimesList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(yellowCardTimesMemoizedSerializedSize);
        }
        for (int i = 0; i < yellowCardTimes_.size(); i++) {
          output.writeUInt32NoTag(yellowCardTimes_.getInt(i));
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(5, yellowCards_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(6, timeouts_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(7, timeoutTime_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(8, goalkeeper_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(9, foulCounter_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeUInt32(10, ballPlacementFailures_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeBool(12, canPlaceBall_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt32(13, maxAllowedBots_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeBool(14, botSubstitutionIntent_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeBool(15, ballPlacementFailuresReached_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeBool(16, botSubstitutionAllowed_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, score_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, redCards_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < yellowCardTimes_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(yellowCardTimes_.getInt(i));
          }
          size += dataSize;
          if (!getYellowCardTimesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yellowCardTimesMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, yellowCards_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, timeouts_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, timeoutTime_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, goalkeeper_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, foulCounter_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, ballPlacementFailures_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, canPlaceBall_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, maxAllowedBots_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(14, botSubstitutionIntent_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(15, ballPlacementFailuresReached_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(16, botSubstitutionAllowed_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.gc.SslGcRefereeMessage.Referee.TeamInfo)) {
          return super.equals(obj);
        }
        proto.gc.SslGcRefereeMessage.Referee.TeamInfo other = (proto.gc.SslGcRefereeMessage.Referee.TeamInfo) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasScore() != other.hasScore()) return false;
        if (hasScore()) {
          if (getScore()
              != other.getScore()) return false;
        }
        if (hasRedCards() != other.hasRedCards()) return false;
        if (hasRedCards()) {
          if (getRedCards()
              != other.getRedCards()) return false;
        }
        if (!getYellowCardTimesList()
            .equals(other.getYellowCardTimesList())) return false;
        if (hasYellowCards() != other.hasYellowCards()) return false;
        if (hasYellowCards()) {
          if (getYellowCards()
              != other.getYellowCards()) return false;
        }
        if (hasTimeouts() != other.hasTimeouts()) return false;
        if (hasTimeouts()) {
          if (getTimeouts()
              != other.getTimeouts()) return false;
        }
        if (hasTimeoutTime() != other.hasTimeoutTime()) return false;
        if (hasTimeoutTime()) {
          if (getTimeoutTime()
              != other.getTimeoutTime()) return false;
        }
        if (hasGoalkeeper() != other.hasGoalkeeper()) return false;
        if (hasGoalkeeper()) {
          if (getGoalkeeper()
              != other.getGoalkeeper()) return false;
        }
        if (hasFoulCounter() != other.hasFoulCounter()) return false;
        if (hasFoulCounter()) {
          if (getFoulCounter()
              != other.getFoulCounter()) return false;
        }
        if (hasBallPlacementFailures() != other.hasBallPlacementFailures()) return false;
        if (hasBallPlacementFailures()) {
          if (getBallPlacementFailures()
              != other.getBallPlacementFailures()) return false;
        }
        if (hasCanPlaceBall() != other.hasCanPlaceBall()) return false;
        if (hasCanPlaceBall()) {
          if (getCanPlaceBall()
              != other.getCanPlaceBall()) return false;
        }
        if (hasMaxAllowedBots() != other.hasMaxAllowedBots()) return false;
        if (hasMaxAllowedBots()) {
          if (getMaxAllowedBots()
              != other.getMaxAllowedBots()) return false;
        }
        if (hasBotSubstitutionIntent() != other.hasBotSubstitutionIntent()) return false;
        if (hasBotSubstitutionIntent()) {
          if (getBotSubstitutionIntent()
              != other.getBotSubstitutionIntent()) return false;
        }
        if (hasBallPlacementFailuresReached() != other.hasBallPlacementFailuresReached()) return false;
        if (hasBallPlacementFailuresReached()) {
          if (getBallPlacementFailuresReached()
              != other.getBallPlacementFailuresReached()) return false;
        }
        if (hasBotSubstitutionAllowed() != other.hasBotSubstitutionAllowed()) return false;
        if (hasBotSubstitutionAllowed()) {
          if (getBotSubstitutionAllowed()
              != other.getBotSubstitutionAllowed()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasScore()) {
          hash = (37 * hash) + SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getScore();
        }
        if (hasRedCards()) {
          hash = (37 * hash) + RED_CARDS_FIELD_NUMBER;
          hash = (53 * hash) + getRedCards();
        }
        if (getYellowCardTimesCount() > 0) {
          hash = (37 * hash) + YELLOW_CARD_TIMES_FIELD_NUMBER;
          hash = (53 * hash) + getYellowCardTimesList().hashCode();
        }
        if (hasYellowCards()) {
          hash = (37 * hash) + YELLOW_CARDS_FIELD_NUMBER;
          hash = (53 * hash) + getYellowCards();
        }
        if (hasTimeouts()) {
          hash = (37 * hash) + TIMEOUTS_FIELD_NUMBER;
          hash = (53 * hash) + getTimeouts();
        }
        if (hasTimeoutTime()) {
          hash = (37 * hash) + TIMEOUT_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTimeoutTime();
        }
        if (hasGoalkeeper()) {
          hash = (37 * hash) + GOALKEEPER_FIELD_NUMBER;
          hash = (53 * hash) + getGoalkeeper();
        }
        if (hasFoulCounter()) {
          hash = (37 * hash) + FOUL_COUNTER_FIELD_NUMBER;
          hash = (53 * hash) + getFoulCounter();
        }
        if (hasBallPlacementFailures()) {
          hash = (37 * hash) + BALL_PLACEMENT_FAILURES_FIELD_NUMBER;
          hash = (53 * hash) + getBallPlacementFailures();
        }
        if (hasCanPlaceBall()) {
          hash = (37 * hash) + CAN_PLACE_BALL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getCanPlaceBall());
        }
        if (hasMaxAllowedBots()) {
          hash = (37 * hash) + MAX_ALLOWED_BOTS_FIELD_NUMBER;
          hash = (53 * hash) + getMaxAllowedBots();
        }
        if (hasBotSubstitutionIntent()) {
          hash = (37 * hash) + BOT_SUBSTITUTION_INTENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBotSubstitutionIntent());
        }
        if (hasBallPlacementFailuresReached()) {
          hash = (37 * hash) + BALL_PLACEMENT_FAILURES_REACHED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBallPlacementFailuresReached());
        }
        if (hasBotSubstitutionAllowed()) {
          hash = (37 * hash) + BOT_SUBSTITUTION_ALLOWED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBotSubstitutionAllowed());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.gc.SslGcRefereeMessage.Referee.TeamInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Information about a single team.
       * </pre>
       *
       * Protobuf type {@code proto.gc.Referee.TeamInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.gc.Referee.TeamInfo)
          proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_TeamInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_TeamInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.gc.SslGcRefereeMessage.Referee.TeamInfo.class, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder.class);
        }

        // Construct using proto.gc.SslGcRefereeMessage.Referee.TeamInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          score_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          redCards_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          yellowCardTimes_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          yellowCards_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          timeouts_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          timeoutTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          goalkeeper_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          foulCounter_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          ballPlacementFailures_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          canPlaceBall_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          maxAllowedBots_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          botSubstitutionIntent_ = false;
          bitField0_ = (bitField0_ & ~0x00001000);
          ballPlacementFailuresReached_ = false;
          bitField0_ = (bitField0_ & ~0x00002000);
          botSubstitutionAllowed_ = false;
          bitField0_ = (bitField0_ & ~0x00004000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_TeamInfo_descriptor;
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getDefaultInstanceForType() {
          return proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance();
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.TeamInfo build() {
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.TeamInfo buildPartial() {
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo result = new proto.gc.SslGcRefereeMessage.Referee.TeamInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.score_ = score_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.redCards_ = redCards_;
            to_bitField0_ |= 0x00000004;
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            yellowCardTimes_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.yellowCardTimes_ = yellowCardTimes_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.yellowCards_ = yellowCards_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.timeouts_ = timeouts_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.timeoutTime_ = timeoutTime_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.goalkeeper_ = goalkeeper_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.foulCounter_ = foulCounter_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.ballPlacementFailures_ = ballPlacementFailures_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.canPlaceBall_ = canPlaceBall_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.maxAllowedBots_ = maxAllowedBots_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.botSubstitutionIntent_ = botSubstitutionIntent_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.ballPlacementFailuresReached_ = ballPlacementFailuresReached_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.botSubstitutionAllowed_ = botSubstitutionAllowed_;
            to_bitField0_ |= 0x00002000;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.gc.SslGcRefereeMessage.Referee.TeamInfo) {
            return mergeFrom((proto.gc.SslGcRefereeMessage.Referee.TeamInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.gc.SslGcRefereeMessage.Referee.TeamInfo other) {
          if (other == proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasScore()) {
            setScore(other.getScore());
          }
          if (other.hasRedCards()) {
            setRedCards(other.getRedCards());
          }
          if (!other.yellowCardTimes_.isEmpty()) {
            if (yellowCardTimes_.isEmpty()) {
              yellowCardTimes_ = other.yellowCardTimes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureYellowCardTimesIsMutable();
              yellowCardTimes_.addAll(other.yellowCardTimes_);
            }
            onChanged();
          }
          if (other.hasYellowCards()) {
            setYellowCards(other.getYellowCards());
          }
          if (other.hasTimeouts()) {
            setTimeouts(other.getTimeouts());
          }
          if (other.hasTimeoutTime()) {
            setTimeoutTime(other.getTimeoutTime());
          }
          if (other.hasGoalkeeper()) {
            setGoalkeeper(other.getGoalkeeper());
          }
          if (other.hasFoulCounter()) {
            setFoulCounter(other.getFoulCounter());
          }
          if (other.hasBallPlacementFailures()) {
            setBallPlacementFailures(other.getBallPlacementFailures());
          }
          if (other.hasCanPlaceBall()) {
            setCanPlaceBall(other.getCanPlaceBall());
          }
          if (other.hasMaxAllowedBots()) {
            setMaxAllowedBots(other.getMaxAllowedBots());
          }
          if (other.hasBotSubstitutionIntent()) {
            setBotSubstitutionIntent(other.getBotSubstitutionIntent());
          }
          if (other.hasBallPlacementFailuresReached()) {
            setBallPlacementFailuresReached(other.getBallPlacementFailuresReached());
          }
          if (other.hasBotSubstitutionAllowed()) {
            setBotSubstitutionAllowed(other.getBotSubstitutionAllowed());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasName()) {
            return false;
          }
          if (!hasScore()) {
            return false;
          }
          if (!hasRedCards()) {
            return false;
          }
          if (!hasYellowCards()) {
            return false;
          }
          if (!hasTimeouts()) {
            return false;
          }
          if (!hasTimeoutTime()) {
            return false;
          }
          if (!hasGoalkeeper()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (proto.gc.SslGcRefereeMessage.Referee.TeamInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The team's name (empty string if operator has not typed anything).
         * </pre>
         *
         * <code>required string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private int score_ ;
        /**
         * <pre>
         * The number of goals scored by the team during normal play and overtime.
         * </pre>
         *
         * <code>required uint32 score = 2;</code>
         * @return Whether the score field is set.
         */
        @java.lang.Override
        public boolean hasScore() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The number of goals scored by the team during normal play and overtime.
         * </pre>
         *
         * <code>required uint32 score = 2;</code>
         * @return The score.
         */
        @java.lang.Override
        public int getScore() {
          return score_;
        }
        /**
         * <pre>
         * The number of goals scored by the team during normal play and overtime.
         * </pre>
         *
         * <code>required uint32 score = 2;</code>
         * @param value The score to set.
         * @return This builder for chaining.
         */
        public Builder setScore(int value) {
          bitField0_ |= 0x00000002;
          score_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of goals scored by the team during normal play and overtime.
         * </pre>
         *
         * <code>required uint32 score = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearScore() {
          bitField0_ = (bitField0_ & ~0x00000002);
          score_ = 0;
          onChanged();
          return this;
        }

        private int redCards_ ;
        /**
         * <pre>
         * The number of red cards issued to the team since the beginning of the game.
         * </pre>
         *
         * <code>required uint32 red_cards = 3;</code>
         * @return Whether the redCards field is set.
         */
        @java.lang.Override
        public boolean hasRedCards() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The number of red cards issued to the team since the beginning of the game.
         * </pre>
         *
         * <code>required uint32 red_cards = 3;</code>
         * @return The redCards.
         */
        @java.lang.Override
        public int getRedCards() {
          return redCards_;
        }
        /**
         * <pre>
         * The number of red cards issued to the team since the beginning of the game.
         * </pre>
         *
         * <code>required uint32 red_cards = 3;</code>
         * @param value The redCards to set.
         * @return This builder for chaining.
         */
        public Builder setRedCards(int value) {
          bitField0_ |= 0x00000004;
          redCards_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of red cards issued to the team since the beginning of the game.
         * </pre>
         *
         * <code>required uint32 red_cards = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearRedCards() {
          bitField0_ = (bitField0_ & ~0x00000004);
          redCards_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList yellowCardTimes_ = emptyIntList();
        private void ensureYellowCardTimesIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            yellowCardTimes_ = mutableCopy(yellowCardTimes_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @return A list containing the yellowCardTimes.
         */
        public java.util.List<java.lang.Integer>
            getYellowCardTimesList() {
          return ((bitField0_ & 0x00000008) != 0) ?
                   java.util.Collections.unmodifiableList(yellowCardTimes_) : yellowCardTimes_;
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @return The count of yellowCardTimes.
         */
        public int getYellowCardTimesCount() {
          return yellowCardTimes_.size();
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The yellowCardTimes at the given index.
         */
        public int getYellowCardTimes(int index) {
          return yellowCardTimes_.getInt(index);
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The yellowCardTimes to set.
         * @return This builder for chaining.
         */
        public Builder setYellowCardTimes(
            int index, int value) {
          ensureYellowCardTimesIsMutable();
          yellowCardTimes_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @param value The yellowCardTimes to add.
         * @return This builder for chaining.
         */
        public Builder addYellowCardTimes(int value) {
          ensureYellowCardTimesIsMutable();
          yellowCardTimes_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @param values The yellowCardTimes to add.
         * @return This builder for chaining.
         */
        public Builder addAllYellowCardTimes(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureYellowCardTimesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, yellowCardTimes_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The amount of time (in microseconds) left on each yellow card issued to the team.
         * If no yellow cards are issued, this array has no elements.
         * Otherwise, times are ordered from smallest to largest.
         * </pre>
         *
         * <code>repeated uint32 yellow_card_times = 4 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearYellowCardTimes() {
          yellowCardTimes_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private int yellowCards_ ;
        /**
         * <pre>
         * The total number of yellow cards ever issued to the team.
         * </pre>
         *
         * <code>required uint32 yellow_cards = 5;</code>
         * @return Whether the yellowCards field is set.
         */
        @java.lang.Override
        public boolean hasYellowCards() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * The total number of yellow cards ever issued to the team.
         * </pre>
         *
         * <code>required uint32 yellow_cards = 5;</code>
         * @return The yellowCards.
         */
        @java.lang.Override
        public int getYellowCards() {
          return yellowCards_;
        }
        /**
         * <pre>
         * The total number of yellow cards ever issued to the team.
         * </pre>
         *
         * <code>required uint32 yellow_cards = 5;</code>
         * @param value The yellowCards to set.
         * @return This builder for chaining.
         */
        public Builder setYellowCards(int value) {
          bitField0_ |= 0x00000010;
          yellowCards_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The total number of yellow cards ever issued to the team.
         * </pre>
         *
         * <code>required uint32 yellow_cards = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearYellowCards() {
          bitField0_ = (bitField0_ & ~0x00000010);
          yellowCards_ = 0;
          onChanged();
          return this;
        }

        private int timeouts_ ;
        /**
         * <pre>
         * The number of timeouts this team can still call.
         * If in a timeout right now, that timeout is excluded.
         * </pre>
         *
         * <code>required uint32 timeouts = 6;</code>
         * @return Whether the timeouts field is set.
         */
        @java.lang.Override
        public boolean hasTimeouts() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * The number of timeouts this team can still call.
         * If in a timeout right now, that timeout is excluded.
         * </pre>
         *
         * <code>required uint32 timeouts = 6;</code>
         * @return The timeouts.
         */
        @java.lang.Override
        public int getTimeouts() {
          return timeouts_;
        }
        /**
         * <pre>
         * The number of timeouts this team can still call.
         * If in a timeout right now, that timeout is excluded.
         * </pre>
         *
         * <code>required uint32 timeouts = 6;</code>
         * @param value The timeouts to set.
         * @return This builder for chaining.
         */
        public Builder setTimeouts(int value) {
          bitField0_ |= 0x00000020;
          timeouts_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of timeouts this team can still call.
         * If in a timeout right now, that timeout is excluded.
         * </pre>
         *
         * <code>required uint32 timeouts = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeouts() {
          bitField0_ = (bitField0_ & ~0x00000020);
          timeouts_ = 0;
          onChanged();
          return this;
        }

        private int timeoutTime_ ;
        /**
         * <pre>
         * The number of microseconds of timeout this team can use.
         * </pre>
         *
         * <code>required uint32 timeout_time = 7;</code>
         * @return Whether the timeoutTime field is set.
         */
        @java.lang.Override
        public boolean hasTimeoutTime() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * The number of microseconds of timeout this team can use.
         * </pre>
         *
         * <code>required uint32 timeout_time = 7;</code>
         * @return The timeoutTime.
         */
        @java.lang.Override
        public int getTimeoutTime() {
          return timeoutTime_;
        }
        /**
         * <pre>
         * The number of microseconds of timeout this team can use.
         * </pre>
         *
         * <code>required uint32 timeout_time = 7;</code>
         * @param value The timeoutTime to set.
         * @return This builder for chaining.
         */
        public Builder setTimeoutTime(int value) {
          bitField0_ |= 0x00000040;
          timeoutTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of microseconds of timeout this team can use.
         * </pre>
         *
         * <code>required uint32 timeout_time = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimeoutTime() {
          bitField0_ = (bitField0_ & ~0x00000040);
          timeoutTime_ = 0;
          onChanged();
          return this;
        }

        private int goalkeeper_ ;
        /**
         * <pre>
         * The pattern number of this team's goalkeeper.
         * </pre>
         *
         * <code>required uint32 goalkeeper = 8;</code>
         * @return Whether the goalkeeper field is set.
         */
        @java.lang.Override
        public boolean hasGoalkeeper() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * The pattern number of this team's goalkeeper.
         * </pre>
         *
         * <code>required uint32 goalkeeper = 8;</code>
         * @return The goalkeeper.
         */
        @java.lang.Override
        public int getGoalkeeper() {
          return goalkeeper_;
        }
        /**
         * <pre>
         * The pattern number of this team's goalkeeper.
         * </pre>
         *
         * <code>required uint32 goalkeeper = 8;</code>
         * @param value The goalkeeper to set.
         * @return This builder for chaining.
         */
        public Builder setGoalkeeper(int value) {
          bitField0_ |= 0x00000080;
          goalkeeper_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The pattern number of this team's goalkeeper.
         * </pre>
         *
         * <code>required uint32 goalkeeper = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearGoalkeeper() {
          bitField0_ = (bitField0_ & ~0x00000080);
          goalkeeper_ = 0;
          onChanged();
          return this;
        }

        private int foulCounter_ ;
        /**
         * <pre>
         * The total number of countable fouls that act towards yellow cards
         * </pre>
         *
         * <code>optional uint32 foul_counter = 9;</code>
         * @return Whether the foulCounter field is set.
         */
        @java.lang.Override
        public boolean hasFoulCounter() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * The total number of countable fouls that act towards yellow cards
         * </pre>
         *
         * <code>optional uint32 foul_counter = 9;</code>
         * @return The foulCounter.
         */
        @java.lang.Override
        public int getFoulCounter() {
          return foulCounter_;
        }
        /**
         * <pre>
         * The total number of countable fouls that act towards yellow cards
         * </pre>
         *
         * <code>optional uint32 foul_counter = 9;</code>
         * @param value The foulCounter to set.
         * @return This builder for chaining.
         */
        public Builder setFoulCounter(int value) {
          bitField0_ |= 0x00000100;
          foulCounter_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The total number of countable fouls that act towards yellow cards
         * </pre>
         *
         * <code>optional uint32 foul_counter = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearFoulCounter() {
          bitField0_ = (bitField0_ & ~0x00000100);
          foulCounter_ = 0;
          onChanged();
          return this;
        }

        private int ballPlacementFailures_ ;
        /**
         * <pre>
         * The number of consecutive ball placement failures of this team
         * </pre>
         *
         * <code>optional uint32 ball_placement_failures = 10;</code>
         * @return Whether the ballPlacementFailures field is set.
         */
        @java.lang.Override
        public boolean hasBallPlacementFailures() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * The number of consecutive ball placement failures of this team
         * </pre>
         *
         * <code>optional uint32 ball_placement_failures = 10;</code>
         * @return The ballPlacementFailures.
         */
        @java.lang.Override
        public int getBallPlacementFailures() {
          return ballPlacementFailures_;
        }
        /**
         * <pre>
         * The number of consecutive ball placement failures of this team
         * </pre>
         *
         * <code>optional uint32 ball_placement_failures = 10;</code>
         * @param value The ballPlacementFailures to set.
         * @return This builder for chaining.
         */
        public Builder setBallPlacementFailures(int value) {
          bitField0_ |= 0x00000200;
          ballPlacementFailures_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of consecutive ball placement failures of this team
         * </pre>
         *
         * <code>optional uint32 ball_placement_failures = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearBallPlacementFailures() {
          bitField0_ = (bitField0_ & ~0x00000200);
          ballPlacementFailures_ = 0;
          onChanged();
          return this;
        }

        private boolean canPlaceBall_ ;
        /**
         * <pre>
         * Indicate if the team is able and allowed to place the ball
         * </pre>
         *
         * <code>optional bool can_place_ball = 12;</code>
         * @return Whether the canPlaceBall field is set.
         */
        @java.lang.Override
        public boolean hasCanPlaceBall() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Indicate if the team is able and allowed to place the ball
         * </pre>
         *
         * <code>optional bool can_place_ball = 12;</code>
         * @return The canPlaceBall.
         */
        @java.lang.Override
        public boolean getCanPlaceBall() {
          return canPlaceBall_;
        }
        /**
         * <pre>
         * Indicate if the team is able and allowed to place the ball
         * </pre>
         *
         * <code>optional bool can_place_ball = 12;</code>
         * @param value The canPlaceBall to set.
         * @return This builder for chaining.
         */
        public Builder setCanPlaceBall(boolean value) {
          bitField0_ |= 0x00000400;
          canPlaceBall_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Indicate if the team is able and allowed to place the ball
         * </pre>
         *
         * <code>optional bool can_place_ball = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearCanPlaceBall() {
          bitField0_ = (bitField0_ & ~0x00000400);
          canPlaceBall_ = false;
          onChanged();
          return this;
        }

        private int maxAllowedBots_ ;
        /**
         * <pre>
         * The maximum number of bots allowed on the field based on division and cards
         * </pre>
         *
         * <code>optional uint32 max_allowed_bots = 13;</code>
         * @return Whether the maxAllowedBots field is set.
         */
        @java.lang.Override
        public boolean hasMaxAllowedBots() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * The maximum number of bots allowed on the field based on division and cards
         * </pre>
         *
         * <code>optional uint32 max_allowed_bots = 13;</code>
         * @return The maxAllowedBots.
         */
        @java.lang.Override
        public int getMaxAllowedBots() {
          return maxAllowedBots_;
        }
        /**
         * <pre>
         * The maximum number of bots allowed on the field based on division and cards
         * </pre>
         *
         * <code>optional uint32 max_allowed_bots = 13;</code>
         * @param value The maxAllowedBots to set.
         * @return This builder for chaining.
         */
        public Builder setMaxAllowedBots(int value) {
          bitField0_ |= 0x00000800;
          maxAllowedBots_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The maximum number of bots allowed on the field based on division and cards
         * </pre>
         *
         * <code>optional uint32 max_allowed_bots = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxAllowedBots() {
          bitField0_ = (bitField0_ & ~0x00000800);
          maxAllowedBots_ = 0;
          onChanged();
          return this;
        }

        private boolean botSubstitutionIntent_ ;
        /**
         * <pre>
         * The team has submitted an intent to substitute one or more robots at the next chance
         * </pre>
         *
         * <code>optional bool bot_substitution_intent = 14;</code>
         * @return Whether the botSubstitutionIntent field is set.
         */
        @java.lang.Override
        public boolean hasBotSubstitutionIntent() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * The team has submitted an intent to substitute one or more robots at the next chance
         * </pre>
         *
         * <code>optional bool bot_substitution_intent = 14;</code>
         * @return The botSubstitutionIntent.
         */
        @java.lang.Override
        public boolean getBotSubstitutionIntent() {
          return botSubstitutionIntent_;
        }
        /**
         * <pre>
         * The team has submitted an intent to substitute one or more robots at the next chance
         * </pre>
         *
         * <code>optional bool bot_substitution_intent = 14;</code>
         * @param value The botSubstitutionIntent to set.
         * @return This builder for chaining.
         */
        public Builder setBotSubstitutionIntent(boolean value) {
          bitField0_ |= 0x00001000;
          botSubstitutionIntent_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The team has submitted an intent to substitute one or more robots at the next chance
         * </pre>
         *
         * <code>optional bool bot_substitution_intent = 14;</code>
         * @return This builder for chaining.
         */
        public Builder clearBotSubstitutionIntent() {
          bitField0_ = (bitField0_ & ~0x00001000);
          botSubstitutionIntent_ = false;
          onChanged();
          return this;
        }

        private boolean ballPlacementFailuresReached_ ;
        /**
         * <pre>
         * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
         * </pre>
         *
         * <code>optional bool ball_placement_failures_reached = 15;</code>
         * @return Whether the ballPlacementFailuresReached field is set.
         */
        @java.lang.Override
        public boolean hasBallPlacementFailuresReached() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
         * </pre>
         *
         * <code>optional bool ball_placement_failures_reached = 15;</code>
         * @return The ballPlacementFailuresReached.
         */
        @java.lang.Override
        public boolean getBallPlacementFailuresReached() {
          return ballPlacementFailuresReached_;
        }
        /**
         * <pre>
         * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
         * </pre>
         *
         * <code>optional bool ball_placement_failures_reached = 15;</code>
         * @param value The ballPlacementFailuresReached to set.
         * @return This builder for chaining.
         */
        public Builder setBallPlacementFailuresReached(boolean value) {
          bitField0_ |= 0x00002000;
          ballPlacementFailuresReached_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Indicate if the team reached the maximum allowed ball placement failures and is thus not allowed to place the ball anymore
         * </pre>
         *
         * <code>optional bool ball_placement_failures_reached = 15;</code>
         * @return This builder for chaining.
         */
        public Builder clearBallPlacementFailuresReached() {
          bitField0_ = (bitField0_ & ~0x00002000);
          ballPlacementFailuresReached_ = false;
          onChanged();
          return this;
        }

        private boolean botSubstitutionAllowed_ ;
        /**
         * <pre>
         * The team is allowed to substitute one or more robots currently
         * </pre>
         *
         * <code>optional bool bot_substitution_allowed = 16;</code>
         * @return Whether the botSubstitutionAllowed field is set.
         */
        @java.lang.Override
        public boolean hasBotSubstitutionAllowed() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * The team is allowed to substitute one or more robots currently
         * </pre>
         *
         * <code>optional bool bot_substitution_allowed = 16;</code>
         * @return The botSubstitutionAllowed.
         */
        @java.lang.Override
        public boolean getBotSubstitutionAllowed() {
          return botSubstitutionAllowed_;
        }
        /**
         * <pre>
         * The team is allowed to substitute one or more robots currently
         * </pre>
         *
         * <code>optional bool bot_substitution_allowed = 16;</code>
         * @param value The botSubstitutionAllowed to set.
         * @return This builder for chaining.
         */
        public Builder setBotSubstitutionAllowed(boolean value) {
          bitField0_ |= 0x00004000;
          botSubstitutionAllowed_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The team is allowed to substitute one or more robots currently
         * </pre>
         *
         * <code>optional bool bot_substitution_allowed = 16;</code>
         * @return This builder for chaining.
         */
        public Builder clearBotSubstitutionAllowed() {
          bitField0_ = (bitField0_ & ~0x00004000);
          botSubstitutionAllowed_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:proto.gc.Referee.TeamInfo)
      }

      // @@protoc_insertion_point(class_scope:proto.gc.Referee.TeamInfo)
      private static final proto.gc.SslGcRefereeMessage.Referee.TeamInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.gc.SslGcRefereeMessage.Referee.TeamInfo();
      }

      public static proto.gc.SslGcRefereeMessage.Referee.TeamInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TeamInfo>
          PARSER = new com.google.protobuf.AbstractParser<TeamInfo>() {
        @java.lang.Override
        public TeamInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TeamInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TeamInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TeamInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PointOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.gc.Referee.Point)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required float x = 1;</code>
       * @return Whether the x field is set.
       */
      boolean hasX();
      /**
       * <code>required float x = 1;</code>
       * @return The x.
       */
      float getX();

      /**
       * <code>required float y = 2;</code>
       * @return Whether the y field is set.
       */
      boolean hasY();
      /**
       * <code>required float y = 2;</code>
       * @return The y.
       */
      float getY();
    }
    /**
     * <pre>
     * The coordinates of the Designated Position. These are measured in
     * millimetres and correspond to SSL-Vision coordinates. These fields are
     * always either both present (in the case of a ball placement command) or
     * both absent (in the case of any other command).
     * </pre>
     *
     * Protobuf type {@code proto.gc.Referee.Point}
     */
    public static final class Point extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:proto.gc.Referee.Point)
        PointOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Point.newBuilder() to construct.
      private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Point() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Point();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Point(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                bitField0_ |= 0x00000001;
                x_ = input.readFloat();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                y_ = input.readFloat();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRefereeMessage.Referee.Point.class, proto.gc.SslGcRefereeMessage.Referee.Point.Builder.class);
      }

      private int bitField0_;
      public static final int X_FIELD_NUMBER = 1;
      private float x_;
      /**
       * <code>required float x = 1;</code>
       * @return Whether the x field is set.
       */
      @java.lang.Override
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      /**
       * <code>required float y = 2;</code>
       * @return Whether the y field is set.
       */
      @java.lang.Override
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeFloat(1, x_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeFloat(2, y_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, x_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.gc.SslGcRefereeMessage.Referee.Point)) {
          return super.equals(obj);
        }
        proto.gc.SslGcRefereeMessage.Referee.Point other = (proto.gc.SslGcRefereeMessage.Referee.Point) obj;

        if (hasX() != other.hasX()) return false;
        if (hasX()) {
          if (java.lang.Float.floatToIntBits(getX())
              != java.lang.Float.floatToIntBits(
                  other.getX())) return false;
        }
        if (hasY() != other.hasY()) return false;
        if (hasY()) {
          if (java.lang.Float.floatToIntBits(getY())
              != java.lang.Float.floatToIntBits(
                  other.getY())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasX()) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getX());
        }
        if (hasY()) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getY());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.gc.SslGcRefereeMessage.Referee.Point parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.gc.SslGcRefereeMessage.Referee.Point prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The coordinates of the Designated Position. These are measured in
       * millimetres and correspond to SSL-Vision coordinates. These fields are
       * always either both present (in the case of a ball placement command) or
       * both absent (in the case of any other command).
       * </pre>
       *
       * Protobuf type {@code proto.gc.Referee.Point}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.gc.Referee.Point)
          proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_Point_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_Point_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.gc.SslGcRefereeMessage.Referee.Point.class, proto.gc.SslGcRefereeMessage.Referee.Point.Builder.class);
        }

        // Construct using proto.gc.SslGcRefereeMessage.Referee.Point.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_Point_descriptor;
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.Point getDefaultInstanceForType() {
          return proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance();
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.Point build() {
          proto.gc.SslGcRefereeMessage.Referee.Point result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.gc.SslGcRefereeMessage.Referee.Point buildPartial() {
          proto.gc.SslGcRefereeMessage.Referee.Point result = new proto.gc.SslGcRefereeMessage.Referee.Point(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.x_ = x_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.y_ = y_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.gc.SslGcRefereeMessage.Referee.Point) {
            return mergeFrom((proto.gc.SslGcRefereeMessage.Referee.Point)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.gc.SslGcRefereeMessage.Referee.Point other) {
          if (other == proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasX()) {
            return false;
          }
          if (!hasY()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          proto.gc.SslGcRefereeMessage.Referee.Point parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (proto.gc.SslGcRefereeMessage.Referee.Point) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private float x_ ;
        /**
         * <code>required float x = 1;</code>
         * @return Whether the x field is set.
         */
        @java.lang.Override
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required float x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }
        /**
         * <code>required float x = 1;</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(float value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float x = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0F;
          onChanged();
          return this;
        }

        private float y_ ;
        /**
         * <code>required float y = 2;</code>
         * @return Whether the y field is set.
         */
        @java.lang.Override
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required float y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }
        /**
         * <code>required float y = 2;</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(float value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float y = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0F;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:proto.gc.Referee.Point)
      }

      // @@protoc_insertion_point(class_scope:proto.gc.Referee.Point)
      private static final proto.gc.SslGcRefereeMessage.Referee.Point DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.gc.SslGcRefereeMessage.Referee.Point();
      }

      public static proto.gc.SslGcRefereeMessage.Referee.Point getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Point>
          PARSER = new com.google.protobuf.AbstractParser<Point>() {
        @java.lang.Override
        public Point parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Point(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Point> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Point> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee.Point getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int SOURCE_IDENTIFIER_FIELD_NUMBER = 18;
    private volatile java.lang.Object sourceIdentifier_;
    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return Whether the sourceIdentifier field is set.
     */
    @java.lang.Override
    public boolean hasSourceIdentifier() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return The sourceIdentifier.
     */
    @java.lang.Override
    public java.lang.String getSourceIdentifier() {
      java.lang.Object ref = sourceIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sourceIdentifier_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A random UUID of the source that is kept constant at the source while running
     * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
     * </pre>
     *
     * <code>optional string source_identifier = 18;</code>
     * @return The bytes for sourceIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceIdentifierBytes() {
      java.lang.Object ref = sourceIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MATCH_TYPE_FIELD_NUMBER = 19;
    private int matchType_;
    /**
     * <pre>
     * The match type is a meta information about the current match that helps to process the logs after a competition
     * </pre>
     *
     * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
     * @return Whether the matchType field is set.
     */
    @java.lang.Override public boolean hasMatchType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The match type is a meta information about the current match that helps to process the logs after a competition
     * </pre>
     *
     * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
     * @return The matchType.
     */
    @java.lang.Override public proto.gc.SslGcRefereeMessage.MatchType getMatchType() {
      @SuppressWarnings("deprecation")
      proto.gc.SslGcRefereeMessage.MatchType result = proto.gc.SslGcRefereeMessage.MatchType.valueOf(matchType_);
      return result == null ? proto.gc.SslGcRefereeMessage.MatchType.UNKNOWN_MATCH : result;
    }

    public static final int PACKET_TIMESTAMP_FIELD_NUMBER = 1;
    private long packetTimestamp_;
    /**
     * <pre>
     * The UNIX timestamp when the packet was sent, in microseconds.
     * Divide by 1,000,000 to get a time_t.
     * </pre>
     *
     * <code>required uint64 packet_timestamp = 1;</code>
     * @return Whether the packetTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasPacketTimestamp() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The UNIX timestamp when the packet was sent, in microseconds.
     * Divide by 1,000,000 to get a time_t.
     * </pre>
     *
     * <code>required uint64 packet_timestamp = 1;</code>
     * @return The packetTimestamp.
     */
    @java.lang.Override
    public long getPacketTimestamp() {
      return packetTimestamp_;
    }

    public static final int STAGE_FIELD_NUMBER = 2;
    private int stage_;
    /**
     * <code>required .proto.gc.Referee.Stage stage = 2;</code>
     * @return Whether the stage field is set.
     */
    @java.lang.Override public boolean hasStage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required .proto.gc.Referee.Stage stage = 2;</code>
     * @return The stage.
     */
    @java.lang.Override public proto.gc.SslGcRefereeMessage.Referee.Stage getStage() {
      @SuppressWarnings("deprecation")
      proto.gc.SslGcRefereeMessage.Referee.Stage result = proto.gc.SslGcRefereeMessage.Referee.Stage.valueOf(stage_);
      return result == null ? proto.gc.SslGcRefereeMessage.Referee.Stage.NORMAL_FIRST_HALF_PRE : result;
    }

    public static final int STAGE_TIME_LEFT_FIELD_NUMBER = 3;
    private long stageTimeLeft_;
    /**
     * <pre>
     * The number of microseconds left in the stage.
     * The following stages have this value; the rest do not:
     * NORMAL_FIRST_HALF
     * NORMAL_HALF_TIME
     * NORMAL_SECOND_HALF
     * EXTRA_TIME_BREAK
     * EXTRA_FIRST_HALF
     * EXTRA_HALF_TIME
     * EXTRA_SECOND_HALF
     * PENALTY_SHOOTOUT_BREAK
     * If the stage runs over its specified time, this value
     * becomes negative.
     * </pre>
     *
     * <code>optional sint64 stage_time_left = 3;</code>
     * @return Whether the stageTimeLeft field is set.
     */
    @java.lang.Override
    public boolean hasStageTimeLeft() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The number of microseconds left in the stage.
     * The following stages have this value; the rest do not:
     * NORMAL_FIRST_HALF
     * NORMAL_HALF_TIME
     * NORMAL_SECOND_HALF
     * EXTRA_TIME_BREAK
     * EXTRA_FIRST_HALF
     * EXTRA_HALF_TIME
     * EXTRA_SECOND_HALF
     * PENALTY_SHOOTOUT_BREAK
     * If the stage runs over its specified time, this value
     * becomes negative.
     * </pre>
     *
     * <code>optional sint64 stage_time_left = 3;</code>
     * @return The stageTimeLeft.
     */
    @java.lang.Override
    public long getStageTimeLeft() {
      return stageTimeLeft_;
    }

    public static final int COMMAND_FIELD_NUMBER = 4;
    private int command_;
    /**
     * <code>required .proto.gc.Referee.Command command = 4;</code>
     * @return Whether the command field is set.
     */
    @java.lang.Override public boolean hasCommand() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>required .proto.gc.Referee.Command command = 4;</code>
     * @return The command.
     */
    @java.lang.Override public proto.gc.SslGcRefereeMessage.Referee.Command getCommand() {
      @SuppressWarnings("deprecation")
      proto.gc.SslGcRefereeMessage.Referee.Command result = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(command_);
      return result == null ? proto.gc.SslGcRefereeMessage.Referee.Command.HALT : result;
    }

    public static final int COMMAND_COUNTER_FIELD_NUMBER = 5;
    private int commandCounter_;
    /**
     * <pre>
     * The number of commands issued since startup (mod 2^32).
     * </pre>
     *
     * <code>required uint32 command_counter = 5;</code>
     * @return Whether the commandCounter field is set.
     */
    @java.lang.Override
    public boolean hasCommandCounter() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The number of commands issued since startup (mod 2^32).
     * </pre>
     *
     * <code>required uint32 command_counter = 5;</code>
     * @return The commandCounter.
     */
    @java.lang.Override
    public int getCommandCounter() {
      return commandCounter_;
    }

    public static final int COMMAND_TIMESTAMP_FIELD_NUMBER = 6;
    private long commandTimestamp_;
    /**
     * <pre>
     * The UNIX timestamp when the command was issued, in microseconds.
     * This value changes only when a new command is issued, not on each packet.
     * </pre>
     *
     * <code>required uint64 command_timestamp = 6;</code>
     * @return Whether the commandTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasCommandTimestamp() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The UNIX timestamp when the command was issued, in microseconds.
     * This value changes only when a new command is issued, not on each packet.
     * </pre>
     *
     * <code>required uint64 command_timestamp = 6;</code>
     * @return The commandTimestamp.
     */
    @java.lang.Override
    public long getCommandTimestamp() {
      return commandTimestamp_;
    }

    public static final int YELLOW_FIELD_NUMBER = 7;
    private proto.gc.SslGcRefereeMessage.Referee.TeamInfo yellow_;
    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     * @return Whether the yellow field is set.
     */
    @java.lang.Override
    public boolean hasYellow() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     * @return The yellow.
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getYellow() {
      return yellow_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : yellow_;
    }
    /**
     * <pre>
     * Information about the two teams.
     * </pre>
     *
     * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getYellowOrBuilder() {
      return yellow_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : yellow_;
    }

    public static final int BLUE_FIELD_NUMBER = 8;
    private proto.gc.SslGcRefereeMessage.Referee.TeamInfo blue_;
    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     * @return Whether the blue field is set.
     */
    @java.lang.Override
    public boolean hasBlue() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     * @return The blue.
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getBlue() {
      return blue_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : blue_;
    }
    /**
     * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getBlueOrBuilder() {
      return blue_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : blue_;
    }

    public static final int DESIGNATED_POSITION_FIELD_NUMBER = 9;
    private proto.gc.SslGcRefereeMessage.Referee.Point designatedPosition_;
    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     * @return Whether the designatedPosition field is set.
     */
    @java.lang.Override
    public boolean hasDesignatedPosition() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     * @return The designatedPosition.
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.Point getDesignatedPosition() {
      return designatedPosition_ == null ? proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance() : designatedPosition_;
    }
    /**
     * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder getDesignatedPositionOrBuilder() {
      return designatedPosition_ == null ? proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance() : designatedPosition_;
    }

    public static final int BLUE_TEAM_ON_POSITIVE_HALF_FIELD_NUMBER = 10;
    private boolean blueTeamOnPositiveHalf_;
    /**
     * <pre>
     * Information about the direction of play.
     * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
     * Obviously, the yellow team will play on the opposite half.
     * </pre>
     *
     * <code>optional bool blue_team_on_positive_half = 10;</code>
     * @return Whether the blueTeamOnPositiveHalf field is set.
     */
    @java.lang.Override
    public boolean hasBlueTeamOnPositiveHalf() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * Information about the direction of play.
     * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
     * Obviously, the yellow team will play on the opposite half.
     * </pre>
     *
     * <code>optional bool blue_team_on_positive_half = 10;</code>
     * @return The blueTeamOnPositiveHalf.
     */
    @java.lang.Override
    public boolean getBlueTeamOnPositiveHalf() {
      return blueTeamOnPositiveHalf_;
    }

    public static final int NEXT_COMMAND_FIELD_NUMBER = 12;
    private int nextCommand_;
    /**
     * <pre>
     * The command that will be issued after the current stoppage and ball placement to continue the game.
     * </pre>
     *
     * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
     * @return Whether the nextCommand field is set.
     */
    @java.lang.Override public boolean hasNextCommand() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The command that will be issued after the current stoppage and ball placement to continue the game.
     * </pre>
     *
     * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
     * @return The nextCommand.
     */
    @java.lang.Override public proto.gc.SslGcRefereeMessage.Referee.Command getNextCommand() {
      @SuppressWarnings("deprecation")
      proto.gc.SslGcRefereeMessage.Referee.Command result = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(nextCommand_);
      return result == null ? proto.gc.SslGcRefereeMessage.Referee.Command.HALT : result;
    }

    public static final int GAME_EVENTS_FIELD_NUMBER = 16;
    private java.util.List<proto.gc.SslGcGameEvent.GameEvent> gameEvents_;
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    @java.lang.Override
    public java.util.List<proto.gc.SslGcGameEvent.GameEvent> getGameEventsList() {
      return gameEvents_;
    }
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
        getGameEventsOrBuilderList() {
      return gameEvents_;
    }
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    @java.lang.Override
    public int getGameEventsCount() {
      return gameEvents_.size();
    }
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index) {
      return gameEvents_.get(index);
    }
    /**
     * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
        int index) {
      return gameEvents_.get(index);
    }

    public static final int GAME_EVENT_PROPOSALS_FIELD_NUMBER = 17;
    private java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup> gameEventProposals_;
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    @java.lang.Override
    public java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup> getGameEventProposalsList() {
      return gameEventProposals_;
    }
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder> 
        getGameEventProposalsOrBuilderList() {
      return gameEventProposals_;
    }
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    @java.lang.Override
    public int getGameEventProposalsCount() {
      return gameEventProposals_.size();
    }
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.GameEventProposalGroup getGameEventProposals(int index) {
      return gameEventProposals_.get(index);
    }
    /**
     * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder getGameEventProposalsOrBuilder(
        int index) {
      return gameEventProposals_.get(index);
    }

    public static final int CURRENT_ACTION_TIME_REMAINING_FIELD_NUMBER = 15;
    private long currentActionTimeRemaining_;
    /**
     * <pre>
     * The time in microseconds that is remaining until the current action times out
     * The time will not be reset. It can get negative.
     * An autoRef would raise an appropriate event, if the time gets negative.
     * Possible actions where this time is relevant:
     *  * free kicks
     *  * kickoff, penalty kick, force start
     *  * ball placement
     * </pre>
     *
     * <code>optional int64 current_action_time_remaining = 15;</code>
     * @return Whether the currentActionTimeRemaining field is set.
     */
    @java.lang.Override
    public boolean hasCurrentActionTimeRemaining() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * The time in microseconds that is remaining until the current action times out
     * The time will not be reset. It can get negative.
     * An autoRef would raise an appropriate event, if the time gets negative.
     * Possible actions where this time is relevant:
     *  * free kicks
     *  * kickoff, penalty kick, force start
     *  * ball placement
     * </pre>
     *
     * <code>optional int64 current_action_time_remaining = 15;</code>
     * @return The currentActionTimeRemaining.
     */
    @java.lang.Override
    public long getCurrentActionTimeRemaining() {
      return currentActionTimeRemaining_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPacketTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommand()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandCounter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYellow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getYellow().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBlue().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasDesignatedPosition()) {
        if (!getDesignatedPosition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGameEventsCount(); i++) {
        if (!getGameEvents(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGameEventProposalsCount(); i++) {
        if (!getGameEventProposals(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(1, packetTimestamp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(2, stage_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeSInt64(3, stageTimeLeft_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeEnum(4, command_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(5, commandCounter_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt64(6, commandTimestamp_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(7, getYellow());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(8, getBlue());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(9, getDesignatedPosition());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(10, blueTeamOnPositiveHalf_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeEnum(12, nextCommand_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt64(15, currentActionTimeRemaining_);
      }
      for (int i = 0; i < gameEvents_.size(); i++) {
        output.writeMessage(16, gameEvents_.get(i));
      }
      for (int i = 0; i < gameEventProposals_.size(); i++) {
        output.writeMessage(17, gameEventProposals_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, sourceIdentifier_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(19, matchType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, packetTimestamp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, stage_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, stageTimeLeft_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, command_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, commandCounter_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, commandTimestamp_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getYellow());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getBlue());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getDesignatedPosition());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, blueTeamOnPositiveHalf_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, nextCommand_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, currentActionTimeRemaining_);
      }
      for (int i = 0; i < gameEvents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, gameEvents_.get(i));
      }
      for (int i = 0; i < gameEventProposals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, gameEventProposals_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, sourceIdentifier_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, matchType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.gc.SslGcRefereeMessage.Referee)) {
        return super.equals(obj);
      }
      proto.gc.SslGcRefereeMessage.Referee other = (proto.gc.SslGcRefereeMessage.Referee) obj;

      if (hasSourceIdentifier() != other.hasSourceIdentifier()) return false;
      if (hasSourceIdentifier()) {
        if (!getSourceIdentifier()
            .equals(other.getSourceIdentifier())) return false;
      }
      if (hasMatchType() != other.hasMatchType()) return false;
      if (hasMatchType()) {
        if (matchType_ != other.matchType_) return false;
      }
      if (hasPacketTimestamp() != other.hasPacketTimestamp()) return false;
      if (hasPacketTimestamp()) {
        if (getPacketTimestamp()
            != other.getPacketTimestamp()) return false;
      }
      if (hasStage() != other.hasStage()) return false;
      if (hasStage()) {
        if (stage_ != other.stage_) return false;
      }
      if (hasStageTimeLeft() != other.hasStageTimeLeft()) return false;
      if (hasStageTimeLeft()) {
        if (getStageTimeLeft()
            != other.getStageTimeLeft()) return false;
      }
      if (hasCommand() != other.hasCommand()) return false;
      if (hasCommand()) {
        if (command_ != other.command_) return false;
      }
      if (hasCommandCounter() != other.hasCommandCounter()) return false;
      if (hasCommandCounter()) {
        if (getCommandCounter()
            != other.getCommandCounter()) return false;
      }
      if (hasCommandTimestamp() != other.hasCommandTimestamp()) return false;
      if (hasCommandTimestamp()) {
        if (getCommandTimestamp()
            != other.getCommandTimestamp()) return false;
      }
      if (hasYellow() != other.hasYellow()) return false;
      if (hasYellow()) {
        if (!getYellow()
            .equals(other.getYellow())) return false;
      }
      if (hasBlue() != other.hasBlue()) return false;
      if (hasBlue()) {
        if (!getBlue()
            .equals(other.getBlue())) return false;
      }
      if (hasDesignatedPosition() != other.hasDesignatedPosition()) return false;
      if (hasDesignatedPosition()) {
        if (!getDesignatedPosition()
            .equals(other.getDesignatedPosition())) return false;
      }
      if (hasBlueTeamOnPositiveHalf() != other.hasBlueTeamOnPositiveHalf()) return false;
      if (hasBlueTeamOnPositiveHalf()) {
        if (getBlueTeamOnPositiveHalf()
            != other.getBlueTeamOnPositiveHalf()) return false;
      }
      if (hasNextCommand() != other.hasNextCommand()) return false;
      if (hasNextCommand()) {
        if (nextCommand_ != other.nextCommand_) return false;
      }
      if (!getGameEventsList()
          .equals(other.getGameEventsList())) return false;
      if (!getGameEventProposalsList()
          .equals(other.getGameEventProposalsList())) return false;
      if (hasCurrentActionTimeRemaining() != other.hasCurrentActionTimeRemaining()) return false;
      if (hasCurrentActionTimeRemaining()) {
        if (getCurrentActionTimeRemaining()
            != other.getCurrentActionTimeRemaining()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSourceIdentifier()) {
        hash = (37 * hash) + SOURCE_IDENTIFIER_FIELD_NUMBER;
        hash = (53 * hash) + getSourceIdentifier().hashCode();
      }
      if (hasMatchType()) {
        hash = (37 * hash) + MATCH_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + matchType_;
      }
      if (hasPacketTimestamp()) {
        hash = (37 * hash) + PACKET_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPacketTimestamp());
      }
      if (hasStage()) {
        hash = (37 * hash) + STAGE_FIELD_NUMBER;
        hash = (53 * hash) + stage_;
      }
      if (hasStageTimeLeft()) {
        hash = (37 * hash) + STAGE_TIME_LEFT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStageTimeLeft());
      }
      if (hasCommand()) {
        hash = (37 * hash) + COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + command_;
      }
      if (hasCommandCounter()) {
        hash = (37 * hash) + COMMAND_COUNTER_FIELD_NUMBER;
        hash = (53 * hash) + getCommandCounter();
      }
      if (hasCommandTimestamp()) {
        hash = (37 * hash) + COMMAND_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCommandTimestamp());
      }
      if (hasYellow()) {
        hash = (37 * hash) + YELLOW_FIELD_NUMBER;
        hash = (53 * hash) + getYellow().hashCode();
      }
      if (hasBlue()) {
        hash = (37 * hash) + BLUE_FIELD_NUMBER;
        hash = (53 * hash) + getBlue().hashCode();
      }
      if (hasDesignatedPosition()) {
        hash = (37 * hash) + DESIGNATED_POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getDesignatedPosition().hashCode();
      }
      if (hasBlueTeamOnPositiveHalf()) {
        hash = (37 * hash) + BLUE_TEAM_ON_POSITIVE_HALF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBlueTeamOnPositiveHalf());
      }
      if (hasNextCommand()) {
        hash = (37 * hash) + NEXT_COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + nextCommand_;
      }
      if (getGameEventsCount() > 0) {
        hash = (37 * hash) + GAME_EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getGameEventsList().hashCode();
      }
      if (getGameEventProposalsCount() > 0) {
        hash = (37 * hash) + GAME_EVENT_PROPOSALS_FIELD_NUMBER;
        hash = (53 * hash) + getGameEventProposalsList().hashCode();
      }
      if (hasCurrentActionTimeRemaining()) {
        hash = (37 * hash) + CURRENT_ACTION_TIME_REMAINING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCurrentActionTimeRemaining());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.Referee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.gc.SslGcRefereeMessage.Referee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Each UDP packet contains one of these messages.
     * </pre>
     *
     * Protobuf type {@code proto.gc.Referee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.gc.Referee)
        proto.gc.SslGcRefereeMessage.RefereeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRefereeMessage.Referee.class, proto.gc.SslGcRefereeMessage.Referee.Builder.class);
      }

      // Construct using proto.gc.SslGcRefereeMessage.Referee.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getYellowFieldBuilder();
          getBlueFieldBuilder();
          getDesignatedPositionFieldBuilder();
          getGameEventsFieldBuilder();
          getGameEventProposalsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sourceIdentifier_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        matchType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        packetTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        stage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        stageTimeLeft_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        command_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        commandCounter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        commandTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (yellowBuilder_ == null) {
          yellow_ = null;
        } else {
          yellowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (blueBuilder_ == null) {
          blue_ = null;
        } else {
          blueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (designatedPositionBuilder_ == null) {
          designatedPosition_ = null;
        } else {
          designatedPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        blueTeamOnPositiveHalf_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        nextCommand_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (gameEventsBuilder_ == null) {
          gameEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          gameEventsBuilder_.clear();
        }
        if (gameEventProposalsBuilder_ == null) {
          gameEventProposals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          gameEventProposalsBuilder_.clear();
        }
        currentActionTimeRemaining_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_Referee_descriptor;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee getDefaultInstanceForType() {
        return proto.gc.SslGcRefereeMessage.Referee.getDefaultInstance();
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee build() {
        proto.gc.SslGcRefereeMessage.Referee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee buildPartial() {
        proto.gc.SslGcRefereeMessage.Referee result = new proto.gc.SslGcRefereeMessage.Referee(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sourceIdentifier_ = sourceIdentifier_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchType_ = matchType_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.packetTimestamp_ = packetTimestamp_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stage_ = stage_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.stageTimeLeft_ = stageTimeLeft_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.command_ = command_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.commandCounter_ = commandCounter_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.commandTimestamp_ = commandTimestamp_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          if (yellowBuilder_ == null) {
            result.yellow_ = yellow_;
          } else {
            result.yellow_ = yellowBuilder_.build();
          }
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          if (blueBuilder_ == null) {
            result.blue_ = blue_;
          } else {
            result.blue_ = blueBuilder_.build();
          }
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          if (designatedPositionBuilder_ == null) {
            result.designatedPosition_ = designatedPosition_;
          } else {
            result.designatedPosition_ = designatedPositionBuilder_.build();
          }
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.blueTeamOnPositiveHalf_ = blueTeamOnPositiveHalf_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          to_bitField0_ |= 0x00001000;
        }
        result.nextCommand_ = nextCommand_;
        if (gameEventsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            gameEvents_ = java.util.Collections.unmodifiableList(gameEvents_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.gameEvents_ = gameEvents_;
        } else {
          result.gameEvents_ = gameEventsBuilder_.build();
        }
        if (gameEventProposalsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0)) {
            gameEventProposals_ = java.util.Collections.unmodifiableList(gameEventProposals_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.gameEventProposals_ = gameEventProposals_;
        } else {
          result.gameEventProposals_ = gameEventProposalsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.currentActionTimeRemaining_ = currentActionTimeRemaining_;
          to_bitField0_ |= 0x00002000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.gc.SslGcRefereeMessage.Referee) {
          return mergeFrom((proto.gc.SslGcRefereeMessage.Referee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.gc.SslGcRefereeMessage.Referee other) {
        if (other == proto.gc.SslGcRefereeMessage.Referee.getDefaultInstance()) return this;
        if (other.hasSourceIdentifier()) {
          bitField0_ |= 0x00000001;
          sourceIdentifier_ = other.sourceIdentifier_;
          onChanged();
        }
        if (other.hasMatchType()) {
          setMatchType(other.getMatchType());
        }
        if (other.hasPacketTimestamp()) {
          setPacketTimestamp(other.getPacketTimestamp());
        }
        if (other.hasStage()) {
          setStage(other.getStage());
        }
        if (other.hasStageTimeLeft()) {
          setStageTimeLeft(other.getStageTimeLeft());
        }
        if (other.hasCommand()) {
          setCommand(other.getCommand());
        }
        if (other.hasCommandCounter()) {
          setCommandCounter(other.getCommandCounter());
        }
        if (other.hasCommandTimestamp()) {
          setCommandTimestamp(other.getCommandTimestamp());
        }
        if (other.hasYellow()) {
          mergeYellow(other.getYellow());
        }
        if (other.hasBlue()) {
          mergeBlue(other.getBlue());
        }
        if (other.hasDesignatedPosition()) {
          mergeDesignatedPosition(other.getDesignatedPosition());
        }
        if (other.hasBlueTeamOnPositiveHalf()) {
          setBlueTeamOnPositiveHalf(other.getBlueTeamOnPositiveHalf());
        }
        if (other.hasNextCommand()) {
          setNextCommand(other.getNextCommand());
        }
        if (gameEventsBuilder_ == null) {
          if (!other.gameEvents_.isEmpty()) {
            if (gameEvents_.isEmpty()) {
              gameEvents_ = other.gameEvents_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureGameEventsIsMutable();
              gameEvents_.addAll(other.gameEvents_);
            }
            onChanged();
          }
        } else {
          if (!other.gameEvents_.isEmpty()) {
            if (gameEventsBuilder_.isEmpty()) {
              gameEventsBuilder_.dispose();
              gameEventsBuilder_ = null;
              gameEvents_ = other.gameEvents_;
              bitField0_ = (bitField0_ & ~0x00002000);
              gameEventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGameEventsFieldBuilder() : null;
            } else {
              gameEventsBuilder_.addAllMessages(other.gameEvents_);
            }
          }
        }
        if (gameEventProposalsBuilder_ == null) {
          if (!other.gameEventProposals_.isEmpty()) {
            if (gameEventProposals_.isEmpty()) {
              gameEventProposals_ = other.gameEventProposals_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureGameEventProposalsIsMutable();
              gameEventProposals_.addAll(other.gameEventProposals_);
            }
            onChanged();
          }
        } else {
          if (!other.gameEventProposals_.isEmpty()) {
            if (gameEventProposalsBuilder_.isEmpty()) {
              gameEventProposalsBuilder_.dispose();
              gameEventProposalsBuilder_ = null;
              gameEventProposals_ = other.gameEventProposals_;
              bitField0_ = (bitField0_ & ~0x00004000);
              gameEventProposalsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGameEventProposalsFieldBuilder() : null;
            } else {
              gameEventProposalsBuilder_.addAllMessages(other.gameEventProposals_);
            }
          }
        }
        if (other.hasCurrentActionTimeRemaining()) {
          setCurrentActionTimeRemaining(other.getCurrentActionTimeRemaining());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPacketTimestamp()) {
          return false;
        }
        if (!hasStage()) {
          return false;
        }
        if (!hasCommand()) {
          return false;
        }
        if (!hasCommandCounter()) {
          return false;
        }
        if (!hasCommandTimestamp()) {
          return false;
        }
        if (!hasYellow()) {
          return false;
        }
        if (!hasBlue()) {
          return false;
        }
        if (!getYellow().isInitialized()) {
          return false;
        }
        if (!getBlue().isInitialized()) {
          return false;
        }
        if (hasDesignatedPosition()) {
          if (!getDesignatedPosition().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getGameEventsCount(); i++) {
          if (!getGameEvents(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getGameEventProposalsCount(); i++) {
          if (!getGameEventProposals(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.gc.SslGcRefereeMessage.Referee parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.gc.SslGcRefereeMessage.Referee) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object sourceIdentifier_ = "";
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @return Whether the sourceIdentifier field is set.
       */
      public boolean hasSourceIdentifier() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @return The sourceIdentifier.
       */
      public java.lang.String getSourceIdentifier() {
        java.lang.Object ref = sourceIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sourceIdentifier_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @return The bytes for sourceIdentifier.
       */
      public com.google.protobuf.ByteString
          getSourceIdentifierBytes() {
        java.lang.Object ref = sourceIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @param value The sourceIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setSourceIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceIdentifier_ = getDefaultInstance().getSourceIdentifier();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A random UUID of the source that is kept constant at the source while running
       * If multiple sources are broadcasting to the same network, this id can be used to identify individual sources
       * </pre>
       *
       * <code>optional string source_identifier = 18;</code>
       * @param value The bytes for sourceIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setSourceIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sourceIdentifier_ = value;
        onChanged();
        return this;
      }

      private int matchType_ = 0;
      /**
       * <pre>
       * The match type is a meta information about the current match that helps to process the logs after a competition
       * </pre>
       *
       * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
       * @return Whether the matchType field is set.
       */
      @java.lang.Override public boolean hasMatchType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The match type is a meta information about the current match that helps to process the logs after a competition
       * </pre>
       *
       * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
       * @return The matchType.
       */
      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.MatchType getMatchType() {
        @SuppressWarnings("deprecation")
        proto.gc.SslGcRefereeMessage.MatchType result = proto.gc.SslGcRefereeMessage.MatchType.valueOf(matchType_);
        return result == null ? proto.gc.SslGcRefereeMessage.MatchType.UNKNOWN_MATCH : result;
      }
      /**
       * <pre>
       * The match type is a meta information about the current match that helps to process the logs after a competition
       * </pre>
       *
       * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
       * @param value The matchType to set.
       * @return This builder for chaining.
       */
      public Builder setMatchType(proto.gc.SslGcRefereeMessage.MatchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        matchType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The match type is a meta information about the current match that helps to process the logs after a competition
       * </pre>
       *
       * <code>optional .proto.gc.MatchType match_type = 19 [default = UNKNOWN_MATCH];</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchType_ = 0;
        onChanged();
        return this;
      }

      private long packetTimestamp_ ;
      /**
       * <pre>
       * The UNIX timestamp when the packet was sent, in microseconds.
       * Divide by 1,000,000 to get a time_t.
       * </pre>
       *
       * <code>required uint64 packet_timestamp = 1;</code>
       * @return Whether the packetTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasPacketTimestamp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The UNIX timestamp when the packet was sent, in microseconds.
       * Divide by 1,000,000 to get a time_t.
       * </pre>
       *
       * <code>required uint64 packet_timestamp = 1;</code>
       * @return The packetTimestamp.
       */
      @java.lang.Override
      public long getPacketTimestamp() {
        return packetTimestamp_;
      }
      /**
       * <pre>
       * The UNIX timestamp when the packet was sent, in microseconds.
       * Divide by 1,000,000 to get a time_t.
       * </pre>
       *
       * <code>required uint64 packet_timestamp = 1;</code>
       * @param value The packetTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setPacketTimestamp(long value) {
        bitField0_ |= 0x00000004;
        packetTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The UNIX timestamp when the packet was sent, in microseconds.
       * Divide by 1,000,000 to get a time_t.
       * </pre>
       *
       * <code>required uint64 packet_timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPacketTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        packetTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private int stage_ = 0;
      /**
       * <code>required .proto.gc.Referee.Stage stage = 2;</code>
       * @return Whether the stage field is set.
       */
      @java.lang.Override public boolean hasStage() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required .proto.gc.Referee.Stage stage = 2;</code>
       * @return The stage.
       */
      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee.Stage getStage() {
        @SuppressWarnings("deprecation")
        proto.gc.SslGcRefereeMessage.Referee.Stage result = proto.gc.SslGcRefereeMessage.Referee.Stage.valueOf(stage_);
        return result == null ? proto.gc.SslGcRefereeMessage.Referee.Stage.NORMAL_FIRST_HALF_PRE : result;
      }
      /**
       * <code>required .proto.gc.Referee.Stage stage = 2;</code>
       * @param value The stage to set.
       * @return This builder for chaining.
       */
      public Builder setStage(proto.gc.SslGcRefereeMessage.Referee.Stage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        stage_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.Stage stage = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stage_ = 0;
        onChanged();
        return this;
      }

      private long stageTimeLeft_ ;
      /**
       * <pre>
       * The number of microseconds left in the stage.
       * The following stages have this value; the rest do not:
       * NORMAL_FIRST_HALF
       * NORMAL_HALF_TIME
       * NORMAL_SECOND_HALF
       * EXTRA_TIME_BREAK
       * EXTRA_FIRST_HALF
       * EXTRA_HALF_TIME
       * EXTRA_SECOND_HALF
       * PENALTY_SHOOTOUT_BREAK
       * If the stage runs over its specified time, this value
       * becomes negative.
       * </pre>
       *
       * <code>optional sint64 stage_time_left = 3;</code>
       * @return Whether the stageTimeLeft field is set.
       */
      @java.lang.Override
      public boolean hasStageTimeLeft() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The number of microseconds left in the stage.
       * The following stages have this value; the rest do not:
       * NORMAL_FIRST_HALF
       * NORMAL_HALF_TIME
       * NORMAL_SECOND_HALF
       * EXTRA_TIME_BREAK
       * EXTRA_FIRST_HALF
       * EXTRA_HALF_TIME
       * EXTRA_SECOND_HALF
       * PENALTY_SHOOTOUT_BREAK
       * If the stage runs over its specified time, this value
       * becomes negative.
       * </pre>
       *
       * <code>optional sint64 stage_time_left = 3;</code>
       * @return The stageTimeLeft.
       */
      @java.lang.Override
      public long getStageTimeLeft() {
        return stageTimeLeft_;
      }
      /**
       * <pre>
       * The number of microseconds left in the stage.
       * The following stages have this value; the rest do not:
       * NORMAL_FIRST_HALF
       * NORMAL_HALF_TIME
       * NORMAL_SECOND_HALF
       * EXTRA_TIME_BREAK
       * EXTRA_FIRST_HALF
       * EXTRA_HALF_TIME
       * EXTRA_SECOND_HALF
       * PENALTY_SHOOTOUT_BREAK
       * If the stage runs over its specified time, this value
       * becomes negative.
       * </pre>
       *
       * <code>optional sint64 stage_time_left = 3;</code>
       * @param value The stageTimeLeft to set.
       * @return This builder for chaining.
       */
      public Builder setStageTimeLeft(long value) {
        bitField0_ |= 0x00000010;
        stageTimeLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of microseconds left in the stage.
       * The following stages have this value; the rest do not:
       * NORMAL_FIRST_HALF
       * NORMAL_HALF_TIME
       * NORMAL_SECOND_HALF
       * EXTRA_TIME_BREAK
       * EXTRA_FIRST_HALF
       * EXTRA_HALF_TIME
       * EXTRA_SECOND_HALF
       * PENALTY_SHOOTOUT_BREAK
       * If the stage runs over its specified time, this value
       * becomes negative.
       * </pre>
       *
       * <code>optional sint64 stage_time_left = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStageTimeLeft() {
        bitField0_ = (bitField0_ & ~0x00000010);
        stageTimeLeft_ = 0L;
        onChanged();
        return this;
      }

      private int command_ = 0;
      /**
       * <code>required .proto.gc.Referee.Command command = 4;</code>
       * @return Whether the command field is set.
       */
      @java.lang.Override public boolean hasCommand() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required .proto.gc.Referee.Command command = 4;</code>
       * @return The command.
       */
      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee.Command getCommand() {
        @SuppressWarnings("deprecation")
        proto.gc.SslGcRefereeMessage.Referee.Command result = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(command_);
        return result == null ? proto.gc.SslGcRefereeMessage.Referee.Command.HALT : result;
      }
      /**
       * <code>required .proto.gc.Referee.Command command = 4;</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(proto.gc.SslGcRefereeMessage.Referee.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.Command command = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        bitField0_ = (bitField0_ & ~0x00000020);
        command_ = 0;
        onChanged();
        return this;
      }

      private int commandCounter_ ;
      /**
       * <pre>
       * The number of commands issued since startup (mod 2^32).
       * </pre>
       *
       * <code>required uint32 command_counter = 5;</code>
       * @return Whether the commandCounter field is set.
       */
      @java.lang.Override
      public boolean hasCommandCounter() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The number of commands issued since startup (mod 2^32).
       * </pre>
       *
       * <code>required uint32 command_counter = 5;</code>
       * @return The commandCounter.
       */
      @java.lang.Override
      public int getCommandCounter() {
        return commandCounter_;
      }
      /**
       * <pre>
       * The number of commands issued since startup (mod 2^32).
       * </pre>
       *
       * <code>required uint32 command_counter = 5;</code>
       * @param value The commandCounter to set.
       * @return This builder for chaining.
       */
      public Builder setCommandCounter(int value) {
        bitField0_ |= 0x00000040;
        commandCounter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of commands issued since startup (mod 2^32).
       * </pre>
       *
       * <code>required uint32 command_counter = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommandCounter() {
        bitField0_ = (bitField0_ & ~0x00000040);
        commandCounter_ = 0;
        onChanged();
        return this;
      }

      private long commandTimestamp_ ;
      /**
       * <pre>
       * The UNIX timestamp when the command was issued, in microseconds.
       * This value changes only when a new command is issued, not on each packet.
       * </pre>
       *
       * <code>required uint64 command_timestamp = 6;</code>
       * @return Whether the commandTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasCommandTimestamp() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The UNIX timestamp when the command was issued, in microseconds.
       * This value changes only when a new command is issued, not on each packet.
       * </pre>
       *
       * <code>required uint64 command_timestamp = 6;</code>
       * @return The commandTimestamp.
       */
      @java.lang.Override
      public long getCommandTimestamp() {
        return commandTimestamp_;
      }
      /**
       * <pre>
       * The UNIX timestamp when the command was issued, in microseconds.
       * This value changes only when a new command is issued, not on each packet.
       * </pre>
       *
       * <code>required uint64 command_timestamp = 6;</code>
       * @param value The commandTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setCommandTimestamp(long value) {
        bitField0_ |= 0x00000080;
        commandTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The UNIX timestamp when the command was issued, in microseconds.
       * This value changes only when a new command is issued, not on each packet.
       * </pre>
       *
       * <code>required uint64 command_timestamp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommandTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        commandTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private proto.gc.SslGcRefereeMessage.Referee.TeamInfo yellow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder> yellowBuilder_;
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       * @return Whether the yellow field is set.
       */
      public boolean hasYellow() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       * @return The yellow.
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getYellow() {
        if (yellowBuilder_ == null) {
          return yellow_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : yellow_;
        } else {
          return yellowBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public Builder setYellow(proto.gc.SslGcRefereeMessage.Referee.TeamInfo value) {
        if (yellowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          yellow_ = value;
          onChanged();
        } else {
          yellowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public Builder setYellow(
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder builderForValue) {
        if (yellowBuilder_ == null) {
          yellow_ = builderForValue.build();
          onChanged();
        } else {
          yellowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public Builder mergeYellow(proto.gc.SslGcRefereeMessage.Referee.TeamInfo value) {
        if (yellowBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
              yellow_ != null &&
              yellow_ != proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance()) {
            yellow_ =
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.newBuilder(yellow_).mergeFrom(value).buildPartial();
          } else {
            yellow_ = value;
          }
          onChanged();
        } else {
          yellowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public Builder clearYellow() {
        if (yellowBuilder_ == null) {
          yellow_ = null;
          onChanged();
        } else {
          yellowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder getYellowBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getYellowFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getYellowOrBuilder() {
        if (yellowBuilder_ != null) {
          return yellowBuilder_.getMessageOrBuilder();
        } else {
          return yellow_ == null ?
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : yellow_;
        }
      }
      /**
       * <pre>
       * Information about the two teams.
       * </pre>
       *
       * <code>required .proto.gc.Referee.TeamInfo yellow = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder> 
          getYellowFieldBuilder() {
        if (yellowBuilder_ == null) {
          yellowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder>(
                  getYellow(),
                  getParentForChildren(),
                  isClean());
          yellow_ = null;
        }
        return yellowBuilder_;
      }

      private proto.gc.SslGcRefereeMessage.Referee.TeamInfo blue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder> blueBuilder_;
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       * @return Whether the blue field is set.
       */
      public boolean hasBlue() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       * @return The blue.
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfo getBlue() {
        if (blueBuilder_ == null) {
          return blue_ == null ? proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : blue_;
        } else {
          return blueBuilder_.getMessage();
        }
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public Builder setBlue(proto.gc.SslGcRefereeMessage.Referee.TeamInfo value) {
        if (blueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blue_ = value;
          onChanged();
        } else {
          blueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public Builder setBlue(
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder builderForValue) {
        if (blueBuilder_ == null) {
          blue_ = builderForValue.build();
          onChanged();
        } else {
          blueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public Builder mergeBlue(proto.gc.SslGcRefereeMessage.Referee.TeamInfo value) {
        if (blueBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
              blue_ != null &&
              blue_ != proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance()) {
            blue_ =
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.newBuilder(blue_).mergeFrom(value).buildPartial();
          } else {
            blue_ = value;
          }
          onChanged();
        } else {
          blueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public Builder clearBlue() {
        if (blueBuilder_ == null) {
          blue_ = null;
          onChanged();
        } else {
          blueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder getBlueBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getBlueFieldBuilder().getBuilder();
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder getBlueOrBuilder() {
        if (blueBuilder_ != null) {
          return blueBuilder_.getMessageOrBuilder();
        } else {
          return blue_ == null ?
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo.getDefaultInstance() : blue_;
        }
      }
      /**
       * <code>required .proto.gc.Referee.TeamInfo blue = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder> 
          getBlueFieldBuilder() {
        if (blueBuilder_ == null) {
          blueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRefereeMessage.Referee.TeamInfo, proto.gc.SslGcRefereeMessage.Referee.TeamInfo.Builder, proto.gc.SslGcRefereeMessage.Referee.TeamInfoOrBuilder>(
                  getBlue(),
                  getParentForChildren(),
                  isClean());
          blue_ = null;
        }
        return blueBuilder_;
      }

      private proto.gc.SslGcRefereeMessage.Referee.Point designatedPosition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.Point, proto.gc.SslGcRefereeMessage.Referee.Point.Builder, proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder> designatedPositionBuilder_;
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       * @return Whether the designatedPosition field is set.
       */
      public boolean hasDesignatedPosition() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       * @return The designatedPosition.
       */
      public proto.gc.SslGcRefereeMessage.Referee.Point getDesignatedPosition() {
        if (designatedPositionBuilder_ == null) {
          return designatedPosition_ == null ? proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance() : designatedPosition_;
        } else {
          return designatedPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public Builder setDesignatedPosition(proto.gc.SslGcRefereeMessage.Referee.Point value) {
        if (designatedPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          designatedPosition_ = value;
          onChanged();
        } else {
          designatedPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public Builder setDesignatedPosition(
          proto.gc.SslGcRefereeMessage.Referee.Point.Builder builderForValue) {
        if (designatedPositionBuilder_ == null) {
          designatedPosition_ = builderForValue.build();
          onChanged();
        } else {
          designatedPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public Builder mergeDesignatedPosition(proto.gc.SslGcRefereeMessage.Referee.Point value) {
        if (designatedPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
              designatedPosition_ != null &&
              designatedPosition_ != proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance()) {
            designatedPosition_ =
              proto.gc.SslGcRefereeMessage.Referee.Point.newBuilder(designatedPosition_).mergeFrom(value).buildPartial();
          } else {
            designatedPosition_ = value;
          }
          onChanged();
        } else {
          designatedPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public Builder clearDesignatedPosition() {
        if (designatedPositionBuilder_ == null) {
          designatedPosition_ = null;
          onChanged();
        } else {
          designatedPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.Point.Builder getDesignatedPositionBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getDesignatedPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      public proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder getDesignatedPositionOrBuilder() {
        if (designatedPositionBuilder_ != null) {
          return designatedPositionBuilder_.getMessageOrBuilder();
        } else {
          return designatedPosition_ == null ?
              proto.gc.SslGcRefereeMessage.Referee.Point.getDefaultInstance() : designatedPosition_;
        }
      }
      /**
       * <code>optional .proto.gc.Referee.Point designated_position = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.Referee.Point, proto.gc.SslGcRefereeMessage.Referee.Point.Builder, proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder> 
          getDesignatedPositionFieldBuilder() {
        if (designatedPositionBuilder_ == null) {
          designatedPositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRefereeMessage.Referee.Point, proto.gc.SslGcRefereeMessage.Referee.Point.Builder, proto.gc.SslGcRefereeMessage.Referee.PointOrBuilder>(
                  getDesignatedPosition(),
                  getParentForChildren(),
                  isClean());
          designatedPosition_ = null;
        }
        return designatedPositionBuilder_;
      }

      private boolean blueTeamOnPositiveHalf_ ;
      /**
       * <pre>
       * Information about the direction of play.
       * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
       * Obviously, the yellow team will play on the opposite half.
       * </pre>
       *
       * <code>optional bool blue_team_on_positive_half = 10;</code>
       * @return Whether the blueTeamOnPositiveHalf field is set.
       */
      @java.lang.Override
      public boolean hasBlueTeamOnPositiveHalf() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Information about the direction of play.
       * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
       * Obviously, the yellow team will play on the opposite half.
       * </pre>
       *
       * <code>optional bool blue_team_on_positive_half = 10;</code>
       * @return The blueTeamOnPositiveHalf.
       */
      @java.lang.Override
      public boolean getBlueTeamOnPositiveHalf() {
        return blueTeamOnPositiveHalf_;
      }
      /**
       * <pre>
       * Information about the direction of play.
       * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
       * Obviously, the yellow team will play on the opposite half.
       * </pre>
       *
       * <code>optional bool blue_team_on_positive_half = 10;</code>
       * @param value The blueTeamOnPositiveHalf to set.
       * @return This builder for chaining.
       */
      public Builder setBlueTeamOnPositiveHalf(boolean value) {
        bitField0_ |= 0x00000800;
        blueTeamOnPositiveHalf_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Information about the direction of play.
       * True, if the blue team will have it's goal on the positive x-axis of the ssl-vision coordinate system.
       * Obviously, the yellow team will play on the opposite half.
       * </pre>
       *
       * <code>optional bool blue_team_on_positive_half = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlueTeamOnPositiveHalf() {
        bitField0_ = (bitField0_ & ~0x00000800);
        blueTeamOnPositiveHalf_ = false;
        onChanged();
        return this;
      }

      private int nextCommand_ = 0;
      /**
       * <pre>
       * The command that will be issued after the current stoppage and ball placement to continue the game.
       * </pre>
       *
       * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
       * @return Whether the nextCommand field is set.
       */
      @java.lang.Override public boolean hasNextCommand() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * The command that will be issued after the current stoppage and ball placement to continue the game.
       * </pre>
       *
       * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
       * @return The nextCommand.
       */
      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.Referee.Command getNextCommand() {
        @SuppressWarnings("deprecation")
        proto.gc.SslGcRefereeMessage.Referee.Command result = proto.gc.SslGcRefereeMessage.Referee.Command.valueOf(nextCommand_);
        return result == null ? proto.gc.SslGcRefereeMessage.Referee.Command.HALT : result;
      }
      /**
       * <pre>
       * The command that will be issued after the current stoppage and ball placement to continue the game.
       * </pre>
       *
       * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
       * @param value The nextCommand to set.
       * @return This builder for chaining.
       */
      public Builder setNextCommand(proto.gc.SslGcRefereeMessage.Referee.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        nextCommand_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The command that will be issued after the current stoppage and ball placement to continue the game.
       * </pre>
       *
       * <code>optional .proto.gc.Referee.Command next_command = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextCommand() {
        bitField0_ = (bitField0_ & ~0x00001000);
        nextCommand_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<proto.gc.SslGcGameEvent.GameEvent> gameEvents_ =
        java.util.Collections.emptyList();
      private void ensureGameEventsIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          gameEvents_ = new java.util.ArrayList<proto.gc.SslGcGameEvent.GameEvent>(gameEvents_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder> gameEventsBuilder_;

      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public java.util.List<proto.gc.SslGcGameEvent.GameEvent> getGameEventsList() {
        if (gameEventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameEvents_);
        } else {
          return gameEventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public int getGameEventsCount() {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.size();
        } else {
          return gameEventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index) {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.get(index);
        } else {
          return gameEventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder setGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.set(index, value);
          onChanged();
        } else {
          gameEventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder setGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder addGameEvents(proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.add(value);
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder addGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.add(index, value);
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder addGameEvents(
          proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.add(builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder addGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder addAllGameEvents(
          java.lang.Iterable<? extends proto.gc.SslGcGameEvent.GameEvent> values) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gameEvents_);
          onChanged();
        } else {
          gameEventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder clearGameEvents() {
        if (gameEventsBuilder_ == null) {
          gameEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          gameEventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public Builder removeGameEvents(int index) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.remove(index);
          onChanged();
        } else {
          gameEventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder getGameEventsBuilder(
          int index) {
        return getGameEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
          int index) {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.get(index);  } else {
          return gameEventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
           getGameEventsOrBuilderList() {
        if (gameEventsBuilder_ != null) {
          return gameEventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameEvents_);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder addGameEventsBuilder() {
        return getGameEventsFieldBuilder().addBuilder(
            proto.gc.SslGcGameEvent.GameEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder addGameEventsBuilder(
          int index) {
        return getGameEventsFieldBuilder().addBuilder(
            index, proto.gc.SslGcGameEvent.GameEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.gc.GameEvent game_events = 16;</code>
       */
      public java.util.List<proto.gc.SslGcGameEvent.GameEvent.Builder> 
           getGameEventsBuilderList() {
        return getGameEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder> 
          getGameEventsFieldBuilder() {
        if (gameEventsBuilder_ == null) {
          gameEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder>(
                  gameEvents_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          gameEvents_ = null;
        }
        return gameEventsBuilder_;
      }

      private java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup> gameEventProposals_ =
        java.util.Collections.emptyList();
      private void ensureGameEventProposalsIsMutable() {
        if (!((bitField0_ & 0x00004000) != 0)) {
          gameEventProposals_ = new java.util.ArrayList<proto.gc.SslGcRefereeMessage.GameEventProposalGroup>(gameEventProposals_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.GameEventProposalGroup, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder, proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder> gameEventProposalsBuilder_;

      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup> getGameEventProposalsList() {
        if (gameEventProposalsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameEventProposals_);
        } else {
          return gameEventProposalsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public int getGameEventProposalsCount() {
        if (gameEventProposalsBuilder_ == null) {
          return gameEventProposals_.size();
        } else {
          return gameEventProposalsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup getGameEventProposals(int index) {
        if (gameEventProposalsBuilder_ == null) {
          return gameEventProposals_.get(index);
        } else {
          return gameEventProposalsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder setGameEventProposals(
          int index, proto.gc.SslGcRefereeMessage.GameEventProposalGroup value) {
        if (gameEventProposalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.set(index, value);
          onChanged();
        } else {
          gameEventProposalsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder setGameEventProposals(
          int index, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder builderForValue) {
        if (gameEventProposalsBuilder_ == null) {
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameEventProposalsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder addGameEventProposals(proto.gc.SslGcRefereeMessage.GameEventProposalGroup value) {
        if (gameEventProposalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.add(value);
          onChanged();
        } else {
          gameEventProposalsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder addGameEventProposals(
          int index, proto.gc.SslGcRefereeMessage.GameEventProposalGroup value) {
        if (gameEventProposalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.add(index, value);
          onChanged();
        } else {
          gameEventProposalsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder addGameEventProposals(
          proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder builderForValue) {
        if (gameEventProposalsBuilder_ == null) {
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.add(builderForValue.build());
          onChanged();
        } else {
          gameEventProposalsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder addGameEventProposals(
          int index, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder builderForValue) {
        if (gameEventProposalsBuilder_ == null) {
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameEventProposalsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder addAllGameEventProposals(
          java.lang.Iterable<? extends proto.gc.SslGcRefereeMessage.GameEventProposalGroup> values) {
        if (gameEventProposalsBuilder_ == null) {
          ensureGameEventProposalsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gameEventProposals_);
          onChanged();
        } else {
          gameEventProposalsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder clearGameEventProposals() {
        if (gameEventProposalsBuilder_ == null) {
          gameEventProposals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          gameEventProposalsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public Builder removeGameEventProposals(int index) {
        if (gameEventProposalsBuilder_ == null) {
          ensureGameEventProposalsIsMutable();
          gameEventProposals_.remove(index);
          onChanged();
        } else {
          gameEventProposalsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder getGameEventProposalsBuilder(
          int index) {
        return getGameEventProposalsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder getGameEventProposalsOrBuilder(
          int index) {
        if (gameEventProposalsBuilder_ == null) {
          return gameEventProposals_.get(index);  } else {
          return gameEventProposalsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public java.util.List<? extends proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder> 
           getGameEventProposalsOrBuilderList() {
        if (gameEventProposalsBuilder_ != null) {
          return gameEventProposalsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameEventProposals_);
        }
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder addGameEventProposalsBuilder() {
        return getGameEventProposalsFieldBuilder().addBuilder(
            proto.gc.SslGcRefereeMessage.GameEventProposalGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder addGameEventProposalsBuilder(
          int index) {
        return getGameEventProposalsFieldBuilder().addBuilder(
            index, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.gc.GameEventProposalGroup game_event_proposals = 17;</code>
       */
      public java.util.List<proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder> 
           getGameEventProposalsBuilderList() {
        return getGameEventProposalsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcRefereeMessage.GameEventProposalGroup, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder, proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder> 
          getGameEventProposalsFieldBuilder() {
        if (gameEventProposalsBuilder_ == null) {
          gameEventProposalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.gc.SslGcRefereeMessage.GameEventProposalGroup, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder, proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder>(
                  gameEventProposals_,
                  ((bitField0_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          gameEventProposals_ = null;
        }
        return gameEventProposalsBuilder_;
      }

      private long currentActionTimeRemaining_ ;
      /**
       * <pre>
       * The time in microseconds that is remaining until the current action times out
       * The time will not be reset. It can get negative.
       * An autoRef would raise an appropriate event, if the time gets negative.
       * Possible actions where this time is relevant:
       *  * free kicks
       *  * kickoff, penalty kick, force start
       *  * ball placement
       * </pre>
       *
       * <code>optional int64 current_action_time_remaining = 15;</code>
       * @return Whether the currentActionTimeRemaining field is set.
       */
      @java.lang.Override
      public boolean hasCurrentActionTimeRemaining() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * The time in microseconds that is remaining until the current action times out
       * The time will not be reset. It can get negative.
       * An autoRef would raise an appropriate event, if the time gets negative.
       * Possible actions where this time is relevant:
       *  * free kicks
       *  * kickoff, penalty kick, force start
       *  * ball placement
       * </pre>
       *
       * <code>optional int64 current_action_time_remaining = 15;</code>
       * @return The currentActionTimeRemaining.
       */
      @java.lang.Override
      public long getCurrentActionTimeRemaining() {
        return currentActionTimeRemaining_;
      }
      /**
       * <pre>
       * The time in microseconds that is remaining until the current action times out
       * The time will not be reset. It can get negative.
       * An autoRef would raise an appropriate event, if the time gets negative.
       * Possible actions where this time is relevant:
       *  * free kicks
       *  * kickoff, penalty kick, force start
       *  * ball placement
       * </pre>
       *
       * <code>optional int64 current_action_time_remaining = 15;</code>
       * @param value The currentActionTimeRemaining to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentActionTimeRemaining(long value) {
        bitField0_ |= 0x00008000;
        currentActionTimeRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time in microseconds that is remaining until the current action times out
       * The time will not be reset. It can get negative.
       * An autoRef would raise an appropriate event, if the time gets negative.
       * Possible actions where this time is relevant:
       *  * free kicks
       *  * kickoff, penalty kick, force start
       *  * ball placement
       * </pre>
       *
       * <code>optional int64 current_action_time_remaining = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentActionTimeRemaining() {
        bitField0_ = (bitField0_ & ~0x00008000);
        currentActionTimeRemaining_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.gc.Referee)
    }

    // @@protoc_insertion_point(class_scope:proto.gc.Referee)
    private static final proto.gc.SslGcRefereeMessage.Referee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.gc.SslGcRefereeMessage.Referee();
    }

    public static proto.gc.SslGcRefereeMessage.Referee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Referee>
        PARSER = new com.google.protobuf.AbstractParser<Referee>() {
      @java.lang.Override
      public Referee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Referee(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Referee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Referee> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.Referee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameEventProposalGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.gc.GameEventProposalGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    java.util.List<proto.gc.SslGcGameEvent.GameEvent> 
        getGameEventsList();
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index);
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    int getGameEventsCount();
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
        getGameEventsOrBuilderList();
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
        int index);

    /**
     * <pre>
     * Whether the proposal group was accepted
     * </pre>
     *
     * <code>optional bool accepted = 2;</code>
     * @return Whether the accepted field is set.
     */
    boolean hasAccepted();
    /**
     * <pre>
     * Whether the proposal group was accepted
     * </pre>
     *
     * <code>optional bool accepted = 2;</code>
     * @return The accepted.
     */
    boolean getAccepted();
  }
  /**
   * <pre>
   * List of matching proposals
   * </pre>
   *
   * Protobuf type {@code proto.gc.GameEventProposalGroup}
   */
  public static final class GameEventProposalGroup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.gc.GameEventProposalGroup)
      GameEventProposalGroupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameEventProposalGroup.newBuilder() to construct.
    private GameEventProposalGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameEventProposalGroup() {
      id_ = "";
      gameEvents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameEventProposalGroup();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameEventProposalGroup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                gameEvents_ = new java.util.ArrayList<proto.gc.SslGcGameEvent.GameEvent>();
                mutable_bitField0_ |= 0x00000002;
              }
              gameEvents_.add(
                  input.readMessage(proto.gc.SslGcGameEvent.GameEvent.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accepted_ = input.readBool();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          gameEvents_ = java.util.Collections.unmodifiableList(gameEvents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_GameEventProposalGroup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_GameEventProposalGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.gc.SslGcRefereeMessage.GameEventProposalGroup.class, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Unique ID of this group
     * </pre>
     *
     * <code>optional string id = 3;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GAME_EVENTS_FIELD_NUMBER = 1;
    private java.util.List<proto.gc.SslGcGameEvent.GameEvent> gameEvents_;
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<proto.gc.SslGcGameEvent.GameEvent> getGameEventsList() {
      return gameEvents_;
    }
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
        getGameEventsOrBuilderList() {
      return gameEvents_;
    }
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    @java.lang.Override
    public int getGameEventsCount() {
      return gameEvents_.size();
    }
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index) {
      return gameEvents_.get(index);
    }
    /**
     * <pre>
     * The proposed game events
     * </pre>
     *
     * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
        int index) {
      return gameEvents_.get(index);
    }

    public static final int ACCEPTED_FIELD_NUMBER = 2;
    private boolean accepted_;
    /**
     * <pre>
     * Whether the proposal group was accepted
     * </pre>
     *
     * <code>optional bool accepted = 2;</code>
     * @return Whether the accepted field is set.
     */
    @java.lang.Override
    public boolean hasAccepted() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Whether the proposal group was accepted
     * </pre>
     *
     * <code>optional bool accepted = 2;</code>
     * @return The accepted.
     */
    @java.lang.Override
    public boolean getAccepted() {
      return accepted_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getGameEventsCount(); i++) {
        if (!getGameEvents(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < gameEvents_.size(); i++) {
        output.writeMessage(1, gameEvents_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, accepted_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < gameEvents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, gameEvents_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, accepted_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.gc.SslGcRefereeMessage.GameEventProposalGroup)) {
        return super.equals(obj);
      }
      proto.gc.SslGcRefereeMessage.GameEventProposalGroup other = (proto.gc.SslGcRefereeMessage.GameEventProposalGroup) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!getGameEventsList()
          .equals(other.getGameEventsList())) return false;
      if (hasAccepted() != other.hasAccepted()) return false;
      if (hasAccepted()) {
        if (getAccepted()
            != other.getAccepted()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (getGameEventsCount() > 0) {
        hash = (37 * hash) + GAME_EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getGameEventsList().hashCode();
      }
      if (hasAccepted()) {
        hash = (37 * hash) + ACCEPTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAccepted());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.gc.SslGcRefereeMessage.GameEventProposalGroup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * List of matching proposals
     * </pre>
     *
     * Protobuf type {@code proto.gc.GameEventProposalGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.gc.GameEventProposalGroup)
        proto.gc.SslGcRefereeMessage.GameEventProposalGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_GameEventProposalGroup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_GameEventProposalGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRefereeMessage.GameEventProposalGroup.class, proto.gc.SslGcRefereeMessage.GameEventProposalGroup.Builder.class);
      }

      // Construct using proto.gc.SslGcRefereeMessage.GameEventProposalGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGameEventsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gameEventsBuilder_ == null) {
          gameEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          gameEventsBuilder_.clear();
        }
        accepted_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.gc.SslGcRefereeMessage.internal_static_proto_gc_GameEventProposalGroup_descriptor;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup getDefaultInstanceForType() {
        return proto.gc.SslGcRefereeMessage.GameEventProposalGroup.getDefaultInstance();
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup build() {
        proto.gc.SslGcRefereeMessage.GameEventProposalGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.gc.SslGcRefereeMessage.GameEventProposalGroup buildPartial() {
        proto.gc.SslGcRefereeMessage.GameEventProposalGroup result = new proto.gc.SslGcRefereeMessage.GameEventProposalGroup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (gameEventsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            gameEvents_ = java.util.Collections.unmodifiableList(gameEvents_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.gameEvents_ = gameEvents_;
        } else {
          result.gameEvents_ = gameEventsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.accepted_ = accepted_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.gc.SslGcRefereeMessage.GameEventProposalGroup) {
          return mergeFrom((proto.gc.SslGcRefereeMessage.GameEventProposalGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.gc.SslGcRefereeMessage.GameEventProposalGroup other) {
        if (other == proto.gc.SslGcRefereeMessage.GameEventProposalGroup.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (gameEventsBuilder_ == null) {
          if (!other.gameEvents_.isEmpty()) {
            if (gameEvents_.isEmpty()) {
              gameEvents_ = other.gameEvents_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGameEventsIsMutable();
              gameEvents_.addAll(other.gameEvents_);
            }
            onChanged();
          }
        } else {
          if (!other.gameEvents_.isEmpty()) {
            if (gameEventsBuilder_.isEmpty()) {
              gameEventsBuilder_.dispose();
              gameEventsBuilder_ = null;
              gameEvents_ = other.gameEvents_;
              bitField0_ = (bitField0_ & ~0x00000002);
              gameEventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGameEventsFieldBuilder() : null;
            } else {
              gameEventsBuilder_.addAllMessages(other.gameEvents_);
            }
          }
        }
        if (other.hasAccepted()) {
          setAccepted(other.getAccepted());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getGameEventsCount(); i++) {
          if (!getGameEvents(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.gc.SslGcRefereeMessage.GameEventProposalGroup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.gc.SslGcRefereeMessage.GameEventProposalGroup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ID of this group
       * </pre>
       *
       * <code>optional string id = 3;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<proto.gc.SslGcGameEvent.GameEvent> gameEvents_ =
        java.util.Collections.emptyList();
      private void ensureGameEventsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          gameEvents_ = new java.util.ArrayList<proto.gc.SslGcGameEvent.GameEvent>(gameEvents_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder> gameEventsBuilder_;

      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public java.util.List<proto.gc.SslGcGameEvent.GameEvent> getGameEventsList() {
        if (gameEventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gameEvents_);
        } else {
          return gameEventsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public int getGameEventsCount() {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.size();
        } else {
          return gameEventsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent getGameEvents(int index) {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.get(index);
        } else {
          return gameEventsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder setGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.set(index, value);
          onChanged();
        } else {
          gameEventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder setGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.set(index, builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder addGameEvents(proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.add(value);
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder addGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent value) {
        if (gameEventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGameEventsIsMutable();
          gameEvents_.add(index, value);
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder addGameEvents(
          proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.add(builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder addGameEvents(
          int index, proto.gc.SslGcGameEvent.GameEvent.Builder builderForValue) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.add(index, builderForValue.build());
          onChanged();
        } else {
          gameEventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder addAllGameEvents(
          java.lang.Iterable<? extends proto.gc.SslGcGameEvent.GameEvent> values) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gameEvents_);
          onChanged();
        } else {
          gameEventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder clearGameEvents() {
        if (gameEventsBuilder_ == null) {
          gameEvents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          gameEventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public Builder removeGameEvents(int index) {
        if (gameEventsBuilder_ == null) {
          ensureGameEventsIsMutable();
          gameEvents_.remove(index);
          onChanged();
        } else {
          gameEventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder getGameEventsBuilder(
          int index) {
        return getGameEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public proto.gc.SslGcGameEvent.GameEventOrBuilder getGameEventsOrBuilder(
          int index) {
        if (gameEventsBuilder_ == null) {
          return gameEvents_.get(index);  } else {
          return gameEventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public java.util.List<? extends proto.gc.SslGcGameEvent.GameEventOrBuilder> 
           getGameEventsOrBuilderList() {
        if (gameEventsBuilder_ != null) {
          return gameEventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gameEvents_);
        }
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder addGameEventsBuilder() {
        return getGameEventsFieldBuilder().addBuilder(
            proto.gc.SslGcGameEvent.GameEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public proto.gc.SslGcGameEvent.GameEvent.Builder addGameEventsBuilder(
          int index) {
        return getGameEventsFieldBuilder().addBuilder(
            index, proto.gc.SslGcGameEvent.GameEvent.getDefaultInstance());
      }
      /**
       * <pre>
       * The proposed game events
       * </pre>
       *
       * <code>repeated .proto.gc.GameEvent game_events = 1;</code>
       */
      public java.util.List<proto.gc.SslGcGameEvent.GameEvent.Builder> 
           getGameEventsBuilderList() {
        return getGameEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder> 
          getGameEventsFieldBuilder() {
        if (gameEventsBuilder_ == null) {
          gameEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.gc.SslGcGameEvent.GameEvent, proto.gc.SslGcGameEvent.GameEvent.Builder, proto.gc.SslGcGameEvent.GameEventOrBuilder>(
                  gameEvents_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          gameEvents_ = null;
        }
        return gameEventsBuilder_;
      }

      private boolean accepted_ ;
      /**
       * <pre>
       * Whether the proposal group was accepted
       * </pre>
       *
       * <code>optional bool accepted = 2;</code>
       * @return Whether the accepted field is set.
       */
      @java.lang.Override
      public boolean hasAccepted() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Whether the proposal group was accepted
       * </pre>
       *
       * <code>optional bool accepted = 2;</code>
       * @return The accepted.
       */
      @java.lang.Override
      public boolean getAccepted() {
        return accepted_;
      }
      /**
       * <pre>
       * Whether the proposal group was accepted
       * </pre>
       *
       * <code>optional bool accepted = 2;</code>
       * @param value The accepted to set.
       * @return This builder for chaining.
       */
      public Builder setAccepted(boolean value) {
        bitField0_ |= 0x00000004;
        accepted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the proposal group was accepted
       * </pre>
       *
       * <code>optional bool accepted = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccepted() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accepted_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.gc.GameEventProposalGroup)
    }

    // @@protoc_insertion_point(class_scope:proto.gc.GameEventProposalGroup)
    private static final proto.gc.SslGcRefereeMessage.GameEventProposalGroup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.gc.SslGcRefereeMessage.GameEventProposalGroup();
    }

    public static proto.gc.SslGcRefereeMessage.GameEventProposalGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameEventProposalGroup>
        PARSER = new com.google.protobuf.AbstractParser<GameEventProposalGroup>() {
      @java.lang.Override
      public GameEventProposalGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameEventProposalGroup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameEventProposalGroup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameEventProposalGroup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.gc.SslGcRefereeMessage.GameEventProposalGroup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_Referee_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_Referee_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_Referee_TeamInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_Referee_TeamInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_Referee_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_Referee_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_GameEventProposalGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_GameEventProposalGroup_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034ssl_gc_referee_message.proto\022\010proto.gc" +
      "\032\027ssl_gc_game_event.proto\"\252\016\n\007Referee\022\031\n" +
      "\021source_identifier\030\022 \001(\t\0226\n\nmatch_type\030\023" +
      " \001(\0162\023.proto.gc.MatchType:\rUNKNOWN_MATCH" +
      "\022\030\n\020packet_timestamp\030\001 \002(\004\022&\n\005stage\030\002 \002(" +
      "\0162\027.proto.gc.Referee.Stage\022\027\n\017stage_time" +
      "_left\030\003 \001(\022\022*\n\007command\030\004 \002(\0162\031.proto.gc." +
      "Referee.Command\022\027\n\017command_counter\030\005 \002(\r" +
      "\022\031\n\021command_timestamp\030\006 \002(\004\022*\n\006yellow\030\007 " +
      "\002(\0132\032.proto.gc.Referee.TeamInfo\022(\n\004blue\030" +
      "\010 \002(\0132\032.proto.gc.Referee.TeamInfo\0224\n\023des" +
      "ignated_position\030\t \001(\0132\027.proto.gc.Refere" +
      "e.Point\022\"\n\032blue_team_on_positive_half\030\n " +
      "\001(\010\022/\n\014next_command\030\014 \001(\0162\031.proto.gc.Ref" +
      "eree.Command\022(\n\013game_events\030\020 \003(\0132\023.prot" +
      "o.gc.GameEvent\022>\n\024game_event_proposals\030\021" +
      " \003(\0132 .proto.gc.GameEventProposalGroup\022%" +
      "\n\035current_action_time_remaining\030\017 \001(\003\032\200\003" +
      "\n\010TeamInfo\022\014\n\004name\030\001 \002(\t\022\r\n\005score\030\002 \002(\r\022" +
      "\021\n\tred_cards\030\003 \002(\r\022\035\n\021yellow_card_times\030" +
      "\004 \003(\rB\002\020\001\022\024\n\014yellow_cards\030\005 \002(\r\022\020\n\010timeo" +
      "uts\030\006 \002(\r\022\024\n\014timeout_time\030\007 \002(\r\022\022\n\ngoalk" +
      "eeper\030\010 \002(\r\022\024\n\014foul_counter\030\t \001(\r\022\037\n\027bal" +
      "l_placement_failures\030\n \001(\r\022\026\n\016can_place_" +
      "ball\030\014 \001(\010\022\030\n\020max_allowed_bots\030\r \001(\r\022\037\n\027" +
      "bot_substitution_intent\030\016 \001(\010\022\'\n\037ball_pl" +
      "acement_failures_reached\030\017 \001(\010\022 \n\030bot_su" +
      "bstitution_allowed\030\020 \001(\010\032\035\n\005Point\022\t\n\001x\030\001" +
      " \002(\002\022\t\n\001y\030\002 \002(\002\"\321\002\n\005Stage\022\031\n\025NORMAL_FIRS" +
      "T_HALF_PRE\020\000\022\025\n\021NORMAL_FIRST_HALF\020\001\022\024\n\020N" +
      "ORMAL_HALF_TIME\020\002\022\032\n\026NORMAL_SECOND_HALF_" +
      "PRE\020\003\022\026\n\022NORMAL_SECOND_HALF\020\004\022\024\n\020EXTRA_T" +
      "IME_BREAK\020\005\022\030\n\024EXTRA_FIRST_HALF_PRE\020\006\022\024\n" +
      "\020EXTRA_FIRST_HALF\020\007\022\023\n\017EXTRA_HALF_TIME\020\010" +
      "\022\031\n\025EXTRA_SECOND_HALF_PRE\020\t\022\025\n\021EXTRA_SEC" +
      "OND_HALF\020\n\022\032\n\026PENALTY_SHOOTOUT_BREAK\020\013\022\024" +
      "\n\020PENALTY_SHOOTOUT\020\014\022\r\n\tPOST_GAME\020\r\"\226\003\n\007" +
      "Command\022\010\n\004HALT\020\000\022\010\n\004STOP\020\001\022\020\n\014NORMAL_ST" +
      "ART\020\002\022\017\n\013FORCE_START\020\003\022\032\n\026PREPARE_KICKOF" +
      "F_YELLOW\020\004\022\030\n\024PREPARE_KICKOFF_BLUE\020\005\022\032\n\026" +
      "PREPARE_PENALTY_YELLOW\020\006\022\030\n\024PREPARE_PENA" +
      "LTY_BLUE\020\007\022\026\n\022DIRECT_FREE_YELLOW\020\010\022\024\n\020DI" +
      "RECT_FREE_BLUE\020\t\022\034\n\024INDIRECT_FREE_YELLOW" +
      "\020\n\032\002\010\001\022\032\n\022INDIRECT_FREE_BLUE\020\013\032\002\010\001\022\022\n\016TI" +
      "MEOUT_YELLOW\020\014\022\020\n\014TIMEOUT_BLUE\020\r\022\023\n\013GOAL" +
      "_YELLOW\020\016\032\002\010\001\022\021\n\tGOAL_BLUE\020\017\032\002\010\001\022\031\n\025BALL" +
      "_PLACEMENT_YELLOW\020\020\022\027\n\023BALL_PLACEMENT_BL" +
      "UE\020\021J\004\010\013\020\014J\004\010\r\020\016J\004\010\016\020\017\"`\n\026GameEventPropo" +
      "salGroup\022\n\n\002id\030\003 \001(\t\022(\n\013game_events\030\001 \003(" +
      "\0132\023.proto.gc.GameEvent\022\020\n\010accepted\030\002 \001(\010" +
      "*T\n\tMatchType\022\021\n\rUNKNOWN_MATCH\020\000\022\017\n\013GROU" +
      "P_PHASE\020\001\022\025\n\021ELIMINATION_PHASE\020\002\022\014\n\010FRIE" +
      "NDLY\020\003B?Z=github.com/RoboCup-SSL/ssl-gam" +
      "e-controller/internal/app/state"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.gc.SslGcGameEvent.getDescriptor(),
        });
    internal_static_proto_gc_Referee_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_gc_Referee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_Referee_descriptor,
        new java.lang.String[] { "SourceIdentifier", "MatchType", "PacketTimestamp", "Stage", "StageTimeLeft", "Command", "CommandCounter", "CommandTimestamp", "Yellow", "Blue", "DesignatedPosition", "BlueTeamOnPositiveHalf", "NextCommand", "GameEvents", "GameEventProposals", "CurrentActionTimeRemaining", });
    internal_static_proto_gc_Referee_TeamInfo_descriptor =
      internal_static_proto_gc_Referee_descriptor.getNestedTypes().get(0);
    internal_static_proto_gc_Referee_TeamInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_Referee_TeamInfo_descriptor,
        new java.lang.String[] { "Name", "Score", "RedCards", "YellowCardTimes", "YellowCards", "Timeouts", "TimeoutTime", "Goalkeeper", "FoulCounter", "BallPlacementFailures", "CanPlaceBall", "MaxAllowedBots", "BotSubstitutionIntent", "BallPlacementFailuresReached", "BotSubstitutionAllowed", });
    internal_static_proto_gc_Referee_Point_descriptor =
      internal_static_proto_gc_Referee_descriptor.getNestedTypes().get(1);
    internal_static_proto_gc_Referee_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_Referee_Point_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_proto_gc_GameEventProposalGroup_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_gc_GameEventProposalGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_GameEventProposalGroup_descriptor,
        new java.lang.String[] { "Id", "GameEvents", "Accepted", });
    proto.gc.SslGcGameEvent.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
