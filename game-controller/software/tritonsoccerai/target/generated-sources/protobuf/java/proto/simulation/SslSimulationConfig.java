// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_simulation_config.proto

package proto.simulation;

public final class SslSimulationConfig {
  private SslSimulationConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RobotLimitsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotLimits)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Max absolute speed-up acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_absolute_max = 1;</code>
     * @return Whether the accSpeedupAbsoluteMax field is set.
     */
    boolean hasAccSpeedupAbsoluteMax();
    /**
     * <pre>
     * Max absolute speed-up acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_absolute_max = 1;</code>
     * @return The accSpeedupAbsoluteMax.
     */
    float getAccSpeedupAbsoluteMax();

    /**
     * <pre>
     * Max angular speed-up acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_angular_max = 2;</code>
     * @return Whether the accSpeedupAngularMax field is set.
     */
    boolean hasAccSpeedupAngularMax();
    /**
     * <pre>
     * Max angular speed-up acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_angular_max = 2;</code>
     * @return The accSpeedupAngularMax.
     */
    float getAccSpeedupAngularMax();

    /**
     * <pre>
     * Max absolute brake acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_absolute_max = 3;</code>
     * @return Whether the accBrakeAbsoluteMax field is set.
     */
    boolean hasAccBrakeAbsoluteMax();
    /**
     * <pre>
     * Max absolute brake acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_absolute_max = 3;</code>
     * @return The accBrakeAbsoluteMax.
     */
    float getAccBrakeAbsoluteMax();

    /**
     * <pre>
     * Max angular brake acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_angular_max = 4;</code>
     * @return Whether the accBrakeAngularMax field is set.
     */
    boolean hasAccBrakeAngularMax();
    /**
     * <pre>
     * Max angular brake acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_angular_max = 4;</code>
     * @return The accBrakeAngularMax.
     */
    float getAccBrakeAngularMax();

    /**
     * <pre>
     * Max absolute velocity [m/s]
     * </pre>
     *
     * <code>optional float vel_absolute_max = 5;</code>
     * @return Whether the velAbsoluteMax field is set.
     */
    boolean hasVelAbsoluteMax();
    /**
     * <pre>
     * Max absolute velocity [m/s]
     * </pre>
     *
     * <code>optional float vel_absolute_max = 5;</code>
     * @return The velAbsoluteMax.
     */
    float getVelAbsoluteMax();

    /**
     * <pre>
     * Max angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float vel_angular_max = 6;</code>
     * @return Whether the velAngularMax field is set.
     */
    boolean hasVelAngularMax();
    /**
     * <pre>
     * Max angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float vel_angular_max = 6;</code>
     * @return The velAngularMax.
     */
    float getVelAngularMax();
  }
  /**
   * <pre>
   * Movement limits for a robot
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotLimits}
   */
  public static final class RobotLimits extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotLimits)
      RobotLimitsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotLimits.newBuilder() to construct.
    private RobotLimits(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotLimits() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotLimits();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotLimits(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              accSpeedupAbsoluteMax_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              accSpeedupAngularMax_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              accBrakeAbsoluteMax_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              accBrakeAngularMax_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              velAbsoluteMax_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              velAngularMax_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotLimits_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotLimits_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationConfig.RobotLimits.class, proto.simulation.SslSimulationConfig.RobotLimits.Builder.class);
    }

    private int bitField0_;
    public static final int ACC_SPEEDUP_ABSOLUTE_MAX_FIELD_NUMBER = 1;
    private float accSpeedupAbsoluteMax_;
    /**
     * <pre>
     * Max absolute speed-up acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_absolute_max = 1;</code>
     * @return Whether the accSpeedupAbsoluteMax field is set.
     */
    @java.lang.Override
    public boolean hasAccSpeedupAbsoluteMax() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Max absolute speed-up acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_absolute_max = 1;</code>
     * @return The accSpeedupAbsoluteMax.
     */
    @java.lang.Override
    public float getAccSpeedupAbsoluteMax() {
      return accSpeedupAbsoluteMax_;
    }

    public static final int ACC_SPEEDUP_ANGULAR_MAX_FIELD_NUMBER = 2;
    private float accSpeedupAngularMax_;
    /**
     * <pre>
     * Max angular speed-up acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_angular_max = 2;</code>
     * @return Whether the accSpeedupAngularMax field is set.
     */
    @java.lang.Override
    public boolean hasAccSpeedupAngularMax() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Max angular speed-up acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_speedup_angular_max = 2;</code>
     * @return The accSpeedupAngularMax.
     */
    @java.lang.Override
    public float getAccSpeedupAngularMax() {
      return accSpeedupAngularMax_;
    }

    public static final int ACC_BRAKE_ABSOLUTE_MAX_FIELD_NUMBER = 3;
    private float accBrakeAbsoluteMax_;
    /**
     * <pre>
     * Max absolute brake acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_absolute_max = 3;</code>
     * @return Whether the accBrakeAbsoluteMax field is set.
     */
    @java.lang.Override
    public boolean hasAccBrakeAbsoluteMax() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Max absolute brake acceleration [m/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_absolute_max = 3;</code>
     * @return The accBrakeAbsoluteMax.
     */
    @java.lang.Override
    public float getAccBrakeAbsoluteMax() {
      return accBrakeAbsoluteMax_;
    }

    public static final int ACC_BRAKE_ANGULAR_MAX_FIELD_NUMBER = 4;
    private float accBrakeAngularMax_;
    /**
     * <pre>
     * Max angular brake acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_angular_max = 4;</code>
     * @return Whether the accBrakeAngularMax field is set.
     */
    @java.lang.Override
    public boolean hasAccBrakeAngularMax() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Max angular brake acceleration [rad/s^2]
     * </pre>
     *
     * <code>optional float acc_brake_angular_max = 4;</code>
     * @return The accBrakeAngularMax.
     */
    @java.lang.Override
    public float getAccBrakeAngularMax() {
      return accBrakeAngularMax_;
    }

    public static final int VEL_ABSOLUTE_MAX_FIELD_NUMBER = 5;
    private float velAbsoluteMax_;
    /**
     * <pre>
     * Max absolute velocity [m/s]
     * </pre>
     *
     * <code>optional float vel_absolute_max = 5;</code>
     * @return Whether the velAbsoluteMax field is set.
     */
    @java.lang.Override
    public boolean hasVelAbsoluteMax() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Max absolute velocity [m/s]
     * </pre>
     *
     * <code>optional float vel_absolute_max = 5;</code>
     * @return The velAbsoluteMax.
     */
    @java.lang.Override
    public float getVelAbsoluteMax() {
      return velAbsoluteMax_;
    }

    public static final int VEL_ANGULAR_MAX_FIELD_NUMBER = 6;
    private float velAngularMax_;
    /**
     * <pre>
     * Max angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float vel_angular_max = 6;</code>
     * @return Whether the velAngularMax field is set.
     */
    @java.lang.Override
    public boolean hasVelAngularMax() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Max angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float vel_angular_max = 6;</code>
     * @return The velAngularMax.
     */
    @java.lang.Override
    public float getVelAngularMax() {
      return velAngularMax_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, accSpeedupAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, accSpeedupAngularMax_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, accBrakeAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, accBrakeAngularMax_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, velAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, velAngularMax_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, accSpeedupAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, accSpeedupAngularMax_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, accBrakeAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, accBrakeAngularMax_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, velAbsoluteMax_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, velAngularMax_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationConfig.RobotLimits)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationConfig.RobotLimits other = (proto.simulation.SslSimulationConfig.RobotLimits) obj;

      if (hasAccSpeedupAbsoluteMax() != other.hasAccSpeedupAbsoluteMax()) return false;
      if (hasAccSpeedupAbsoluteMax()) {
        if (java.lang.Float.floatToIntBits(getAccSpeedupAbsoluteMax())
            != java.lang.Float.floatToIntBits(
                other.getAccSpeedupAbsoluteMax())) return false;
      }
      if (hasAccSpeedupAngularMax() != other.hasAccSpeedupAngularMax()) return false;
      if (hasAccSpeedupAngularMax()) {
        if (java.lang.Float.floatToIntBits(getAccSpeedupAngularMax())
            != java.lang.Float.floatToIntBits(
                other.getAccSpeedupAngularMax())) return false;
      }
      if (hasAccBrakeAbsoluteMax() != other.hasAccBrakeAbsoluteMax()) return false;
      if (hasAccBrakeAbsoluteMax()) {
        if (java.lang.Float.floatToIntBits(getAccBrakeAbsoluteMax())
            != java.lang.Float.floatToIntBits(
                other.getAccBrakeAbsoluteMax())) return false;
      }
      if (hasAccBrakeAngularMax() != other.hasAccBrakeAngularMax()) return false;
      if (hasAccBrakeAngularMax()) {
        if (java.lang.Float.floatToIntBits(getAccBrakeAngularMax())
            != java.lang.Float.floatToIntBits(
                other.getAccBrakeAngularMax())) return false;
      }
      if (hasVelAbsoluteMax() != other.hasVelAbsoluteMax()) return false;
      if (hasVelAbsoluteMax()) {
        if (java.lang.Float.floatToIntBits(getVelAbsoluteMax())
            != java.lang.Float.floatToIntBits(
                other.getVelAbsoluteMax())) return false;
      }
      if (hasVelAngularMax() != other.hasVelAngularMax()) return false;
      if (hasVelAngularMax()) {
        if (java.lang.Float.floatToIntBits(getVelAngularMax())
            != java.lang.Float.floatToIntBits(
                other.getVelAngularMax())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccSpeedupAbsoluteMax()) {
        hash = (37 * hash) + ACC_SPEEDUP_ABSOLUTE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAccSpeedupAbsoluteMax());
      }
      if (hasAccSpeedupAngularMax()) {
        hash = (37 * hash) + ACC_SPEEDUP_ANGULAR_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAccSpeedupAngularMax());
      }
      if (hasAccBrakeAbsoluteMax()) {
        hash = (37 * hash) + ACC_BRAKE_ABSOLUTE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAccBrakeAbsoluteMax());
      }
      if (hasAccBrakeAngularMax()) {
        hash = (37 * hash) + ACC_BRAKE_ANGULAR_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAccBrakeAngularMax());
      }
      if (hasVelAbsoluteMax()) {
        hash = (37 * hash) + VEL_ABSOLUTE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVelAbsoluteMax());
      }
      if (hasVelAngularMax()) {
        hash = (37 * hash) + VEL_ANGULAR_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVelAngularMax());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotLimits parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationConfig.RobotLimits prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Movement limits for a robot
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotLimits}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotLimits)
        proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotLimits_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotLimits_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationConfig.RobotLimits.class, proto.simulation.SslSimulationConfig.RobotLimits.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationConfig.RobotLimits.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        accSpeedupAbsoluteMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        accSpeedupAngularMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        accBrakeAbsoluteMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        accBrakeAngularMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        velAbsoluteMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        velAngularMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotLimits_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotLimits getDefaultInstanceForType() {
        return proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotLimits build() {
        proto.simulation.SslSimulationConfig.RobotLimits result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotLimits buildPartial() {
        proto.simulation.SslSimulationConfig.RobotLimits result = new proto.simulation.SslSimulationConfig.RobotLimits(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.accSpeedupAbsoluteMax_ = accSpeedupAbsoluteMax_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.accSpeedupAngularMax_ = accSpeedupAngularMax_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.accBrakeAbsoluteMax_ = accBrakeAbsoluteMax_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.accBrakeAngularMax_ = accBrakeAngularMax_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.velAbsoluteMax_ = velAbsoluteMax_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.velAngularMax_ = velAngularMax_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationConfig.RobotLimits) {
          return mergeFrom((proto.simulation.SslSimulationConfig.RobotLimits)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationConfig.RobotLimits other) {
        if (other == proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance()) return this;
        if (other.hasAccSpeedupAbsoluteMax()) {
          setAccSpeedupAbsoluteMax(other.getAccSpeedupAbsoluteMax());
        }
        if (other.hasAccSpeedupAngularMax()) {
          setAccSpeedupAngularMax(other.getAccSpeedupAngularMax());
        }
        if (other.hasAccBrakeAbsoluteMax()) {
          setAccBrakeAbsoluteMax(other.getAccBrakeAbsoluteMax());
        }
        if (other.hasAccBrakeAngularMax()) {
          setAccBrakeAngularMax(other.getAccBrakeAngularMax());
        }
        if (other.hasVelAbsoluteMax()) {
          setVelAbsoluteMax(other.getVelAbsoluteMax());
        }
        if (other.hasVelAngularMax()) {
          setVelAngularMax(other.getVelAngularMax());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationConfig.RobotLimits parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationConfig.RobotLimits) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float accSpeedupAbsoluteMax_ ;
      /**
       * <pre>
       * Max absolute speed-up acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_absolute_max = 1;</code>
       * @return Whether the accSpeedupAbsoluteMax field is set.
       */
      @java.lang.Override
      public boolean hasAccSpeedupAbsoluteMax() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Max absolute speed-up acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_absolute_max = 1;</code>
       * @return The accSpeedupAbsoluteMax.
       */
      @java.lang.Override
      public float getAccSpeedupAbsoluteMax() {
        return accSpeedupAbsoluteMax_;
      }
      /**
       * <pre>
       * Max absolute speed-up acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_absolute_max = 1;</code>
       * @param value The accSpeedupAbsoluteMax to set.
       * @return This builder for chaining.
       */
      public Builder setAccSpeedupAbsoluteMax(float value) {
        bitField0_ |= 0x00000001;
        accSpeedupAbsoluteMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max absolute speed-up acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_absolute_max = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccSpeedupAbsoluteMax() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accSpeedupAbsoluteMax_ = 0F;
        onChanged();
        return this;
      }

      private float accSpeedupAngularMax_ ;
      /**
       * <pre>
       * Max angular speed-up acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_angular_max = 2;</code>
       * @return Whether the accSpeedupAngularMax field is set.
       */
      @java.lang.Override
      public boolean hasAccSpeedupAngularMax() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Max angular speed-up acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_angular_max = 2;</code>
       * @return The accSpeedupAngularMax.
       */
      @java.lang.Override
      public float getAccSpeedupAngularMax() {
        return accSpeedupAngularMax_;
      }
      /**
       * <pre>
       * Max angular speed-up acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_angular_max = 2;</code>
       * @param value The accSpeedupAngularMax to set.
       * @return This builder for chaining.
       */
      public Builder setAccSpeedupAngularMax(float value) {
        bitField0_ |= 0x00000002;
        accSpeedupAngularMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max angular speed-up acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_speedup_angular_max = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccSpeedupAngularMax() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accSpeedupAngularMax_ = 0F;
        onChanged();
        return this;
      }

      private float accBrakeAbsoluteMax_ ;
      /**
       * <pre>
       * Max absolute brake acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_absolute_max = 3;</code>
       * @return Whether the accBrakeAbsoluteMax field is set.
       */
      @java.lang.Override
      public boolean hasAccBrakeAbsoluteMax() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Max absolute brake acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_absolute_max = 3;</code>
       * @return The accBrakeAbsoluteMax.
       */
      @java.lang.Override
      public float getAccBrakeAbsoluteMax() {
        return accBrakeAbsoluteMax_;
      }
      /**
       * <pre>
       * Max absolute brake acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_absolute_max = 3;</code>
       * @param value The accBrakeAbsoluteMax to set.
       * @return This builder for chaining.
       */
      public Builder setAccBrakeAbsoluteMax(float value) {
        bitField0_ |= 0x00000004;
        accBrakeAbsoluteMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max absolute brake acceleration [m/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_absolute_max = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccBrakeAbsoluteMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accBrakeAbsoluteMax_ = 0F;
        onChanged();
        return this;
      }

      private float accBrakeAngularMax_ ;
      /**
       * <pre>
       * Max angular brake acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_angular_max = 4;</code>
       * @return Whether the accBrakeAngularMax field is set.
       */
      @java.lang.Override
      public boolean hasAccBrakeAngularMax() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Max angular brake acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_angular_max = 4;</code>
       * @return The accBrakeAngularMax.
       */
      @java.lang.Override
      public float getAccBrakeAngularMax() {
        return accBrakeAngularMax_;
      }
      /**
       * <pre>
       * Max angular brake acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_angular_max = 4;</code>
       * @param value The accBrakeAngularMax to set.
       * @return This builder for chaining.
       */
      public Builder setAccBrakeAngularMax(float value) {
        bitField0_ |= 0x00000008;
        accBrakeAngularMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max angular brake acceleration [rad/s^2]
       * </pre>
       *
       * <code>optional float acc_brake_angular_max = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccBrakeAngularMax() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accBrakeAngularMax_ = 0F;
        onChanged();
        return this;
      }

      private float velAbsoluteMax_ ;
      /**
       * <pre>
       * Max absolute velocity [m/s]
       * </pre>
       *
       * <code>optional float vel_absolute_max = 5;</code>
       * @return Whether the velAbsoluteMax field is set.
       */
      @java.lang.Override
      public boolean hasVelAbsoluteMax() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Max absolute velocity [m/s]
       * </pre>
       *
       * <code>optional float vel_absolute_max = 5;</code>
       * @return The velAbsoluteMax.
       */
      @java.lang.Override
      public float getVelAbsoluteMax() {
        return velAbsoluteMax_;
      }
      /**
       * <pre>
       * Max absolute velocity [m/s]
       * </pre>
       *
       * <code>optional float vel_absolute_max = 5;</code>
       * @param value The velAbsoluteMax to set.
       * @return This builder for chaining.
       */
      public Builder setVelAbsoluteMax(float value) {
        bitField0_ |= 0x00000010;
        velAbsoluteMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max absolute velocity [m/s]
       * </pre>
       *
       * <code>optional float vel_absolute_max = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelAbsoluteMax() {
        bitField0_ = (bitField0_ & ~0x00000010);
        velAbsoluteMax_ = 0F;
        onChanged();
        return this;
      }

      private float velAngularMax_ ;
      /**
       * <pre>
       * Max angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float vel_angular_max = 6;</code>
       * @return Whether the velAngularMax field is set.
       */
      @java.lang.Override
      public boolean hasVelAngularMax() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Max angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float vel_angular_max = 6;</code>
       * @return The velAngularMax.
       */
      @java.lang.Override
      public float getVelAngularMax() {
        return velAngularMax_;
      }
      /**
       * <pre>
       * Max angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float vel_angular_max = 6;</code>
       * @param value The velAngularMax to set.
       * @return This builder for chaining.
       */
      public Builder setVelAngularMax(float value) {
        bitField0_ |= 0x00000020;
        velAngularMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float vel_angular_max = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelAngularMax() {
        bitField0_ = (bitField0_ & ~0x00000020);
        velAngularMax_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotLimits)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotLimits)
    private static final proto.simulation.SslSimulationConfig.RobotLimits DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationConfig.RobotLimits();
    }

    public static proto.simulation.SslSimulationConfig.RobotLimits getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotLimits>
        PARSER = new com.google.protobuf.AbstractParser<RobotLimits>() {
      @java.lang.Override
      public RobotLimits parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotLimits(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotLimits> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotLimits> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotLimits getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RobotWheelAnglesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotWheelAngles)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Angle front right [rad]
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return Whether the frontRight field is set.
     */
    boolean hasFrontRight();
    /**
     * <pre>
     * Angle front right [rad]
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return The frontRight.
     */
    float getFrontRight();

    /**
     * <pre>
     * Angle back right [rad]
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return Whether the backRight field is set.
     */
    boolean hasBackRight();
    /**
     * <pre>
     * Angle back right [rad]
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return The backRight.
     */
    float getBackRight();

    /**
     * <pre>
     * Angle back left [rad]
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return Whether the backLeft field is set.
     */
    boolean hasBackLeft();
    /**
     * <pre>
     * Angle back left [rad]
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return The backLeft.
     */
    float getBackLeft();

    /**
     * <pre>
     * Angle front left [rad]
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return Whether the frontLeft field is set.
     */
    boolean hasFrontLeft();
    /**
     * <pre>
     * Angle front left [rad]
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return The frontLeft.
     */
    float getFrontLeft();
  }
  /**
   * <pre>
   * Robot wheel angle configuration
   * all angles are relative to looking forward,
   * all wheels / angles are clockwise
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotWheelAngles}
   */
  public static final class RobotWheelAngles extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotWheelAngles)
      RobotWheelAnglesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotWheelAngles.newBuilder() to construct.
    private RobotWheelAngles(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotWheelAngles() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotWheelAngles();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotWheelAngles(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              frontRight_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              backRight_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              backLeft_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              frontLeft_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotWheelAngles_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotWheelAngles_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationConfig.RobotWheelAngles.class, proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder.class);
    }

    private int bitField0_;
    public static final int FRONT_RIGHT_FIELD_NUMBER = 1;
    private float frontRight_;
    /**
     * <pre>
     * Angle front right [rad]
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return Whether the frontRight field is set.
     */
    @java.lang.Override
    public boolean hasFrontRight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Angle front right [rad]
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return The frontRight.
     */
    @java.lang.Override
    public float getFrontRight() {
      return frontRight_;
    }

    public static final int BACK_RIGHT_FIELD_NUMBER = 2;
    private float backRight_;
    /**
     * <pre>
     * Angle back right [rad]
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return Whether the backRight field is set.
     */
    @java.lang.Override
    public boolean hasBackRight() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Angle back right [rad]
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return The backRight.
     */
    @java.lang.Override
    public float getBackRight() {
      return backRight_;
    }

    public static final int BACK_LEFT_FIELD_NUMBER = 3;
    private float backLeft_;
    /**
     * <pre>
     * Angle back left [rad]
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return Whether the backLeft field is set.
     */
    @java.lang.Override
    public boolean hasBackLeft() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Angle back left [rad]
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return The backLeft.
     */
    @java.lang.Override
    public float getBackLeft() {
      return backLeft_;
    }

    public static final int FRONT_LEFT_FIELD_NUMBER = 4;
    private float frontLeft_;
    /**
     * <pre>
     * Angle front left [rad]
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return Whether the frontLeft field is set.
     */
    @java.lang.Override
    public boolean hasFrontLeft() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Angle front left [rad]
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return The frontLeft.
     */
    @java.lang.Override
    public float getFrontLeft() {
      return frontLeft_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFrontRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBackRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBackLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrontLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, frontRight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, backRight_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, backLeft_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, frontLeft_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, frontRight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, backRight_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, backLeft_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, frontLeft_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationConfig.RobotWheelAngles)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationConfig.RobotWheelAngles other = (proto.simulation.SslSimulationConfig.RobotWheelAngles) obj;

      if (hasFrontRight() != other.hasFrontRight()) return false;
      if (hasFrontRight()) {
        if (java.lang.Float.floatToIntBits(getFrontRight())
            != java.lang.Float.floatToIntBits(
                other.getFrontRight())) return false;
      }
      if (hasBackRight() != other.hasBackRight()) return false;
      if (hasBackRight()) {
        if (java.lang.Float.floatToIntBits(getBackRight())
            != java.lang.Float.floatToIntBits(
                other.getBackRight())) return false;
      }
      if (hasBackLeft() != other.hasBackLeft()) return false;
      if (hasBackLeft()) {
        if (java.lang.Float.floatToIntBits(getBackLeft())
            != java.lang.Float.floatToIntBits(
                other.getBackLeft())) return false;
      }
      if (hasFrontLeft() != other.hasFrontLeft()) return false;
      if (hasFrontLeft()) {
        if (java.lang.Float.floatToIntBits(getFrontLeft())
            != java.lang.Float.floatToIntBits(
                other.getFrontLeft())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrontRight()) {
        hash = (37 * hash) + FRONT_RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrontRight());
      }
      if (hasBackRight()) {
        hash = (37 * hash) + BACK_RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBackRight());
      }
      if (hasBackLeft()) {
        hash = (37 * hash) + BACK_LEFT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBackLeft());
      }
      if (hasFrontLeft()) {
        hash = (37 * hash) + FRONT_LEFT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrontLeft());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotWheelAngles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationConfig.RobotWheelAngles prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Robot wheel angle configuration
     * all angles are relative to looking forward,
     * all wheels / angles are clockwise
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotWheelAngles}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotWheelAngles)
        proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotWheelAngles_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotWheelAngles_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationConfig.RobotWheelAngles.class, proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationConfig.RobotWheelAngles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frontRight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        backRight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        backLeft_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        frontLeft_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotWheelAngles_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotWheelAngles getDefaultInstanceForType() {
        return proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotWheelAngles build() {
        proto.simulation.SslSimulationConfig.RobotWheelAngles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotWheelAngles buildPartial() {
        proto.simulation.SslSimulationConfig.RobotWheelAngles result = new proto.simulation.SslSimulationConfig.RobotWheelAngles(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frontRight_ = frontRight_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.backRight_ = backRight_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.backLeft_ = backLeft_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.frontLeft_ = frontLeft_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationConfig.RobotWheelAngles) {
          return mergeFrom((proto.simulation.SslSimulationConfig.RobotWheelAngles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationConfig.RobotWheelAngles other) {
        if (other == proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance()) return this;
        if (other.hasFrontRight()) {
          setFrontRight(other.getFrontRight());
        }
        if (other.hasBackRight()) {
          setBackRight(other.getBackRight());
        }
        if (other.hasBackLeft()) {
          setBackLeft(other.getBackLeft());
        }
        if (other.hasFrontLeft()) {
          setFrontLeft(other.getFrontLeft());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasFrontRight()) {
          return false;
        }
        if (!hasBackRight()) {
          return false;
        }
        if (!hasBackLeft()) {
          return false;
        }
        if (!hasFrontLeft()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationConfig.RobotWheelAngles parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationConfig.RobotWheelAngles) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float frontRight_ ;
      /**
       * <pre>
       * Angle front right [rad]
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return Whether the frontRight field is set.
       */
      @java.lang.Override
      public boolean hasFrontRight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Angle front right [rad]
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return The frontRight.
       */
      @java.lang.Override
      public float getFrontRight() {
        return frontRight_;
      }
      /**
       * <pre>
       * Angle front right [rad]
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @param value The frontRight to set.
       * @return This builder for chaining.
       */
      public Builder setFrontRight(float value) {
        bitField0_ |= 0x00000001;
        frontRight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angle front right [rad]
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrontRight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frontRight_ = 0F;
        onChanged();
        return this;
      }

      private float backRight_ ;
      /**
       * <pre>
       * Angle back right [rad]
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return Whether the backRight field is set.
       */
      @java.lang.Override
      public boolean hasBackRight() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Angle back right [rad]
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return The backRight.
       */
      @java.lang.Override
      public float getBackRight() {
        return backRight_;
      }
      /**
       * <pre>
       * Angle back right [rad]
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @param value The backRight to set.
       * @return This builder for chaining.
       */
      public Builder setBackRight(float value) {
        bitField0_ |= 0x00000002;
        backRight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angle back right [rad]
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackRight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        backRight_ = 0F;
        onChanged();
        return this;
      }

      private float backLeft_ ;
      /**
       * <pre>
       * Angle back left [rad]
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return Whether the backLeft field is set.
       */
      @java.lang.Override
      public boolean hasBackLeft() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Angle back left [rad]
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return The backLeft.
       */
      @java.lang.Override
      public float getBackLeft() {
        return backLeft_;
      }
      /**
       * <pre>
       * Angle back left [rad]
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @param value The backLeft to set.
       * @return This builder for chaining.
       */
      public Builder setBackLeft(float value) {
        bitField0_ |= 0x00000004;
        backLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angle back left [rad]
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackLeft() {
        bitField0_ = (bitField0_ & ~0x00000004);
        backLeft_ = 0F;
        onChanged();
        return this;
      }

      private float frontLeft_ ;
      /**
       * <pre>
       * Angle front left [rad]
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return Whether the frontLeft field is set.
       */
      @java.lang.Override
      public boolean hasFrontLeft() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Angle front left [rad]
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return The frontLeft.
       */
      @java.lang.Override
      public float getFrontLeft() {
        return frontLeft_;
      }
      /**
       * <pre>
       * Angle front left [rad]
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @param value The frontLeft to set.
       * @return This builder for chaining.
       */
      public Builder setFrontLeft(float value) {
        bitField0_ |= 0x00000008;
        frontLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angle front left [rad]
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrontLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frontLeft_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotWheelAngles)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotWheelAngles)
    private static final proto.simulation.SslSimulationConfig.RobotWheelAngles DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationConfig.RobotWheelAngles();
    }

    public static proto.simulation.SslSimulationConfig.RobotWheelAngles getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotWheelAngles>
        PARSER = new com.google.protobuf.AbstractParser<RobotWheelAngles>() {
      @java.lang.Override
      public RobotWheelAngles parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotWheelAngles(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotWheelAngles> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotWheelAngles> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotWheelAngles getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RobotSpecsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotSpecs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     * @return The id.
     */
    proto.simulation.SslGcCommon.RobotId getId();
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * Robot radius [m]
     * </pre>
     *
     * <code>optional float radius = 2 [default = 0.09];</code>
     * @return Whether the radius field is set.
     */
    boolean hasRadius();
    /**
     * <pre>
     * Robot radius [m]
     * </pre>
     *
     * <code>optional float radius = 2 [default = 0.09];</code>
     * @return The radius.
     */
    float getRadius();

    /**
     * <pre>
     * Robot height [m]
     * </pre>
     *
     * <code>optional float height = 3 [default = 0.15];</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <pre>
     * Robot height [m]
     * </pre>
     *
     * <code>optional float height = 3 [default = 0.15];</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <pre>
     * Robot mass [kg]
     * </pre>
     *
     * <code>optional float mass = 4;</code>
     * @return Whether the mass field is set.
     */
    boolean hasMass();
    /**
     * <pre>
     * Robot mass [kg]
     * </pre>
     *
     * <code>optional float mass = 4;</code>
     * @return The mass.
     */
    float getMass();

    /**
     * <pre>
     * Max linear kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_linear_kick_speed = 7;</code>
     * @return Whether the maxLinearKickSpeed field is set.
     */
    boolean hasMaxLinearKickSpeed();
    /**
     * <pre>
     * Max linear kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_linear_kick_speed = 7;</code>
     * @return The maxLinearKickSpeed.
     */
    float getMaxLinearKickSpeed();

    /**
     * <pre>
     * Max chip kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_chip_kick_speed = 8;</code>
     * @return Whether the maxChipKickSpeed field is set.
     */
    boolean hasMaxChipKickSpeed();
    /**
     * <pre>
     * Max chip kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_chip_kick_speed = 8;</code>
     * @return The maxChipKickSpeed.
     */
    float getMaxChipKickSpeed();

    /**
     * <pre>
     * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
     * </pre>
     *
     * <code>optional float center_to_dribbler = 9;</code>
     * @return Whether the centerToDribbler field is set.
     */
    boolean hasCenterToDribbler();
    /**
     * <pre>
     * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
     * </pre>
     *
     * <code>optional float center_to_dribbler = 9;</code>
     * @return The centerToDribbler.
     */
    float getCenterToDribbler();

    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     * @return Whether the limits field is set.
     */
    boolean hasLimits();
    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     * @return The limits.
     */
    proto.simulation.SslSimulationConfig.RobotLimits getLimits();
    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     */
    proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder getLimitsOrBuilder();

    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     * @return Whether the wheelAngles field is set.
     */
    boolean hasWheelAngles();
    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     * @return The wheelAngles.
     */
    proto.simulation.SslSimulationConfig.RobotWheelAngles getWheelAngles();
    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     */
    proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder getWheelAnglesOrBuilder();

    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getCustomList();
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    com.google.protobuf.Any getCustom(int index);
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    int getCustomCount();
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getCustomOrBuilderList();
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Specs of a robot
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotSpecs}
   */
  public static final class RobotSpecs extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotSpecs)
      RobotSpecsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotSpecs.newBuilder() to construct.
    private RobotSpecs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotSpecs() {
      radius_ = 0.09F;
      height_ = 0.15F;
      custom_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotSpecs();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotSpecs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslGcCommon.RobotId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(proto.simulation.SslGcCommon.RobotId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              radius_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              height_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              mass_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000010;
              maxLinearKickSpeed_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000020;
              maxChipKickSpeed_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000040;
              centerToDribbler_ = input.readFloat();
              break;
            }
            case 82: {
              proto.simulation.SslSimulationConfig.RobotLimits.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) != 0)) {
                subBuilder = limits_.toBuilder();
              }
              limits_ = input.readMessage(proto.simulation.SslSimulationConfig.RobotLimits.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(limits_);
                limits_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 106: {
              proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) != 0)) {
                subBuilder = wheelAngles_.toBuilder();
              }
              wheelAngles_ = input.readMessage(proto.simulation.SslSimulationConfig.RobotWheelAngles.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wheelAngles_);
                wheelAngles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                custom_ = new java.util.ArrayList<com.google.protobuf.Any>();
                mutable_bitField0_ |= 0x00000200;
              }
              custom_.add(
                  input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          custom_ = java.util.Collections.unmodifiableList(custom_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotSpecs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotSpecs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationConfig.RobotSpecs.class, proto.simulation.SslSimulationConfig.RobotSpecs.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private proto.simulation.SslGcCommon.RobotId id_;
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public proto.simulation.SslGcCommon.RobotId getId() {
      return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    @java.lang.Override
    public proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder() {
      return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
    }

    public static final int RADIUS_FIELD_NUMBER = 2;
    private float radius_;
    /**
     * <pre>
     * Robot radius [m]
     * </pre>
     *
     * <code>optional float radius = 2 [default = 0.09];</code>
     * @return Whether the radius field is set.
     */
    @java.lang.Override
    public boolean hasRadius() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Robot radius [m]
     * </pre>
     *
     * <code>optional float radius = 2 [default = 0.09];</code>
     * @return The radius.
     */
    @java.lang.Override
    public float getRadius() {
      return radius_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private float height_;
    /**
     * <pre>
     * Robot height [m]
     * </pre>
     *
     * <code>optional float height = 3 [default = 0.15];</code>
     * @return Whether the height field is set.
     */
    @java.lang.Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Robot height [m]
     * </pre>
     *
     * <code>optional float height = 3 [default = 0.15];</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    public static final int MASS_FIELD_NUMBER = 4;
    private float mass_;
    /**
     * <pre>
     * Robot mass [kg]
     * </pre>
     *
     * <code>optional float mass = 4;</code>
     * @return Whether the mass field is set.
     */
    @java.lang.Override
    public boolean hasMass() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Robot mass [kg]
     * </pre>
     *
     * <code>optional float mass = 4;</code>
     * @return The mass.
     */
    @java.lang.Override
    public float getMass() {
      return mass_;
    }

    public static final int MAX_LINEAR_KICK_SPEED_FIELD_NUMBER = 7;
    private float maxLinearKickSpeed_;
    /**
     * <pre>
     * Max linear kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_linear_kick_speed = 7;</code>
     * @return Whether the maxLinearKickSpeed field is set.
     */
    @java.lang.Override
    public boolean hasMaxLinearKickSpeed() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Max linear kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_linear_kick_speed = 7;</code>
     * @return The maxLinearKickSpeed.
     */
    @java.lang.Override
    public float getMaxLinearKickSpeed() {
      return maxLinearKickSpeed_;
    }

    public static final int MAX_CHIP_KICK_SPEED_FIELD_NUMBER = 8;
    private float maxChipKickSpeed_;
    /**
     * <pre>
     * Max chip kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_chip_kick_speed = 8;</code>
     * @return Whether the maxChipKickSpeed field is set.
     */
    @java.lang.Override
    public boolean hasMaxChipKickSpeed() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Max chip kick speed [m/s] (unset = unlimited)
     * </pre>
     *
     * <code>optional float max_chip_kick_speed = 8;</code>
     * @return The maxChipKickSpeed.
     */
    @java.lang.Override
    public float getMaxChipKickSpeed() {
      return maxChipKickSpeed_;
    }

    public static final int CENTER_TO_DRIBBLER_FIELD_NUMBER = 9;
    private float centerToDribbler_;
    /**
     * <pre>
     * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
     * </pre>
     *
     * <code>optional float center_to_dribbler = 9;</code>
     * @return Whether the centerToDribbler field is set.
     */
    @java.lang.Override
    public boolean hasCenterToDribbler() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
     * </pre>
     *
     * <code>optional float center_to_dribbler = 9;</code>
     * @return The centerToDribbler.
     */
    @java.lang.Override
    public float getCenterToDribbler() {
      return centerToDribbler_;
    }

    public static final int LIMITS_FIELD_NUMBER = 10;
    private proto.simulation.SslSimulationConfig.RobotLimits limits_;
    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     * @return Whether the limits field is set.
     */
    @java.lang.Override
    public boolean hasLimits() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     * @return The limits.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotLimits getLimits() {
      return limits_ == null ? proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance() : limits_;
    }
    /**
     * <pre>
     * Movement limits
     * </pre>
     *
     * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder getLimitsOrBuilder() {
      return limits_ == null ? proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance() : limits_;
    }

    public static final int WHEEL_ANGLES_FIELD_NUMBER = 13;
    private proto.simulation.SslSimulationConfig.RobotWheelAngles wheelAngles_;
    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     * @return Whether the wheelAngles field is set.
     */
    @java.lang.Override
    public boolean hasWheelAngles() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     * @return The wheelAngles.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotWheelAngles getWheelAngles() {
      return wheelAngles_ == null ? proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance() : wheelAngles_;
    }
    /**
     * <pre>
     * Wheel angle configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder getWheelAnglesOrBuilder() {
      return wheelAngles_ == null ? proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance() : wheelAngles_;
    }

    public static final int CUSTOM_FIELD_NUMBER = 14;
    private java.util.List<com.google.protobuf.Any> custom_;
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.Any> getCustomList() {
      return custom_;
    }
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getCustomOrBuilderList() {
      return custom_;
    }
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    @java.lang.Override
    public int getCustomCount() {
      return custom_.size();
    }
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Any getCustom(int index) {
      return custom_.get(index);
    }
    /**
     * <pre>
     * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 14;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
        int index) {
      return custom_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasWheelAngles()) {
        if (!getWheelAngles().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getId());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, radius_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, height_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, mass_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(7, maxLinearKickSpeed_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(8, maxChipKickSpeed_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(9, centerToDribbler_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(10, getLimits());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(13, getWheelAngles());
      }
      for (int i = 0; i < custom_.size(); i++) {
        output.writeMessage(14, custom_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, radius_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, height_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, mass_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxLinearKickSpeed_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxChipKickSpeed_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, centerToDribbler_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getLimits());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getWheelAngles());
      }
      for (int i = 0; i < custom_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, custom_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationConfig.RobotSpecs)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationConfig.RobotSpecs other = (proto.simulation.SslSimulationConfig.RobotSpecs) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasRadius() != other.hasRadius()) return false;
      if (hasRadius()) {
        if (java.lang.Float.floatToIntBits(getRadius())
            != java.lang.Float.floatToIntBits(
                other.getRadius())) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (java.lang.Float.floatToIntBits(getHeight())
            != java.lang.Float.floatToIntBits(
                other.getHeight())) return false;
      }
      if (hasMass() != other.hasMass()) return false;
      if (hasMass()) {
        if (java.lang.Float.floatToIntBits(getMass())
            != java.lang.Float.floatToIntBits(
                other.getMass())) return false;
      }
      if (hasMaxLinearKickSpeed() != other.hasMaxLinearKickSpeed()) return false;
      if (hasMaxLinearKickSpeed()) {
        if (java.lang.Float.floatToIntBits(getMaxLinearKickSpeed())
            != java.lang.Float.floatToIntBits(
                other.getMaxLinearKickSpeed())) return false;
      }
      if (hasMaxChipKickSpeed() != other.hasMaxChipKickSpeed()) return false;
      if (hasMaxChipKickSpeed()) {
        if (java.lang.Float.floatToIntBits(getMaxChipKickSpeed())
            != java.lang.Float.floatToIntBits(
                other.getMaxChipKickSpeed())) return false;
      }
      if (hasCenterToDribbler() != other.hasCenterToDribbler()) return false;
      if (hasCenterToDribbler()) {
        if (java.lang.Float.floatToIntBits(getCenterToDribbler())
            != java.lang.Float.floatToIntBits(
                other.getCenterToDribbler())) return false;
      }
      if (hasLimits() != other.hasLimits()) return false;
      if (hasLimits()) {
        if (!getLimits()
            .equals(other.getLimits())) return false;
      }
      if (hasWheelAngles() != other.hasWheelAngles()) return false;
      if (hasWheelAngles()) {
        if (!getWheelAngles()
            .equals(other.getWheelAngles())) return false;
      }
      if (!getCustomList()
          .equals(other.getCustomList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasRadius()) {
        hash = (37 * hash) + RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRadius());
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHeight());
      }
      if (hasMass()) {
        hash = (37 * hash) + MASS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMass());
      }
      if (hasMaxLinearKickSpeed()) {
        hash = (37 * hash) + MAX_LINEAR_KICK_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxLinearKickSpeed());
      }
      if (hasMaxChipKickSpeed()) {
        hash = (37 * hash) + MAX_CHIP_KICK_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxChipKickSpeed());
      }
      if (hasCenterToDribbler()) {
        hash = (37 * hash) + CENTER_TO_DRIBBLER_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getCenterToDribbler());
      }
      if (hasLimits()) {
        hash = (37 * hash) + LIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getLimits().hashCode();
      }
      if (hasWheelAngles()) {
        hash = (37 * hash) + WHEEL_ANGLES_FIELD_NUMBER;
        hash = (53 * hash) + getWheelAngles().hashCode();
      }
      if (getCustomCount() > 0) {
        hash = (37 * hash) + CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + getCustomList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RobotSpecs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationConfig.RobotSpecs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specs of a robot
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotSpecs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotSpecs)
        proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotSpecs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotSpecs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationConfig.RobotSpecs.class, proto.simulation.SslSimulationConfig.RobotSpecs.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationConfig.RobotSpecs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIdFieldBuilder();
          getLimitsFieldBuilder();
          getWheelAnglesFieldBuilder();
          getCustomFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        radius_ = 0.09F;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0.15F;
        bitField0_ = (bitField0_ & ~0x00000004);
        mass_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxLinearKickSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        maxChipKickSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        centerToDribbler_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (limitsBuilder_ == null) {
          limits_ = null;
        } else {
          limitsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (wheelAnglesBuilder_ == null) {
          wheelAngles_ = null;
        } else {
          wheelAnglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          customBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RobotSpecs_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotSpecs getDefaultInstanceForType() {
        return proto.simulation.SslSimulationConfig.RobotSpecs.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotSpecs build() {
        proto.simulation.SslSimulationConfig.RobotSpecs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RobotSpecs buildPartial() {
        proto.simulation.SslSimulationConfig.RobotSpecs result = new proto.simulation.SslSimulationConfig.RobotSpecs(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (idBuilder_ == null) {
            result.id_ = id_;
          } else {
            result.id_ = idBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.radius_ = radius_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.mass_ = mass_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxLinearKickSpeed_ = maxLinearKickSpeed_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.maxChipKickSpeed_ = maxChipKickSpeed_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.centerToDribbler_ = centerToDribbler_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          if (limitsBuilder_ == null) {
            result.limits_ = limits_;
          } else {
            result.limits_ = limitsBuilder_.build();
          }
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          if (wheelAnglesBuilder_ == null) {
            result.wheelAngles_ = wheelAngles_;
          } else {
            result.wheelAngles_ = wheelAnglesBuilder_.build();
          }
          to_bitField0_ |= 0x00000100;
        }
        if (customBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            custom_ = java.util.Collections.unmodifiableList(custom_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.custom_ = custom_;
        } else {
          result.custom_ = customBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationConfig.RobotSpecs) {
          return mergeFrom((proto.simulation.SslSimulationConfig.RobotSpecs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationConfig.RobotSpecs other) {
        if (other == proto.simulation.SslSimulationConfig.RobotSpecs.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasRadius()) {
          setRadius(other.getRadius());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasMass()) {
          setMass(other.getMass());
        }
        if (other.hasMaxLinearKickSpeed()) {
          setMaxLinearKickSpeed(other.getMaxLinearKickSpeed());
        }
        if (other.hasMaxChipKickSpeed()) {
          setMaxChipKickSpeed(other.getMaxChipKickSpeed());
        }
        if (other.hasCenterToDribbler()) {
          setCenterToDribbler(other.getCenterToDribbler());
        }
        if (other.hasLimits()) {
          mergeLimits(other.getLimits());
        }
        if (other.hasWheelAngles()) {
          mergeWheelAngles(other.getWheelAngles());
        }
        if (customBuilder_ == null) {
          if (!other.custom_.isEmpty()) {
            if (custom_.isEmpty()) {
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureCustomIsMutable();
              custom_.addAll(other.custom_);
            }
            onChanged();
          }
        } else {
          if (!other.custom_.isEmpty()) {
            if (customBuilder_.isEmpty()) {
              customBuilder_.dispose();
              customBuilder_ = null;
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000200);
              customBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCustomFieldBuilder() : null;
            } else {
              customBuilder_.addAllMessages(other.custom_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (hasWheelAngles()) {
          if (!getWheelAngles().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationConfig.RobotSpecs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationConfig.RobotSpecs) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.simulation.SslGcCommon.RobotId id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder> idBuilder_;
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       * @return The id.
       */
      public proto.simulation.SslGcCommon.RobotId getId() {
        if (idBuilder_ == null) {
          return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder setId(proto.simulation.SslGcCommon.RobotId value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder setId(
          proto.simulation.SslGcCommon.RobotId.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder mergeId(proto.simulation.SslGcCommon.RobotId value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              id_ != null &&
              id_ != proto.simulation.SslGcCommon.RobotId.getDefaultInstance()) {
            id_ =
              proto.simulation.SslGcCommon.RobotId.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public proto.simulation.SslGcCommon.RobotId.Builder getIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private float radius_ = 0.09F;
      /**
       * <pre>
       * Robot radius [m]
       * </pre>
       *
       * <code>optional float radius = 2 [default = 0.09];</code>
       * @return Whether the radius field is set.
       */
      @java.lang.Override
      public boolean hasRadius() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Robot radius [m]
       * </pre>
       *
       * <code>optional float radius = 2 [default = 0.09];</code>
       * @return The radius.
       */
      @java.lang.Override
      public float getRadius() {
        return radius_;
      }
      /**
       * <pre>
       * Robot radius [m]
       * </pre>
       *
       * <code>optional float radius = 2 [default = 0.09];</code>
       * @param value The radius to set.
       * @return This builder for chaining.
       */
      public Builder setRadius(float value) {
        bitField0_ |= 0x00000002;
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Robot radius [m]
       * </pre>
       *
       * <code>optional float radius = 2 [default = 0.09];</code>
       * @return This builder for chaining.
       */
      public Builder clearRadius() {
        bitField0_ = (bitField0_ & ~0x00000002);
        radius_ = 0.09F;
        onChanged();
        return this;
      }

      private float height_ = 0.15F;
      /**
       * <pre>
       * Robot height [m]
       * </pre>
       *
       * <code>optional float height = 3 [default = 0.15];</code>
       * @return Whether the height field is set.
       */
      @java.lang.Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Robot height [m]
       * </pre>
       *
       * <code>optional float height = 3 [default = 0.15];</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <pre>
       * Robot height [m]
       * </pre>
       *
       * <code>optional float height = 3 [default = 0.15];</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Robot height [m]
       * </pre>
       *
       * <code>optional float height = 3 [default = 0.15];</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0.15F;
        onChanged();
        return this;
      }

      private float mass_ ;
      /**
       * <pre>
       * Robot mass [kg]
       * </pre>
       *
       * <code>optional float mass = 4;</code>
       * @return Whether the mass field is set.
       */
      @java.lang.Override
      public boolean hasMass() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Robot mass [kg]
       * </pre>
       *
       * <code>optional float mass = 4;</code>
       * @return The mass.
       */
      @java.lang.Override
      public float getMass() {
        return mass_;
      }
      /**
       * <pre>
       * Robot mass [kg]
       * </pre>
       *
       * <code>optional float mass = 4;</code>
       * @param value The mass to set.
       * @return This builder for chaining.
       */
      public Builder setMass(float value) {
        bitField0_ |= 0x00000008;
        mass_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Robot mass [kg]
       * </pre>
       *
       * <code>optional float mass = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMass() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mass_ = 0F;
        onChanged();
        return this;
      }

      private float maxLinearKickSpeed_ ;
      /**
       * <pre>
       * Max linear kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_linear_kick_speed = 7;</code>
       * @return Whether the maxLinearKickSpeed field is set.
       */
      @java.lang.Override
      public boolean hasMaxLinearKickSpeed() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Max linear kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_linear_kick_speed = 7;</code>
       * @return The maxLinearKickSpeed.
       */
      @java.lang.Override
      public float getMaxLinearKickSpeed() {
        return maxLinearKickSpeed_;
      }
      /**
       * <pre>
       * Max linear kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_linear_kick_speed = 7;</code>
       * @param value The maxLinearKickSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxLinearKickSpeed(float value) {
        bitField0_ |= 0x00000010;
        maxLinearKickSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max linear kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_linear_kick_speed = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxLinearKickSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxLinearKickSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float maxChipKickSpeed_ ;
      /**
       * <pre>
       * Max chip kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_chip_kick_speed = 8;</code>
       * @return Whether the maxChipKickSpeed field is set.
       */
      @java.lang.Override
      public boolean hasMaxChipKickSpeed() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Max chip kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_chip_kick_speed = 8;</code>
       * @return The maxChipKickSpeed.
       */
      @java.lang.Override
      public float getMaxChipKickSpeed() {
        return maxChipKickSpeed_;
      }
      /**
       * <pre>
       * Max chip kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_chip_kick_speed = 8;</code>
       * @param value The maxChipKickSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxChipKickSpeed(float value) {
        bitField0_ |= 0x00000020;
        maxChipKickSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max chip kick speed [m/s] (unset = unlimited)
       * </pre>
       *
       * <code>optional float max_chip_kick_speed = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxChipKickSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxChipKickSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float centerToDribbler_ ;
      /**
       * <pre>
       * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
       * </pre>
       *
       * <code>optional float center_to_dribbler = 9;</code>
       * @return Whether the centerToDribbler field is set.
       */
      @java.lang.Override
      public boolean hasCenterToDribbler() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
       * </pre>
       *
       * <code>optional float center_to_dribbler = 9;</code>
       * @return The centerToDribbler.
       */
      @java.lang.Override
      public float getCenterToDribbler() {
        return centerToDribbler_;
      }
      /**
       * <pre>
       * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
       * </pre>
       *
       * <code>optional float center_to_dribbler = 9;</code>
       * @param value The centerToDribbler to set.
       * @return This builder for chaining.
       */
      public Builder setCenterToDribbler(float value) {
        bitField0_ |= 0x00000040;
        centerToDribbler_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Distance from robot center to dribbler [m] (implicitly defines the opening angle and dribbler width)
       * </pre>
       *
       * <code>optional float center_to_dribbler = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterToDribbler() {
        bitField0_ = (bitField0_ & ~0x00000040);
        centerToDribbler_ = 0F;
        onChanged();
        return this;
      }

      private proto.simulation.SslSimulationConfig.RobotLimits limits_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotLimits, proto.simulation.SslSimulationConfig.RobotLimits.Builder, proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder> limitsBuilder_;
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       * @return Whether the limits field is set.
       */
      public boolean hasLimits() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       * @return The limits.
       */
      public proto.simulation.SslSimulationConfig.RobotLimits getLimits() {
        if (limitsBuilder_ == null) {
          return limits_ == null ? proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance() : limits_;
        } else {
          return limitsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public Builder setLimits(proto.simulation.SslSimulationConfig.RobotLimits value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          limits_ = value;
          onChanged();
        } else {
          limitsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public Builder setLimits(
          proto.simulation.SslSimulationConfig.RobotLimits.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          limits_ = builderForValue.build();
          onChanged();
        } else {
          limitsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public Builder mergeLimits(proto.simulation.SslSimulationConfig.RobotLimits value) {
        if (limitsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
              limits_ != null &&
              limits_ != proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance()) {
            limits_ =
              proto.simulation.SslSimulationConfig.RobotLimits.newBuilder(limits_).mergeFrom(value).buildPartial();
          } else {
            limits_ = value;
          }
          onChanged();
        } else {
          limitsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public Builder clearLimits() {
        if (limitsBuilder_ == null) {
          limits_ = null;
          onChanged();
        } else {
          limitsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotLimits.Builder getLimitsBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getLimitsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder getLimitsOrBuilder() {
        if (limitsBuilder_ != null) {
          return limitsBuilder_.getMessageOrBuilder();
        } else {
          return limits_ == null ?
              proto.simulation.SslSimulationConfig.RobotLimits.getDefaultInstance() : limits_;
        }
      }
      /**
       * <pre>
       * Movement limits
       * </pre>
       *
       * <code>optional .proto.simulation.RobotLimits limits = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotLimits, proto.simulation.SslSimulationConfig.RobotLimits.Builder, proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder> 
          getLimitsFieldBuilder() {
        if (limitsBuilder_ == null) {
          limitsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationConfig.RobotLimits, proto.simulation.SslSimulationConfig.RobotLimits.Builder, proto.simulation.SslSimulationConfig.RobotLimitsOrBuilder>(
                  getLimits(),
                  getParentForChildren(),
                  isClean());
          limits_ = null;
        }
        return limitsBuilder_;
      }

      private proto.simulation.SslSimulationConfig.RobotWheelAngles wheelAngles_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotWheelAngles, proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder, proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder> wheelAnglesBuilder_;
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       * @return Whether the wheelAngles field is set.
       */
      public boolean hasWheelAngles() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       * @return The wheelAngles.
       */
      public proto.simulation.SslSimulationConfig.RobotWheelAngles getWheelAngles() {
        if (wheelAnglesBuilder_ == null) {
          return wheelAngles_ == null ? proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance() : wheelAngles_;
        } else {
          return wheelAnglesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public Builder setWheelAngles(proto.simulation.SslSimulationConfig.RobotWheelAngles value) {
        if (wheelAnglesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wheelAngles_ = value;
          onChanged();
        } else {
          wheelAnglesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public Builder setWheelAngles(
          proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder builderForValue) {
        if (wheelAnglesBuilder_ == null) {
          wheelAngles_ = builderForValue.build();
          onChanged();
        } else {
          wheelAnglesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public Builder mergeWheelAngles(proto.simulation.SslSimulationConfig.RobotWheelAngles value) {
        if (wheelAnglesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
              wheelAngles_ != null &&
              wheelAngles_ != proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance()) {
            wheelAngles_ =
              proto.simulation.SslSimulationConfig.RobotWheelAngles.newBuilder(wheelAngles_).mergeFrom(value).buildPartial();
          } else {
            wheelAngles_ = value;
          }
          onChanged();
        } else {
          wheelAnglesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public Builder clearWheelAngles() {
        if (wheelAnglesBuilder_ == null) {
          wheelAngles_ = null;
          onChanged();
        } else {
          wheelAnglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder getWheelAnglesBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWheelAnglesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder getWheelAnglesOrBuilder() {
        if (wheelAnglesBuilder_ != null) {
          return wheelAnglesBuilder_.getMessageOrBuilder();
        } else {
          return wheelAngles_ == null ?
              proto.simulation.SslSimulationConfig.RobotWheelAngles.getDefaultInstance() : wheelAngles_;
        }
      }
      /**
       * <pre>
       * Wheel angle configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RobotWheelAngles wheel_angles = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotWheelAngles, proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder, proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder> 
          getWheelAnglesFieldBuilder() {
        if (wheelAnglesBuilder_ == null) {
          wheelAnglesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationConfig.RobotWheelAngles, proto.simulation.SslSimulationConfig.RobotWheelAngles.Builder, proto.simulation.SslSimulationConfig.RobotWheelAnglesOrBuilder>(
                  getWheelAngles(),
                  getParentForChildren(),
                  isClean());
          wheelAngles_ = null;
        }
        return wheelAnglesBuilder_;
      }

      private java.util.List<com.google.protobuf.Any> custom_ =
        java.util.Collections.emptyList();
      private void ensureCustomIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          custom_ = new java.util.ArrayList<com.google.protobuf.Any>(custom_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> customBuilder_;

      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public java.util.List<com.google.protobuf.Any> getCustomList() {
        if (customBuilder_ == null) {
          return java.util.Collections.unmodifiableList(custom_);
        } else {
          return customBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public int getCustomCount() {
        if (customBuilder_ == null) {
          return custom_.size();
        } else {
          return customBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public com.google.protobuf.Any getCustom(int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);
        } else {
          return customBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder setCustom(
          int index, com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.set(index, value);
          onChanged();
        } else {
          customBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder setCustom(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.set(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder addCustom(com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(value);
          onChanged();
        } else {
          customBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder addCustom(
          int index, com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(index, value);
          onChanged();
        } else {
          customBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder addCustom(
          com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder addCustom(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder addAllCustom(
          java.lang.Iterable<? extends com.google.protobuf.Any> values) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, custom_);
          onChanged();
        } else {
          customBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder clearCustom() {
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          customBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public Builder removeCustom(int index) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.remove(index);
          onChanged();
        } else {
          customBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public com.google.protobuf.Any.Builder getCustomBuilder(
          int index) {
        return getCustomFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
          int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);  } else {
          return customBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getCustomOrBuilderList() {
        if (customBuilder_ != null) {
          return customBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(custom_);
        }
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public com.google.protobuf.Any.Builder addCustomBuilder() {
        return getCustomFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public com.google.protobuf.Any.Builder addCustomBuilder(
          int index) {
        return getCustomFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Custom robot spec for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 14;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getCustomBuilderList() {
        return getCustomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getCustomFieldBuilder() {
        if (customBuilder_ == null) {
          customBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  custom_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          custom_ = null;
        }
        return customBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotSpecs)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotSpecs)
    private static final proto.simulation.SslSimulationConfig.RobotSpecs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationConfig.RobotSpecs();
    }

    public static proto.simulation.SslSimulationConfig.RobotSpecs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotSpecs>
        PARSER = new com.google.protobuf.AbstractParser<RobotSpecs>() {
      @java.lang.Override
      public RobotSpecs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotSpecs(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotSpecs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotSpecs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotSpecs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RealismConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RealismConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getCustomList();
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    com.google.protobuf.Any getCustom(int index);
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    int getCustomCount();
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getCustomOrBuilderList();
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code proto.simulation.RealismConfig}
   */
  public static final class RealismConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RealismConfig)
      RealismConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RealismConfig.newBuilder() to construct.
    private RealismConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RealismConfig() {
      custom_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RealismConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RealismConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                custom_ = new java.util.ArrayList<com.google.protobuf.Any>();
                mutable_bitField0_ |= 0x00000001;
              }
              custom_.add(
                  input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          custom_ = java.util.Collections.unmodifiableList(custom_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RealismConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RealismConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationConfig.RealismConfig.class, proto.simulation.SslSimulationConfig.RealismConfig.Builder.class);
    }

    public static final int CUSTOM_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.Any> custom_;
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.Any> getCustomList() {
      return custom_;
    }
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getCustomOrBuilderList() {
      return custom_;
    }
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    @java.lang.Override
    public int getCustomCount() {
      return custom_.size();
    }
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Any getCustom(int index) {
      return custom_.get(index);
    }
    /**
     * <pre>
     * Custom config for specific simulators (the protobuf files are managed by the simulators)
     * </pre>
     *
     * <code>repeated .google.protobuf.Any custom = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
        int index) {
      return custom_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < custom_.size(); i++) {
        output.writeMessage(1, custom_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < custom_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, custom_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationConfig.RealismConfig)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationConfig.RealismConfig other = (proto.simulation.SslSimulationConfig.RealismConfig) obj;

      if (!getCustomList()
          .equals(other.getCustomList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCustomCount() > 0) {
        hash = (37 * hash) + CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + getCustomList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.RealismConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationConfig.RealismConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.simulation.RealismConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RealismConfig)
        proto.simulation.SslSimulationConfig.RealismConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RealismConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RealismConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationConfig.RealismConfig.class, proto.simulation.SslSimulationConfig.RealismConfig.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationConfig.RealismConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCustomFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          customBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_RealismConfig_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RealismConfig getDefaultInstanceForType() {
        return proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RealismConfig build() {
        proto.simulation.SslSimulationConfig.RealismConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.RealismConfig buildPartial() {
        proto.simulation.SslSimulationConfig.RealismConfig result = new proto.simulation.SslSimulationConfig.RealismConfig(this);
        int from_bitField0_ = bitField0_;
        if (customBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            custom_ = java.util.Collections.unmodifiableList(custom_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.custom_ = custom_;
        } else {
          result.custom_ = customBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationConfig.RealismConfig) {
          return mergeFrom((proto.simulation.SslSimulationConfig.RealismConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationConfig.RealismConfig other) {
        if (other == proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance()) return this;
        if (customBuilder_ == null) {
          if (!other.custom_.isEmpty()) {
            if (custom_.isEmpty()) {
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCustomIsMutable();
              custom_.addAll(other.custom_);
            }
            onChanged();
          }
        } else {
          if (!other.custom_.isEmpty()) {
            if (customBuilder_.isEmpty()) {
              customBuilder_.dispose();
              customBuilder_ = null;
              custom_ = other.custom_;
              bitField0_ = (bitField0_ & ~0x00000001);
              customBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCustomFieldBuilder() : null;
            } else {
              customBuilder_.addAllMessages(other.custom_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationConfig.RealismConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationConfig.RealismConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.Any> custom_ =
        java.util.Collections.emptyList();
      private void ensureCustomIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          custom_ = new java.util.ArrayList<com.google.protobuf.Any>(custom_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> customBuilder_;

      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public java.util.List<com.google.protobuf.Any> getCustomList() {
        if (customBuilder_ == null) {
          return java.util.Collections.unmodifiableList(custom_);
        } else {
          return customBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public int getCustomCount() {
        if (customBuilder_ == null) {
          return custom_.size();
        } else {
          return customBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public com.google.protobuf.Any getCustom(int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);
        } else {
          return customBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder setCustom(
          int index, com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.set(index, value);
          onChanged();
        } else {
          customBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder setCustom(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.set(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder addCustom(com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(value);
          onChanged();
        } else {
          customBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder addCustom(
          int index, com.google.protobuf.Any value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIsMutable();
          custom_.add(index, value);
          onChanged();
        } else {
          customBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder addCustom(
          com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder addCustom(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.add(index, builderForValue.build());
          onChanged();
        } else {
          customBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder addAllCustom(
          java.lang.Iterable<? extends com.google.protobuf.Any> values) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, custom_);
          onChanged();
        } else {
          customBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder clearCustom() {
        if (customBuilder_ == null) {
          custom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          customBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public Builder removeCustom(int index) {
        if (customBuilder_ == null) {
          ensureCustomIsMutable();
          custom_.remove(index);
          onChanged();
        } else {
          customBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public com.google.protobuf.Any.Builder getCustomBuilder(
          int index) {
        return getCustomFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public com.google.protobuf.AnyOrBuilder getCustomOrBuilder(
          int index) {
        if (customBuilder_ == null) {
          return custom_.get(index);  } else {
          return customBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getCustomOrBuilderList() {
        if (customBuilder_ != null) {
          return customBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(custom_);
        }
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public com.google.protobuf.Any.Builder addCustomBuilder() {
        return getCustomFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public com.google.protobuf.Any.Builder addCustomBuilder(
          int index) {
        return getCustomFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       * Custom config for specific simulators (the protobuf files are managed by the simulators)
       * </pre>
       *
       * <code>repeated .google.protobuf.Any custom = 1;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getCustomBuilderList() {
        return getCustomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getCustomFieldBuilder() {
        if (customBuilder_ == null) {
          customBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  custom_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          custom_ = null;
        }
        return customBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RealismConfig)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RealismConfig)
    private static final proto.simulation.SslSimulationConfig.RealismConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationConfig.RealismConfig();
    }

    public static proto.simulation.SslSimulationConfig.RealismConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RealismConfig>
        PARSER = new com.google.protobuf.AbstractParser<RealismConfig>() {
      @java.lang.Override
      public RealismConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RealismConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RealismConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RealismConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RealismConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimulatorConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.SimulatorConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     * @return Whether the geometry field is set.
     */
    boolean hasGeometry();
    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     * @return The geometry.
     */
    proto.simulation.SslVisionGeometry.SSL_GeometryData getGeometry();
    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     */
    proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder getGeometryOrBuilder();

    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs> 
        getRobotSpecsList();
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    proto.simulation.SslSimulationConfig.RobotSpecs getRobotSpecs(int index);
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    int getRobotSpecsCount();
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    java.util.List<? extends proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder> 
        getRobotSpecsOrBuilderList();
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder getRobotSpecsOrBuilder(
        int index);

    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     * @return Whether the realismConfig field is set.
     */
    boolean hasRealismConfig();
    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     * @return The realismConfig.
     */
    proto.simulation.SslSimulationConfig.RealismConfig getRealismConfig();
    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     */
    proto.simulation.SslSimulationConfig.RealismConfigOrBuilder getRealismConfigOrBuilder();

    /**
     * <pre>
     * Change the vision publish port
     * </pre>
     *
     * <code>optional uint32 vision_port = 4;</code>
     * @return Whether the visionPort field is set.
     */
    boolean hasVisionPort();
    /**
     * <pre>
     * Change the vision publish port
     * </pre>
     *
     * <code>optional uint32 vision_port = 4;</code>
     * @return The visionPort.
     */
    int getVisionPort();
  }
  /**
   * <pre>
   * Change the simulator configuration
   * </pre>
   *
   * Protobuf type {@code proto.simulation.SimulatorConfig}
   */
  public static final class SimulatorConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.SimulatorConfig)
      SimulatorConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimulatorConfig.newBuilder() to construct.
    private SimulatorConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimulatorConfig() {
      robotSpecs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SimulatorConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimulatorConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = geometry_.toBuilder();
              }
              geometry_ = input.readMessage(proto.simulation.SslVisionGeometry.SSL_GeometryData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                robotSpecs_ = new java.util.ArrayList<proto.simulation.SslSimulationConfig.RobotSpecs>();
                mutable_bitField0_ |= 0x00000002;
              }
              robotSpecs_.add(
                  input.readMessage(proto.simulation.SslSimulationConfig.RobotSpecs.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              proto.simulation.SslSimulationConfig.RealismConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = realismConfig_.toBuilder();
              }
              realismConfig_ = input.readMessage(proto.simulation.SslSimulationConfig.RealismConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(realismConfig_);
                realismConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              visionPort_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          robotSpecs_ = java.util.Collections.unmodifiableList(robotSpecs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_SimulatorConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_SimulatorConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationConfig.SimulatorConfig.class, proto.simulation.SslSimulationConfig.SimulatorConfig.Builder.class);
    }

    private int bitField0_;
    public static final int GEOMETRY_FIELD_NUMBER = 1;
    private proto.simulation.SslVisionGeometry.SSL_GeometryData geometry_;
    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     * @return Whether the geometry field is set.
     */
    @java.lang.Override
    public boolean hasGeometry() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     * @return The geometry.
     */
    @java.lang.Override
    public proto.simulation.SslVisionGeometry.SSL_GeometryData getGeometry() {
      return geometry_ == null ? proto.simulation.SslVisionGeometry.SSL_GeometryData.getDefaultInstance() : geometry_;
    }
    /**
     * <pre>
     * Update the geometry
     * </pre>
     *
     * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
     */
    @java.lang.Override
    public proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder getGeometryOrBuilder() {
      return geometry_ == null ? proto.simulation.SslVisionGeometry.SSL_GeometryData.getDefaultInstance() : geometry_;
    }

    public static final int ROBOT_SPECS_FIELD_NUMBER = 2;
    private java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs> robotSpecs_;
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs> getRobotSpecsList() {
      return robotSpecs_;
    }
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder> 
        getRobotSpecsOrBuilderList() {
      return robotSpecs_;
    }
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    @java.lang.Override
    public int getRobotSpecsCount() {
      return robotSpecs_.size();
    }
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotSpecs getRobotSpecs(int index) {
      return robotSpecs_.get(index);
    }
    /**
     * <pre>
     * Update the robot specs
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder getRobotSpecsOrBuilder(
        int index) {
      return robotSpecs_.get(index);
    }

    public static final int REALISM_CONFIG_FIELD_NUMBER = 3;
    private proto.simulation.SslSimulationConfig.RealismConfig realismConfig_;
    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     * @return Whether the realismConfig field is set.
     */
    @java.lang.Override
    public boolean hasRealismConfig() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     * @return The realismConfig.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RealismConfig getRealismConfig() {
      return realismConfig_ == null ? proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance() : realismConfig_;
    }
    /**
     * <pre>
     * Update realism configuration
     * </pre>
     *
     * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationConfig.RealismConfigOrBuilder getRealismConfigOrBuilder() {
      return realismConfig_ == null ? proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance() : realismConfig_;
    }

    public static final int VISION_PORT_FIELD_NUMBER = 4;
    private int visionPort_;
    /**
     * <pre>
     * Change the vision publish port
     * </pre>
     *
     * <code>optional uint32 vision_port = 4;</code>
     * @return Whether the visionPort field is set.
     */
    @java.lang.Override
    public boolean hasVisionPort() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Change the vision publish port
     * </pre>
     *
     * <code>optional uint32 vision_port = 4;</code>
     * @return The visionPort.
     */
    @java.lang.Override
    public int getVisionPort() {
      return visionPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasGeometry()) {
        if (!getGeometry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRobotSpecsCount(); i++) {
        if (!getRobotSpecs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getGeometry());
      }
      for (int i = 0; i < robotSpecs_.size(); i++) {
        output.writeMessage(2, robotSpecs_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getRealismConfig());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(4, visionPort_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGeometry());
      }
      for (int i = 0; i < robotSpecs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, robotSpecs_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRealismConfig());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, visionPort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationConfig.SimulatorConfig)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationConfig.SimulatorConfig other = (proto.simulation.SslSimulationConfig.SimulatorConfig) obj;

      if (hasGeometry() != other.hasGeometry()) return false;
      if (hasGeometry()) {
        if (!getGeometry()
            .equals(other.getGeometry())) return false;
      }
      if (!getRobotSpecsList()
          .equals(other.getRobotSpecsList())) return false;
      if (hasRealismConfig() != other.hasRealismConfig()) return false;
      if (hasRealismConfig()) {
        if (!getRealismConfig()
            .equals(other.getRealismConfig())) return false;
      }
      if (hasVisionPort() != other.hasVisionPort()) return false;
      if (hasVisionPort()) {
        if (getVisionPort()
            != other.getVisionPort()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGeometry()) {
        hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getGeometry().hashCode();
      }
      if (getRobotSpecsCount() > 0) {
        hash = (37 * hash) + ROBOT_SPECS_FIELD_NUMBER;
        hash = (53 * hash) + getRobotSpecsList().hashCode();
      }
      if (hasRealismConfig()) {
        hash = (37 * hash) + REALISM_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getRealismConfig().hashCode();
      }
      if (hasVisionPort()) {
        hash = (37 * hash) + VISION_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getVisionPort();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationConfig.SimulatorConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationConfig.SimulatorConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Change the simulator configuration
     * </pre>
     *
     * Protobuf type {@code proto.simulation.SimulatorConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.SimulatorConfig)
        proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_SimulatorConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_SimulatorConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationConfig.SimulatorConfig.class, proto.simulation.SslSimulationConfig.SimulatorConfig.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationConfig.SimulatorConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGeometryFieldBuilder();
          getRobotSpecsFieldBuilder();
          getRealismConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (geometryBuilder_ == null) {
          geometry_ = null;
        } else {
          geometryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (robotSpecsBuilder_ == null) {
          robotSpecs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          robotSpecsBuilder_.clear();
        }
        if (realismConfigBuilder_ == null) {
          realismConfig_ = null;
        } else {
          realismConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        visionPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationConfig.internal_static_proto_simulation_SimulatorConfig_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.SimulatorConfig getDefaultInstanceForType() {
        return proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.SimulatorConfig build() {
        proto.simulation.SslSimulationConfig.SimulatorConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationConfig.SimulatorConfig buildPartial() {
        proto.simulation.SslSimulationConfig.SimulatorConfig result = new proto.simulation.SslSimulationConfig.SimulatorConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (geometryBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = geometryBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (robotSpecsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            robotSpecs_ = java.util.Collections.unmodifiableList(robotSpecs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.robotSpecs_ = robotSpecs_;
        } else {
          result.robotSpecs_ = robotSpecsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (realismConfigBuilder_ == null) {
            result.realismConfig_ = realismConfig_;
          } else {
            result.realismConfig_ = realismConfigBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.visionPort_ = visionPort_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationConfig.SimulatorConfig) {
          return mergeFrom((proto.simulation.SslSimulationConfig.SimulatorConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationConfig.SimulatorConfig other) {
        if (other == proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance()) return this;
        if (other.hasGeometry()) {
          mergeGeometry(other.getGeometry());
        }
        if (robotSpecsBuilder_ == null) {
          if (!other.robotSpecs_.isEmpty()) {
            if (robotSpecs_.isEmpty()) {
              robotSpecs_ = other.robotSpecs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRobotSpecsIsMutable();
              robotSpecs_.addAll(other.robotSpecs_);
            }
            onChanged();
          }
        } else {
          if (!other.robotSpecs_.isEmpty()) {
            if (robotSpecsBuilder_.isEmpty()) {
              robotSpecsBuilder_.dispose();
              robotSpecsBuilder_ = null;
              robotSpecs_ = other.robotSpecs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              robotSpecsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRobotSpecsFieldBuilder() : null;
            } else {
              robotSpecsBuilder_.addAllMessages(other.robotSpecs_);
            }
          }
        }
        if (other.hasRealismConfig()) {
          mergeRealismConfig(other.getRealismConfig());
        }
        if (other.hasVisionPort()) {
          setVisionPort(other.getVisionPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasGeometry()) {
          if (!getGeometry().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getRobotSpecsCount(); i++) {
          if (!getRobotSpecs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationConfig.SimulatorConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationConfig.SimulatorConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.simulation.SslVisionGeometry.SSL_GeometryData geometry_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslVisionGeometry.SSL_GeometryData, proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder, proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder> geometryBuilder_;
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       * @return Whether the geometry field is set.
       */
      public boolean hasGeometry() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       * @return The geometry.
       */
      public proto.simulation.SslVisionGeometry.SSL_GeometryData getGeometry() {
        if (geometryBuilder_ == null) {
          return geometry_ == null ? proto.simulation.SslVisionGeometry.SSL_GeometryData.getDefaultInstance() : geometry_;
        } else {
          return geometryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public Builder setGeometry(proto.simulation.SslVisionGeometry.SSL_GeometryData value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          geometryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public Builder setGeometry(
          proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          geometryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public Builder mergeGeometry(proto.simulation.SslVisionGeometry.SSL_GeometryData value) {
        if (geometryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              geometry_ != null &&
              geometry_ != proto.simulation.SslVisionGeometry.SSL_GeometryData.getDefaultInstance()) {
            geometry_ =
              proto.simulation.SslVisionGeometry.SSL_GeometryData.newBuilder(geometry_).mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          geometryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public Builder clearGeometry() {
        if (geometryBuilder_ == null) {
          geometry_ = null;
          onChanged();
        } else {
          geometryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder getGeometryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGeometryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      public proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder getGeometryOrBuilder() {
        if (geometryBuilder_ != null) {
          return geometryBuilder_.getMessageOrBuilder();
        } else {
          return geometry_ == null ?
              proto.simulation.SslVisionGeometry.SSL_GeometryData.getDefaultInstance() : geometry_;
        }
      }
      /**
       * <pre>
       * Update the geometry
       * </pre>
       *
       * <code>optional .proto.simulation.SSL_GeometryData geometry = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslVisionGeometry.SSL_GeometryData, proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder, proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder> 
          getGeometryFieldBuilder() {
        if (geometryBuilder_ == null) {
          geometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslVisionGeometry.SSL_GeometryData, proto.simulation.SslVisionGeometry.SSL_GeometryData.Builder, proto.simulation.SslVisionGeometry.SSL_GeometryDataOrBuilder>(
                  getGeometry(),
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        return geometryBuilder_;
      }

      private java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs> robotSpecs_ =
        java.util.Collections.emptyList();
      private void ensureRobotSpecsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          robotSpecs_ = new java.util.ArrayList<proto.simulation.SslSimulationConfig.RobotSpecs>(robotSpecs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotSpecs, proto.simulation.SslSimulationConfig.RobotSpecs.Builder, proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder> robotSpecsBuilder_;

      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs> getRobotSpecsList() {
        if (robotSpecsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(robotSpecs_);
        } else {
          return robotSpecsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public int getRobotSpecsCount() {
        if (robotSpecsBuilder_ == null) {
          return robotSpecs_.size();
        } else {
          return robotSpecsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotSpecs getRobotSpecs(int index) {
        if (robotSpecsBuilder_ == null) {
          return robotSpecs_.get(index);
        } else {
          return robotSpecsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder setRobotSpecs(
          int index, proto.simulation.SslSimulationConfig.RobotSpecs value) {
        if (robotSpecsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotSpecsIsMutable();
          robotSpecs_.set(index, value);
          onChanged();
        } else {
          robotSpecsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder setRobotSpecs(
          int index, proto.simulation.SslSimulationConfig.RobotSpecs.Builder builderForValue) {
        if (robotSpecsBuilder_ == null) {
          ensureRobotSpecsIsMutable();
          robotSpecs_.set(index, builderForValue.build());
          onChanged();
        } else {
          robotSpecsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder addRobotSpecs(proto.simulation.SslSimulationConfig.RobotSpecs value) {
        if (robotSpecsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotSpecsIsMutable();
          robotSpecs_.add(value);
          onChanged();
        } else {
          robotSpecsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder addRobotSpecs(
          int index, proto.simulation.SslSimulationConfig.RobotSpecs value) {
        if (robotSpecsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotSpecsIsMutable();
          robotSpecs_.add(index, value);
          onChanged();
        } else {
          robotSpecsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder addRobotSpecs(
          proto.simulation.SslSimulationConfig.RobotSpecs.Builder builderForValue) {
        if (robotSpecsBuilder_ == null) {
          ensureRobotSpecsIsMutable();
          robotSpecs_.add(builderForValue.build());
          onChanged();
        } else {
          robotSpecsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder addRobotSpecs(
          int index, proto.simulation.SslSimulationConfig.RobotSpecs.Builder builderForValue) {
        if (robotSpecsBuilder_ == null) {
          ensureRobotSpecsIsMutable();
          robotSpecs_.add(index, builderForValue.build());
          onChanged();
        } else {
          robotSpecsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder addAllRobotSpecs(
          java.lang.Iterable<? extends proto.simulation.SslSimulationConfig.RobotSpecs> values) {
        if (robotSpecsBuilder_ == null) {
          ensureRobotSpecsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, robotSpecs_);
          onChanged();
        } else {
          robotSpecsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder clearRobotSpecs() {
        if (robotSpecsBuilder_ == null) {
          robotSpecs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          robotSpecsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public Builder removeRobotSpecs(int index) {
        if (robotSpecsBuilder_ == null) {
          ensureRobotSpecsIsMutable();
          robotSpecs_.remove(index);
          onChanged();
        } else {
          robotSpecsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotSpecs.Builder getRobotSpecsBuilder(
          int index) {
        return getRobotSpecsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder getRobotSpecsOrBuilder(
          int index) {
        if (robotSpecsBuilder_ == null) {
          return robotSpecs_.get(index);  } else {
          return robotSpecsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public java.util.List<? extends proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder> 
           getRobotSpecsOrBuilderList() {
        if (robotSpecsBuilder_ != null) {
          return robotSpecsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(robotSpecs_);
        }
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotSpecs.Builder addRobotSpecsBuilder() {
        return getRobotSpecsFieldBuilder().addBuilder(
            proto.simulation.SslSimulationConfig.RobotSpecs.getDefaultInstance());
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.RobotSpecs.Builder addRobotSpecsBuilder(
          int index) {
        return getRobotSpecsFieldBuilder().addBuilder(
            index, proto.simulation.SslSimulationConfig.RobotSpecs.getDefaultInstance());
      }
      /**
       * <pre>
       * Update the robot specs
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotSpecs robot_specs = 2;</code>
       */
      public java.util.List<proto.simulation.SslSimulationConfig.RobotSpecs.Builder> 
           getRobotSpecsBuilderList() {
        return getRobotSpecsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RobotSpecs, proto.simulation.SslSimulationConfig.RobotSpecs.Builder, proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder> 
          getRobotSpecsFieldBuilder() {
        if (robotSpecsBuilder_ == null) {
          robotSpecsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.simulation.SslSimulationConfig.RobotSpecs, proto.simulation.SslSimulationConfig.RobotSpecs.Builder, proto.simulation.SslSimulationConfig.RobotSpecsOrBuilder>(
                  robotSpecs_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          robotSpecs_ = null;
        }
        return robotSpecsBuilder_;
      }

      private proto.simulation.SslSimulationConfig.RealismConfig realismConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RealismConfig, proto.simulation.SslSimulationConfig.RealismConfig.Builder, proto.simulation.SslSimulationConfig.RealismConfigOrBuilder> realismConfigBuilder_;
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       * @return Whether the realismConfig field is set.
       */
      public boolean hasRealismConfig() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       * @return The realismConfig.
       */
      public proto.simulation.SslSimulationConfig.RealismConfig getRealismConfig() {
        if (realismConfigBuilder_ == null) {
          return realismConfig_ == null ? proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance() : realismConfig_;
        } else {
          return realismConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public Builder setRealismConfig(proto.simulation.SslSimulationConfig.RealismConfig value) {
        if (realismConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          realismConfig_ = value;
          onChanged();
        } else {
          realismConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public Builder setRealismConfig(
          proto.simulation.SslSimulationConfig.RealismConfig.Builder builderForValue) {
        if (realismConfigBuilder_ == null) {
          realismConfig_ = builderForValue.build();
          onChanged();
        } else {
          realismConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public Builder mergeRealismConfig(proto.simulation.SslSimulationConfig.RealismConfig value) {
        if (realismConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              realismConfig_ != null &&
              realismConfig_ != proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance()) {
            realismConfig_ =
              proto.simulation.SslSimulationConfig.RealismConfig.newBuilder(realismConfig_).mergeFrom(value).buildPartial();
          } else {
            realismConfig_ = value;
          }
          onChanged();
        } else {
          realismConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public Builder clearRealismConfig() {
        if (realismConfigBuilder_ == null) {
          realismConfig_ = null;
          onChanged();
        } else {
          realismConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public proto.simulation.SslSimulationConfig.RealismConfig.Builder getRealismConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRealismConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      public proto.simulation.SslSimulationConfig.RealismConfigOrBuilder getRealismConfigOrBuilder() {
        if (realismConfigBuilder_ != null) {
          return realismConfigBuilder_.getMessageOrBuilder();
        } else {
          return realismConfig_ == null ?
              proto.simulation.SslSimulationConfig.RealismConfig.getDefaultInstance() : realismConfig_;
        }
      }
      /**
       * <pre>
       * Update realism configuration
       * </pre>
       *
       * <code>optional .proto.simulation.RealismConfig realism_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.RealismConfig, proto.simulation.SslSimulationConfig.RealismConfig.Builder, proto.simulation.SslSimulationConfig.RealismConfigOrBuilder> 
          getRealismConfigFieldBuilder() {
        if (realismConfigBuilder_ == null) {
          realismConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationConfig.RealismConfig, proto.simulation.SslSimulationConfig.RealismConfig.Builder, proto.simulation.SslSimulationConfig.RealismConfigOrBuilder>(
                  getRealismConfig(),
                  getParentForChildren(),
                  isClean());
          realismConfig_ = null;
        }
        return realismConfigBuilder_;
      }

      private int visionPort_ ;
      /**
       * <pre>
       * Change the vision publish port
       * </pre>
       *
       * <code>optional uint32 vision_port = 4;</code>
       * @return Whether the visionPort field is set.
       */
      @java.lang.Override
      public boolean hasVisionPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Change the vision publish port
       * </pre>
       *
       * <code>optional uint32 vision_port = 4;</code>
       * @return The visionPort.
       */
      @java.lang.Override
      public int getVisionPort() {
        return visionPort_;
      }
      /**
       * <pre>
       * Change the vision publish port
       * </pre>
       *
       * <code>optional uint32 vision_port = 4;</code>
       * @param value The visionPort to set.
       * @return This builder for chaining.
       */
      public Builder setVisionPort(int value) {
        bitField0_ |= 0x00000008;
        visionPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Change the vision publish port
       * </pre>
       *
       * <code>optional uint32 vision_port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVisionPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        visionPort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.SimulatorConfig)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.SimulatorConfig)
    private static final proto.simulation.SslSimulationConfig.SimulatorConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationConfig.SimulatorConfig();
    }

    public static proto.simulation.SslSimulationConfig.SimulatorConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SimulatorConfig>
        PARSER = new com.google.protobuf.AbstractParser<SimulatorConfig>() {
      @java.lang.Override
      public SimulatorConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimulatorConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimulatorConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulatorConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationConfig.SimulatorConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotLimits_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotLimits_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotWheelAngles_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotWheelAngles_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotSpecs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotSpecs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RealismConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RealismConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_SimulatorConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_SimulatorConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033ssl_simulation_config.proto\022\020proto.sim" +
      "ulation\032\023ssl_gc_common.proto\032\031ssl_vision" +
      "_geometry.proto\032\031google/protobuf/any.pro" +
      "to\"\302\001\n\013RobotLimits\022 \n\030acc_speedup_absolu" +
      "te_max\030\001 \001(\002\022\037\n\027acc_speedup_angular_max\030" +
      "\002 \001(\002\022\036\n\026acc_brake_absolute_max\030\003 \001(\002\022\035\n" +
      "\025acc_brake_angular_max\030\004 \001(\002\022\030\n\020vel_abso" +
      "lute_max\030\005 \001(\002\022\027\n\017vel_angular_max\030\006 \001(\002\"" +
      "b\n\020RobotWheelAngles\022\023\n\013front_right\030\001 \002(\002" +
      "\022\022\n\nback_right\030\002 \002(\002\022\021\n\tback_left\030\003 \002(\002\022" +
      "\022\n\nfront_left\030\004 \002(\002\"\324\002\n\nRobotSpecs\022%\n\002id" +
      "\030\001 \002(\0132\031.proto.simulation.RobotId\022\024\n\006rad" +
      "ius\030\002 \001(\002:\0040.09\022\024\n\006height\030\003 \001(\002:\0040.15\022\014\n" +
      "\004mass\030\004 \001(\002\022\035\n\025max_linear_kick_speed\030\007 \001" +
      "(\002\022\033\n\023max_chip_kick_speed\030\010 \001(\002\022\032\n\022cente" +
      "r_to_dribbler\030\t \001(\002\022-\n\006limits\030\n \001(\0132\035.pr" +
      "oto.simulation.RobotLimits\0228\n\014wheel_angl" +
      "es\030\r \001(\0132\".proto.simulation.RobotWheelAn" +
      "gles\022$\n\006custom\030\016 \003(\0132\024.google.protobuf.A" +
      "ny\"5\n\rRealismConfig\022$\n\006custom\030\001 \003(\0132\024.go" +
      "ogle.protobuf.Any\"\310\001\n\017SimulatorConfig\0224\n" +
      "\010geometry\030\001 \001(\0132\".proto.simulation.SSL_G" +
      "eometryData\0221\n\013robot_specs\030\002 \003(\0132\034.proto" +
      ".simulation.RobotSpecs\0227\n\016realism_config" +
      "\030\003 \001(\0132\037.proto.simulation.RealismConfig\022" +
      "\023\n\013vision_port\030\004 \001(\rB8Z6github.com/RoboC" +
      "up-SSL/ssl-simulation-protocol/pkg/sim"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.simulation.SslGcCommon.getDescriptor(),
          proto.simulation.SslVisionGeometry.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
        });
    internal_static_proto_simulation_RobotLimits_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_simulation_RobotLimits_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotLimits_descriptor,
        new java.lang.String[] { "AccSpeedupAbsoluteMax", "AccSpeedupAngularMax", "AccBrakeAbsoluteMax", "AccBrakeAngularMax", "VelAbsoluteMax", "VelAngularMax", });
    internal_static_proto_simulation_RobotWheelAngles_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_simulation_RobotWheelAngles_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotWheelAngles_descriptor,
        new java.lang.String[] { "FrontRight", "BackRight", "BackLeft", "FrontLeft", });
    internal_static_proto_simulation_RobotSpecs_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_simulation_RobotSpecs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotSpecs_descriptor,
        new java.lang.String[] { "Id", "Radius", "Height", "Mass", "MaxLinearKickSpeed", "MaxChipKickSpeed", "CenterToDribbler", "Limits", "WheelAngles", "Custom", });
    internal_static_proto_simulation_RealismConfig_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_simulation_RealismConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RealismConfig_descriptor,
        new java.lang.String[] { "Custom", });
    internal_static_proto_simulation_SimulatorConfig_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_simulation_SimulatorConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_SimulatorConfig_descriptor,
        new java.lang.String[] { "Geometry", "RobotSpecs", "RealismConfig", "VisionPort", });
    proto.simulation.SslGcCommon.getDescriptor();
    proto.simulation.SslVisionGeometry.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
