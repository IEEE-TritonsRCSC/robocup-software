// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_gc_rcon_team.proto

package proto.gc;

public final class SslGcRconTeam {
  private SslGcRconTeam() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * the current advantage choice of the team
   * the choice is valid until another choice is received
   * if the team disconnects, the choice is reset to its default (STOP)
   * teams may either send their current choice continuously or only on change
   * </pre>
   *
   * Protobuf enum {@code proto.gc.AdvantageChoice}
   */
  public enum AdvantageChoice
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * stop the game
     * </pre>
     *
     * <code>STOP = 0;</code>
     */
    STOP(0),
    /**
     * <pre>
     * keep the game running
     * </pre>
     *
     * <code>CONTINUE = 1;</code>
     */
    CONTINUE(1),
    ;

    /**
     * <pre>
     * stop the game
     * </pre>
     *
     * <code>STOP = 0;</code>
     */
    public static final int STOP_VALUE = 0;
    /**
     * <pre>
     * keep the game running
     * </pre>
     *
     * <code>CONTINUE = 1;</code>
     */
    public static final int CONTINUE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdvantageChoice valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdvantageChoice forNumber(int value) {
      switch (value) {
        case 0: return STOP;
        case 1: return CONTINUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdvantageChoice>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdvantageChoice> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdvantageChoice>() {
            public AdvantageChoice findValueByNumber(int number) {
              return AdvantageChoice.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return proto.gc.SslGcRconTeam.getDescriptor().getEnumTypes().get(0);
    }

    private static final AdvantageChoice[] VALUES = values();

    public static AdvantageChoice valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdvantageChoice(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.gc.AdvantageChoice)
  }

  public interface TeamRegistrationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.gc.TeamRegistration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return Whether the teamName field is set.
     */
    boolean hasTeamName();
    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return The teamName.
     */
    java.lang.String getTeamName();
    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return The bytes for teamName.
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     * @return The signature.
     */
    proto.gc.SslGcRcon.Signature getSignature();
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     */
    proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder();

    /**
     * <pre>
     * the team (relevant only if a team plays against itself)
     * </pre>
     *
     * <code>optional .proto.simulation.Team team = 3;</code>
     * @return Whether the team field is set.
     */
    boolean hasTeam();
    /**
     * <pre>
     * the team (relevant only if a team plays against itself)
     * </pre>
     *
     * <code>optional .proto.simulation.Team team = 3;</code>
     * @return The team.
     */
    proto.simulation.SslGcCommon.Team getTeam();
  }
  /**
   * <pre>
   * a registration that must be send by teams to the controller as the very first message
   * </pre>
   *
   * Protobuf type {@code proto.gc.TeamRegistration}
   */
  public static final class TeamRegistration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.gc.TeamRegistration)
      TeamRegistrationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TeamRegistration.newBuilder() to construct.
    private TeamRegistration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TeamRegistration() {
      teamName_ = "";
      team_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TeamRegistration();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TeamRegistration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              teamName_ = bs;
              break;
            }
            case 18: {
              proto.gc.SslGcRcon.Signature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(proto.gc.SslGcRcon.Signature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.simulation.SslGcCommon.Team value = proto.simulation.SslGcCommon.Team.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                team_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamRegistration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamRegistration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.gc.SslGcRconTeam.TeamRegistration.class, proto.gc.SslGcRconTeam.TeamRegistration.Builder.class);
    }

    private int bitField0_;
    public static final int TEAM_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object teamName_;
    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return Whether the teamName field is set.
     */
    @java.lang.Override
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return The teamName.
     */
    @java.lang.Override
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * the exact team name as published by the game-controller
     * </pre>
     *
     * <code>required string team_name = 1;</code>
     * @return The bytes for teamName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private proto.gc.SslGcRcon.Signature signature_;
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.Signature getSignature() {
      return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 2;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder() {
      return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
    }

    public static final int TEAM_FIELD_NUMBER = 3;
    private int team_;
    /**
     * <pre>
     * the team (relevant only if a team plays against itself)
     * </pre>
     *
     * <code>optional .proto.simulation.Team team = 3;</code>
     * @return Whether the team field is set.
     */
    @java.lang.Override public boolean hasTeam() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * the team (relevant only if a team plays against itself)
     * </pre>
     *
     * <code>optional .proto.simulation.Team team = 3;</code>
     * @return The team.
     */
    @java.lang.Override public proto.simulation.SslGcCommon.Team getTeam() {
      @SuppressWarnings("deprecation")
      proto.simulation.SslGcCommon.Team result = proto.simulation.SslGcCommon.Team.valueOf(team_);
      return result == null ? proto.simulation.SslGcCommon.Team.UNKNOWN : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTeamName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSignature()) {
        if (!getSignature().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, teamName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSignature());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, team_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, teamName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignature());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, team_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.gc.SslGcRconTeam.TeamRegistration)) {
        return super.equals(obj);
      }
      proto.gc.SslGcRconTeam.TeamRegistration other = (proto.gc.SslGcRconTeam.TeamRegistration) obj;

      if (hasTeamName() != other.hasTeamName()) return false;
      if (hasTeamName()) {
        if (!getTeamName()
            .equals(other.getTeamName())) return false;
      }
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (hasTeam() != other.hasTeam()) return false;
      if (hasTeam()) {
        if (team_ != other.team_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTeamName()) {
        hash = (37 * hash) + TEAM_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTeamName().hashCode();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      if (hasTeam()) {
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + team_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamRegistration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.gc.SslGcRconTeam.TeamRegistration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a registration that must be send by teams to the controller as the very first message
     * </pre>
     *
     * Protobuf type {@code proto.gc.TeamRegistration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.gc.TeamRegistration)
        proto.gc.SslGcRconTeam.TeamRegistrationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamRegistration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamRegistration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRconTeam.TeamRegistration.class, proto.gc.SslGcRconTeam.TeamRegistration.Builder.class);
      }

      // Construct using proto.gc.SslGcRconTeam.TeamRegistration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamRegistration_descriptor;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamRegistration getDefaultInstanceForType() {
        return proto.gc.SslGcRconTeam.TeamRegistration.getDefaultInstance();
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamRegistration build() {
        proto.gc.SslGcRconTeam.TeamRegistration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamRegistration buildPartial() {
        proto.gc.SslGcRconTeam.TeamRegistration result = new proto.gc.SslGcRconTeam.TeamRegistration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (signatureBuilder_ == null) {
            result.signature_ = signature_;
          } else {
            result.signature_ = signatureBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.team_ = team_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.gc.SslGcRconTeam.TeamRegistration) {
          return mergeFrom((proto.gc.SslGcRconTeam.TeamRegistration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.gc.SslGcRconTeam.TeamRegistration other) {
        if (other == proto.gc.SslGcRconTeam.TeamRegistration.getDefaultInstance()) return this;
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000001;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTeamName()) {
          return false;
        }
        if (hasSignature()) {
          if (!getSignature().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.gc.SslGcRconTeam.TeamRegistration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.gc.SslGcRconTeam.TeamRegistration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object teamName_ = "";
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @return Whether the teamName field is set.
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @return The teamName.
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @return The bytes for teamName.
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @param value The teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the exact team name as published by the game-controller
       * </pre>
       *
       * <code>required string team_name = 1;</code>
       * @param value The bytes for teamName to set.
       * @return This builder for chaining.
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamName_ = value;
        onChanged();
        return this;
      }

      private proto.gc.SslGcRcon.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder> signatureBuilder_;
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       * @return The signature.
       */
      public proto.gc.SslGcRcon.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public Builder setSignature(proto.gc.SslGcRcon.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public Builder setSignature(
          proto.gc.SslGcRcon.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public Builder mergeSignature(proto.gc.SslGcRcon.Signature value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              signature_ != null &&
              signature_ != proto.gc.SslGcRcon.Signature.getDefaultInstance()) {
            signature_ =
              proto.gc.SslGcRcon.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public proto.gc.SslGcRcon.Signature.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      public proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      private int team_ = 0;
      /**
       * <pre>
       * the team (relevant only if a team plays against itself)
       * </pre>
       *
       * <code>optional .proto.simulation.Team team = 3;</code>
       * @return Whether the team field is set.
       */
      @java.lang.Override public boolean hasTeam() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * the team (relevant only if a team plays against itself)
       * </pre>
       *
       * <code>optional .proto.simulation.Team team = 3;</code>
       * @return The team.
       */
      @java.lang.Override
      public proto.simulation.SslGcCommon.Team getTeam() {
        @SuppressWarnings("deprecation")
        proto.simulation.SslGcCommon.Team result = proto.simulation.SslGcCommon.Team.valueOf(team_);
        return result == null ? proto.simulation.SslGcCommon.Team.UNKNOWN : result;
      }
      /**
       * <pre>
       * the team (relevant only if a team plays against itself)
       * </pre>
       *
       * <code>optional .proto.simulation.Team team = 3;</code>
       * @param value The team to set.
       * @return This builder for chaining.
       */
      public Builder setTeam(proto.simulation.SslGcCommon.Team value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        team_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the team (relevant only if a team plays against itself)
       * </pre>
       *
       * <code>optional .proto.simulation.Team team = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        team_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.gc.TeamRegistration)
    }

    // @@protoc_insertion_point(class_scope:proto.gc.TeamRegistration)
    private static final proto.gc.SslGcRconTeam.TeamRegistration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.gc.SslGcRconTeam.TeamRegistration();
    }

    public static proto.gc.SslGcRconTeam.TeamRegistration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TeamRegistration>
        PARSER = new com.google.protobuf.AbstractParser<TeamRegistration>() {
      @java.lang.Override
      public TeamRegistration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeamRegistration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TeamRegistration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TeamRegistration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.gc.SslGcRconTeam.TeamRegistration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TeamToControllerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.gc.TeamToController)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     * @return The signature.
     */
    proto.gc.SslGcRcon.Signature getSignature();
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     */
    proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder();

    /**
     * <pre>
     * request a new desired keeper id
     * </pre>
     *
     * <code>int32 desired_keeper = 2;</code>
     * @return Whether the desiredKeeper field is set.
     */
    boolean hasDesiredKeeper();
    /**
     * <pre>
     * request a new desired keeper id
     * </pre>
     *
     * <code>int32 desired_keeper = 2;</code>
     * @return The desiredKeeper.
     */
    int getDesiredKeeper();

    /**
     * <pre>
     * response to an advantage choice request
     * </pre>
     *
     * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
     * @return Whether the advantageChoice field is set.
     */
    boolean hasAdvantageChoice();
    /**
     * <pre>
     * response to an advantage choice request
     * </pre>
     *
     * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
     * @return The advantageChoice.
     */
    proto.gc.SslGcRconTeam.AdvantageChoice getAdvantageChoice();

    /**
     * <pre>
     * request to substitute a robot at the next possibility
     * </pre>
     *
     * <code>bool substitute_bot = 4;</code>
     * @return Whether the substituteBot field is set.
     */
    boolean hasSubstituteBot();
    /**
     * <pre>
     * request to substitute a robot at the next possibility
     * </pre>
     *
     * <code>bool substitute_bot = 4;</code>
     * @return The substituteBot.
     */
    boolean getSubstituteBot();

    /**
     * <pre>
     * send a ping to the GC to test if the connection is still open.
     * the value is ignored and a reply is sent back
     * </pre>
     *
     * <code>bool ping = 5;</code>
     * @return Whether the ping field is set.
     */
    boolean hasPing();
    /**
     * <pre>
     * send a ping to the GC to test if the connection is still open.
     * the value is ignored and a reply is sent back
     * </pre>
     *
     * <code>bool ping = 5;</code>
     * @return The ping.
     */
    boolean getPing();

    public proto.gc.SslGcRconTeam.TeamToController.MsgCase getMsgCase();
  }
  /**
   * <pre>
   * wrapper for all messages from a team's computer to the controller
   * </pre>
   *
   * Protobuf type {@code proto.gc.TeamToController}
   */
  public static final class TeamToController extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.gc.TeamToController)
      TeamToControllerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TeamToController.newBuilder() to construct.
    private TeamToController(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TeamToController() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TeamToController();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TeamToController(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.gc.SslGcRcon.Signature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(proto.gc.SslGcRcon.Signature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              msgCase_ = 2;
              msg_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
              proto.gc.SslGcRconTeam.AdvantageChoice value = proto.gc.SslGcRconTeam.AdvantageChoice.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                msgCase_ = 3;
                msg_ = rawValue;
              }
              break;
            }
            case 32: {
              msgCase_ = 4;
              msg_ = input.readBool();
              break;
            }
            case 40: {
              msgCase_ = 5;
              msg_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamToController_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamToController_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.gc.SslGcRconTeam.TeamToController.class, proto.gc.SslGcRconTeam.TeamToController.Builder.class);
    }

    private int bitField0_;
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DESIRED_KEEPER(2),
      ADVANTAGE_CHOICE(3),
      SUBSTITUTE_BOT(4),
      PING(5),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 2: return DESIRED_KEEPER;
          case 3: return ADVANTAGE_CHOICE;
          case 4: return SUBSTITUTE_BOT;
          case 5: return PING;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private proto.gc.SslGcRcon.Signature signature_;
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     * @return The signature.
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.Signature getSignature() {
      return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <pre>
     * signature can optionally be specified to enable secure communication
     * </pre>
     *
     * <code>optional .proto.gc.Signature signature = 1;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder() {
      return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
    }

    public static final int DESIRED_KEEPER_FIELD_NUMBER = 2;
    /**
     * <pre>
     * request a new desired keeper id
     * </pre>
     *
     * <code>int32 desired_keeper = 2;</code>
     * @return Whether the desiredKeeper field is set.
     */
    @java.lang.Override
    public boolean hasDesiredKeeper() {
      return msgCase_ == 2;
    }
    /**
     * <pre>
     * request a new desired keeper id
     * </pre>
     *
     * <code>int32 desired_keeper = 2;</code>
     * @return The desiredKeeper.
     */
    @java.lang.Override
    public int getDesiredKeeper() {
      if (msgCase_ == 2) {
        return (java.lang.Integer) msg_;
      }
      return 0;
    }

    public static final int ADVANTAGE_CHOICE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * response to an advantage choice request
     * </pre>
     *
     * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
     * @return Whether the advantageChoice field is set.
     */
    public boolean hasAdvantageChoice() {
      return msgCase_ == 3;
    }
    /**
     * <pre>
     * response to an advantage choice request
     * </pre>
     *
     * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
     * @return The advantageChoice.
     */
    public proto.gc.SslGcRconTeam.AdvantageChoice getAdvantageChoice() {
      if (msgCase_ == 3) {
        @SuppressWarnings("deprecation")
        proto.gc.SslGcRconTeam.AdvantageChoice result = proto.gc.SslGcRconTeam.AdvantageChoice.valueOf(
            (java.lang.Integer) msg_);
        return result == null ? proto.gc.SslGcRconTeam.AdvantageChoice.STOP : result;
      }
      return proto.gc.SslGcRconTeam.AdvantageChoice.STOP;
    }

    public static final int SUBSTITUTE_BOT_FIELD_NUMBER = 4;
    /**
     * <pre>
     * request to substitute a robot at the next possibility
     * </pre>
     *
     * <code>bool substitute_bot = 4;</code>
     * @return Whether the substituteBot field is set.
     */
    @java.lang.Override
    public boolean hasSubstituteBot() {
      return msgCase_ == 4;
    }
    /**
     * <pre>
     * request to substitute a robot at the next possibility
     * </pre>
     *
     * <code>bool substitute_bot = 4;</code>
     * @return The substituteBot.
     */
    @java.lang.Override
    public boolean getSubstituteBot() {
      if (msgCase_ == 4) {
        return (java.lang.Boolean) msg_;
      }
      return false;
    }

    public static final int PING_FIELD_NUMBER = 5;
    /**
     * <pre>
     * send a ping to the GC to test if the connection is still open.
     * the value is ignored and a reply is sent back
     * </pre>
     *
     * <code>bool ping = 5;</code>
     * @return Whether the ping field is set.
     */
    @java.lang.Override
    public boolean hasPing() {
      return msgCase_ == 5;
    }
    /**
     * <pre>
     * send a ping to the GC to test if the connection is still open.
     * the value is ignored and a reply is sent back
     * </pre>
     *
     * <code>bool ping = 5;</code>
     * @return The ping.
     */
    @java.lang.Override
    public boolean getPing() {
      if (msgCase_ == 5) {
        return (java.lang.Boolean) msg_;
      }
      return false;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasSignature()) {
        if (!getSignature().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSignature());
      }
      if (msgCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) msg_));
      }
      if (msgCase_ == 3) {
        output.writeEnum(3, ((java.lang.Integer) msg_));
      }
      if (msgCase_ == 4) {
        output.writeBool(
            4, (boolean)((java.lang.Boolean) msg_));
      }
      if (msgCase_ == 5) {
        output.writeBool(
            5, (boolean)((java.lang.Boolean) msg_));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSignature());
      }
      if (msgCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) msg_));
      }
      if (msgCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ((java.lang.Integer) msg_));
      }
      if (msgCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              4, (boolean)((java.lang.Boolean) msg_));
      }
      if (msgCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              5, (boolean)((java.lang.Boolean) msg_));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.gc.SslGcRconTeam.TeamToController)) {
        return super.equals(obj);
      }
      proto.gc.SslGcRconTeam.TeamToController other = (proto.gc.SslGcRconTeam.TeamToController) obj;

      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!getMsgCase().equals(other.getMsgCase())) return false;
      switch (msgCase_) {
        case 2:
          if (getDesiredKeeper()
              != other.getDesiredKeeper()) return false;
          break;
        case 3:
          if (!getAdvantageChoice()
              .equals(other.getAdvantageChoice())) return false;
          break;
        case 4:
          if (getSubstituteBot()
              != other.getSubstituteBot()) return false;
          break;
        case 5:
          if (getPing()
              != other.getPing()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      switch (msgCase_) {
        case 2:
          hash = (37 * hash) + DESIRED_KEEPER_FIELD_NUMBER;
          hash = (53 * hash) + getDesiredKeeper();
          break;
        case 3:
          hash = (37 * hash) + ADVANTAGE_CHOICE_FIELD_NUMBER;
          hash = (53 * hash) + getAdvantageChoice().getNumber();
          break;
        case 4:
          hash = (37 * hash) + SUBSTITUTE_BOT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getSubstituteBot());
          break;
        case 5:
          hash = (37 * hash) + PING_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPing());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.TeamToController parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.gc.SslGcRconTeam.TeamToController prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * wrapper for all messages from a team's computer to the controller
     * </pre>
     *
     * Protobuf type {@code proto.gc.TeamToController}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.gc.TeamToController)
        proto.gc.SslGcRconTeam.TeamToControllerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamToController_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamToController_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRconTeam.TeamToController.class, proto.gc.SslGcRconTeam.TeamToController.Builder.class);
      }

      // Construct using proto.gc.SslGcRconTeam.TeamToController.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        msgCase_ = 0;
        msg_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_TeamToController_descriptor;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamToController getDefaultInstanceForType() {
        return proto.gc.SslGcRconTeam.TeamToController.getDefaultInstance();
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamToController build() {
        proto.gc.SslGcRconTeam.TeamToController result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.TeamToController buildPartial() {
        proto.gc.SslGcRconTeam.TeamToController result = new proto.gc.SslGcRconTeam.TeamToController(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (signatureBuilder_ == null) {
            result.signature_ = signature_;
          } else {
            result.signature_ = signatureBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (msgCase_ == 2) {
          result.msg_ = msg_;
        }
        if (msgCase_ == 3) {
          result.msg_ = msg_;
        }
        if (msgCase_ == 4) {
          result.msg_ = msg_;
        }
        if (msgCase_ == 5) {
          result.msg_ = msg_;
        }
        result.bitField0_ = to_bitField0_;
        result.msgCase_ = msgCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.gc.SslGcRconTeam.TeamToController) {
          return mergeFrom((proto.gc.SslGcRconTeam.TeamToController)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.gc.SslGcRconTeam.TeamToController other) {
        if (other == proto.gc.SslGcRconTeam.TeamToController.getDefaultInstance()) return this;
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        switch (other.getMsgCase()) {
          case DESIRED_KEEPER: {
            setDesiredKeeper(other.getDesiredKeeper());
            break;
          }
          case ADVANTAGE_CHOICE: {
            setAdvantageChoice(other.getAdvantageChoice());
            break;
          }
          case SUBSTITUTE_BOT: {
            setSubstituteBot(other.getSubstituteBot());
            break;
          }
          case PING: {
            setPing(other.getPing());
            break;
          }
          case MSG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasSignature()) {
          if (!getSignature().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.gc.SslGcRconTeam.TeamToController parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.gc.SslGcRconTeam.TeamToController) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int msgCase_ = 0;
      private java.lang.Object msg_;
      public MsgCase
          getMsgCase() {
        return MsgCase.forNumber(
            msgCase_);
      }

      public Builder clearMsg() {
        msgCase_ = 0;
        msg_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private proto.gc.SslGcRcon.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder> signatureBuilder_;
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       * @return The signature.
       */
      public proto.gc.SslGcRcon.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public Builder setSignature(proto.gc.SslGcRcon.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public Builder setSignature(
          proto.gc.SslGcRcon.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public Builder mergeSignature(proto.gc.SslGcRcon.Signature value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              signature_ != null &&
              signature_ != proto.gc.SslGcRcon.Signature.getDefaultInstance()) {
            signature_ =
              proto.gc.SslGcRcon.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public proto.gc.SslGcRcon.Signature.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      public proto.gc.SslGcRcon.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              proto.gc.SslGcRcon.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <pre>
       * signature can optionally be specified to enable secure communication
       * </pre>
       *
       * <code>optional .proto.gc.Signature signature = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRcon.Signature, proto.gc.SslGcRcon.Signature.Builder, proto.gc.SslGcRcon.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      /**
       * <pre>
       * request a new desired keeper id
       * </pre>
       *
       * <code>int32 desired_keeper = 2;</code>
       * @return Whether the desiredKeeper field is set.
       */
      public boolean hasDesiredKeeper() {
        return msgCase_ == 2;
      }
      /**
       * <pre>
       * request a new desired keeper id
       * </pre>
       *
       * <code>int32 desired_keeper = 2;</code>
       * @return The desiredKeeper.
       */
      public int getDesiredKeeper() {
        if (msgCase_ == 2) {
          return (java.lang.Integer) msg_;
        }
        return 0;
      }
      /**
       * <pre>
       * request a new desired keeper id
       * </pre>
       *
       * <code>int32 desired_keeper = 2;</code>
       * @param value The desiredKeeper to set.
       * @return This builder for chaining.
       */
      public Builder setDesiredKeeper(int value) {
        msgCase_ = 2;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request a new desired keeper id
       * </pre>
       *
       * <code>int32 desired_keeper = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDesiredKeeper() {
        if (msgCase_ == 2) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * response to an advantage choice request
       * </pre>
       *
       * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
       * @return Whether the advantageChoice field is set.
       */
      @java.lang.Override
      public boolean hasAdvantageChoice() {
        return msgCase_ == 3;
      }
      /**
       * <pre>
       * response to an advantage choice request
       * </pre>
       *
       * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
       * @return The advantageChoice.
       */
      @java.lang.Override
      public proto.gc.SslGcRconTeam.AdvantageChoice getAdvantageChoice() {
        if (msgCase_ == 3) {
          @SuppressWarnings("deprecation")
          proto.gc.SslGcRconTeam.AdvantageChoice result = proto.gc.SslGcRconTeam.AdvantageChoice.valueOf(
              (java.lang.Integer) msg_);
          return result == null ? proto.gc.SslGcRconTeam.AdvantageChoice.STOP : result;
        }
        return proto.gc.SslGcRconTeam.AdvantageChoice.STOP;
      }
      /**
       * <pre>
       * response to an advantage choice request
       * </pre>
       *
       * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
       * @param value The advantageChoice to set.
       * @return This builder for chaining.
       */
      public Builder setAdvantageChoice(proto.gc.SslGcRconTeam.AdvantageChoice value) {
        if (value == null) {
          throw new NullPointerException();
        }
        msgCase_ = 3;
        msg_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * response to an advantage choice request
       * </pre>
       *
       * <code>.proto.gc.AdvantageChoice advantage_choice = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAdvantageChoice() {
        if (msgCase_ == 3) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * request to substitute a robot at the next possibility
       * </pre>
       *
       * <code>bool substitute_bot = 4;</code>
       * @return Whether the substituteBot field is set.
       */
      public boolean hasSubstituteBot() {
        return msgCase_ == 4;
      }
      /**
       * <pre>
       * request to substitute a robot at the next possibility
       * </pre>
       *
       * <code>bool substitute_bot = 4;</code>
       * @return The substituteBot.
       */
      public boolean getSubstituteBot() {
        if (msgCase_ == 4) {
          return (java.lang.Boolean) msg_;
        }
        return false;
      }
      /**
       * <pre>
       * request to substitute a robot at the next possibility
       * </pre>
       *
       * <code>bool substitute_bot = 4;</code>
       * @param value The substituteBot to set.
       * @return This builder for chaining.
       */
      public Builder setSubstituteBot(boolean value) {
        msgCase_ = 4;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request to substitute a robot at the next possibility
       * </pre>
       *
       * <code>bool substitute_bot = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubstituteBot() {
        if (msgCase_ == 4) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * send a ping to the GC to test if the connection is still open.
       * the value is ignored and a reply is sent back
       * </pre>
       *
       * <code>bool ping = 5;</code>
       * @return Whether the ping field is set.
       */
      public boolean hasPing() {
        return msgCase_ == 5;
      }
      /**
       * <pre>
       * send a ping to the GC to test if the connection is still open.
       * the value is ignored and a reply is sent back
       * </pre>
       *
       * <code>bool ping = 5;</code>
       * @return The ping.
       */
      public boolean getPing() {
        if (msgCase_ == 5) {
          return (java.lang.Boolean) msg_;
        }
        return false;
      }
      /**
       * <pre>
       * send a ping to the GC to test if the connection is still open.
       * the value is ignored and a reply is sent back
       * </pre>
       *
       * <code>bool ping = 5;</code>
       * @param value The ping to set.
       * @return This builder for chaining.
       */
      public Builder setPing(boolean value) {
        msgCase_ = 5;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * send a ping to the GC to test if the connection is still open.
       * the value is ignored and a reply is sent back
       * </pre>
       *
       * <code>bool ping = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPing() {
        if (msgCase_ == 5) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.gc.TeamToController)
    }

    // @@protoc_insertion_point(class_scope:proto.gc.TeamToController)
    private static final proto.gc.SslGcRconTeam.TeamToController DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.gc.SslGcRconTeam.TeamToController();
    }

    public static proto.gc.SslGcRconTeam.TeamToController getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TeamToController>
        PARSER = new com.google.protobuf.AbstractParser<TeamToController>() {
      @java.lang.Override
      public TeamToController parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeamToController(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TeamToController> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TeamToController> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.gc.SslGcRconTeam.TeamToController getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControllerToTeamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.gc.ControllerToTeam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     * @return Whether the controllerReply field is set.
     */
    boolean hasControllerReply();
    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     * @return The controllerReply.
     */
    proto.gc.SslGcRcon.ControllerReply getControllerReply();
    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     */
    proto.gc.SslGcRcon.ControllerReplyOrBuilder getControllerReplyOrBuilder();

    public proto.gc.SslGcRconTeam.ControllerToTeam.MsgCase getMsgCase();
  }
  /**
   * <pre>
   * wrapper for all messages from controller to a team's computer
   * </pre>
   *
   * Protobuf type {@code proto.gc.ControllerToTeam}
   */
  public static final class ControllerToTeam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.gc.ControllerToTeam)
      ControllerToTeamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ControllerToTeam.newBuilder() to construct.
    private ControllerToTeam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControllerToTeam() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ControllerToTeam();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ControllerToTeam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.gc.SslGcRcon.ControllerReply.Builder subBuilder = null;
              if (msgCase_ == 1) {
                subBuilder = ((proto.gc.SslGcRcon.ControllerReply) msg_).toBuilder();
              }
              msg_ =
                  input.readMessage(proto.gc.SslGcRcon.ControllerReply.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((proto.gc.SslGcRcon.ControllerReply) msg_);
                msg_ = subBuilder.buildPartial();
              }
              msgCase_ = 1;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_ControllerToTeam_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.gc.SslGcRconTeam.internal_static_proto_gc_ControllerToTeam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.gc.SslGcRconTeam.ControllerToTeam.class, proto.gc.SslGcRconTeam.ControllerToTeam.Builder.class);
    }

    private int bitField0_;
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public enum MsgCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CONTROLLER_REPLY(1),
      MSG_NOT_SET(0);
      private final int value;
      private MsgCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MsgCase forNumber(int value) {
        switch (value) {
          case 1: return CONTROLLER_REPLY;
          case 0: return MSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MsgCase
    getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    public static final int CONTROLLER_REPLY_FIELD_NUMBER = 1;
    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     * @return Whether the controllerReply field is set.
     */
    @java.lang.Override
    public boolean hasControllerReply() {
      return msgCase_ == 1;
    }
    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     * @return The controllerReply.
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.ControllerReply getControllerReply() {
      if (msgCase_ == 1) {
         return (proto.gc.SslGcRcon.ControllerReply) msg_;
      }
      return proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
    }
    /**
     * <pre>
     * a reply from the controller
     * </pre>
     *
     * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
     */
    @java.lang.Override
    public proto.gc.SslGcRcon.ControllerReplyOrBuilder getControllerReplyOrBuilder() {
      if (msgCase_ == 1) {
         return (proto.gc.SslGcRcon.ControllerReply) msg_;
      }
      return proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgCase_ == 1) {
        output.writeMessage(1, (proto.gc.SslGcRcon.ControllerReply) msg_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msgCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (proto.gc.SslGcRcon.ControllerReply) msg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.gc.SslGcRconTeam.ControllerToTeam)) {
        return super.equals(obj);
      }
      proto.gc.SslGcRconTeam.ControllerToTeam other = (proto.gc.SslGcRconTeam.ControllerToTeam) obj;

      if (!getMsgCase().equals(other.getMsgCase())) return false;
      switch (msgCase_) {
        case 1:
          if (!getControllerReply()
              .equals(other.getControllerReply())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (msgCase_) {
        case 1:
          hash = (37 * hash) + CONTROLLER_REPLY_FIELD_NUMBER;
          hash = (53 * hash) + getControllerReply().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.gc.SslGcRconTeam.ControllerToTeam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.gc.SslGcRconTeam.ControllerToTeam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * wrapper for all messages from controller to a team's computer
     * </pre>
     *
     * Protobuf type {@code proto.gc.ControllerToTeam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.gc.ControllerToTeam)
        proto.gc.SslGcRconTeam.ControllerToTeamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_ControllerToTeam_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_ControllerToTeam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.gc.SslGcRconTeam.ControllerToTeam.class, proto.gc.SslGcRconTeam.ControllerToTeam.Builder.class);
      }

      // Construct using proto.gc.SslGcRconTeam.ControllerToTeam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        msgCase_ = 0;
        msg_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.gc.SslGcRconTeam.internal_static_proto_gc_ControllerToTeam_descriptor;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.ControllerToTeam getDefaultInstanceForType() {
        return proto.gc.SslGcRconTeam.ControllerToTeam.getDefaultInstance();
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.ControllerToTeam build() {
        proto.gc.SslGcRconTeam.ControllerToTeam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.gc.SslGcRconTeam.ControllerToTeam buildPartial() {
        proto.gc.SslGcRconTeam.ControllerToTeam result = new proto.gc.SslGcRconTeam.ControllerToTeam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (msgCase_ == 1) {
          if (controllerReplyBuilder_ == null) {
            result.msg_ = msg_;
          } else {
            result.msg_ = controllerReplyBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.msgCase_ = msgCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.gc.SslGcRconTeam.ControllerToTeam) {
          return mergeFrom((proto.gc.SslGcRconTeam.ControllerToTeam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.gc.SslGcRconTeam.ControllerToTeam other) {
        if (other == proto.gc.SslGcRconTeam.ControllerToTeam.getDefaultInstance()) return this;
        switch (other.getMsgCase()) {
          case CONTROLLER_REPLY: {
            mergeControllerReply(other.getControllerReply());
            break;
          }
          case MSG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.gc.SslGcRconTeam.ControllerToTeam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.gc.SslGcRconTeam.ControllerToTeam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int msgCase_ = 0;
      private java.lang.Object msg_;
      public MsgCase
          getMsgCase() {
        return MsgCase.forNumber(
            msgCase_);
      }

      public Builder clearMsg() {
        msgCase_ = 0;
        msg_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.ControllerReply, proto.gc.SslGcRcon.ControllerReply.Builder, proto.gc.SslGcRcon.ControllerReplyOrBuilder> controllerReplyBuilder_;
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       * @return Whether the controllerReply field is set.
       */
      @java.lang.Override
      public boolean hasControllerReply() {
        return msgCase_ == 1;
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       * @return The controllerReply.
       */
      @java.lang.Override
      public proto.gc.SslGcRcon.ControllerReply getControllerReply() {
        if (controllerReplyBuilder_ == null) {
          if (msgCase_ == 1) {
            return (proto.gc.SslGcRcon.ControllerReply) msg_;
          }
          return proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
        } else {
          if (msgCase_ == 1) {
            return controllerReplyBuilder_.getMessage();
          }
          return proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      public Builder setControllerReply(proto.gc.SslGcRcon.ControllerReply value) {
        if (controllerReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          msg_ = value;
          onChanged();
        } else {
          controllerReplyBuilder_.setMessage(value);
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      public Builder setControllerReply(
          proto.gc.SslGcRcon.ControllerReply.Builder builderForValue) {
        if (controllerReplyBuilder_ == null) {
          msg_ = builderForValue.build();
          onChanged();
        } else {
          controllerReplyBuilder_.setMessage(builderForValue.build());
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      public Builder mergeControllerReply(proto.gc.SslGcRcon.ControllerReply value) {
        if (controllerReplyBuilder_ == null) {
          if (msgCase_ == 1 &&
              msg_ != proto.gc.SslGcRcon.ControllerReply.getDefaultInstance()) {
            msg_ = proto.gc.SslGcRcon.ControllerReply.newBuilder((proto.gc.SslGcRcon.ControllerReply) msg_)
                .mergeFrom(value).buildPartial();
          } else {
            msg_ = value;
          }
          onChanged();
        } else {
          if (msgCase_ == 1) {
            controllerReplyBuilder_.mergeFrom(value);
          }
          controllerReplyBuilder_.setMessage(value);
        }
        msgCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      public Builder clearControllerReply() {
        if (controllerReplyBuilder_ == null) {
          if (msgCase_ == 1) {
            msgCase_ = 0;
            msg_ = null;
            onChanged();
          }
        } else {
          if (msgCase_ == 1) {
            msgCase_ = 0;
            msg_ = null;
          }
          controllerReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      public proto.gc.SslGcRcon.ControllerReply.Builder getControllerReplyBuilder() {
        return getControllerReplyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      @java.lang.Override
      public proto.gc.SslGcRcon.ControllerReplyOrBuilder getControllerReplyOrBuilder() {
        if ((msgCase_ == 1) && (controllerReplyBuilder_ != null)) {
          return controllerReplyBuilder_.getMessageOrBuilder();
        } else {
          if (msgCase_ == 1) {
            return (proto.gc.SslGcRcon.ControllerReply) msg_;
          }
          return proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * a reply from the controller
       * </pre>
       *
       * <code>.proto.gc.ControllerReply controller_reply = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.gc.SslGcRcon.ControllerReply, proto.gc.SslGcRcon.ControllerReply.Builder, proto.gc.SslGcRcon.ControllerReplyOrBuilder> 
          getControllerReplyFieldBuilder() {
        if (controllerReplyBuilder_ == null) {
          if (!(msgCase_ == 1)) {
            msg_ = proto.gc.SslGcRcon.ControllerReply.getDefaultInstance();
          }
          controllerReplyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.gc.SslGcRcon.ControllerReply, proto.gc.SslGcRcon.ControllerReply.Builder, proto.gc.SslGcRcon.ControllerReplyOrBuilder>(
                  (proto.gc.SslGcRcon.ControllerReply) msg_,
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        msgCase_ = 1;
        onChanged();;
        return controllerReplyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.gc.ControllerToTeam)
    }

    // @@protoc_insertion_point(class_scope:proto.gc.ControllerToTeam)
    private static final proto.gc.SslGcRconTeam.ControllerToTeam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.gc.SslGcRconTeam.ControllerToTeam();
    }

    public static proto.gc.SslGcRconTeam.ControllerToTeam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ControllerToTeam>
        PARSER = new com.google.protobuf.AbstractParser<ControllerToTeam>() {
      @java.lang.Override
      public ControllerToTeam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControllerToTeam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControllerToTeam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControllerToTeam> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.gc.SslGcRconTeam.ControllerToTeam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_TeamRegistration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_TeamRegistration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_TeamToController_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_TeamToController_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_gc_ControllerToTeam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_gc_ControllerToTeam_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026ssl_gc_rcon_team.proto\022\010proto.gc\032\021ssl_" +
      "gc_rcon.proto\032\023ssl_gc_common.proto\"s\n\020Te" +
      "amRegistration\022\021\n\tteam_name\030\001 \002(\t\022&\n\tsig" +
      "nature\030\002 \001(\0132\023.proto.gc.Signature\022$\n\004tea" +
      "m\030\003 \001(\0162\026.proto.simulation.Team\"\274\001\n\020Team" +
      "ToController\022&\n\tsignature\030\001 \001(\0132\023.proto." +
      "gc.Signature\022\030\n\016desired_keeper\030\002 \001(\005H\000\0225" +
      "\n\020advantage_choice\030\003 \001(\0162\031.proto.gc.Adva" +
      "ntageChoiceH\000\022\030\n\016substitute_bot\030\004 \001(\010H\000\022" +
      "\016\n\004ping\030\005 \001(\010H\000B\005\n\003msg\"V\n\020ControllerToTe" +
      "am\0225\n\020controller_reply\030\001 \001(\0132\031.proto.gc." +
      "ControllerReplyH\000B\005\n\003msgJ\004\010\002\020\003*)\n\017Advant" +
      "ageChoice\022\010\n\004STOP\020\000\022\014\n\010CONTINUE\020\001B>Z<git" +
      "hub.com/RoboCup-SSL/ssl-game-controller/" +
      "internal/app/rcon"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.gc.SslGcRcon.getDescriptor(),
          proto.simulation.SslGcCommon.getDescriptor(),
        });
    internal_static_proto_gc_TeamRegistration_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_gc_TeamRegistration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_TeamRegistration_descriptor,
        new java.lang.String[] { "TeamName", "Signature", "Team", });
    internal_static_proto_gc_TeamToController_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_gc_TeamToController_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_TeamToController_descriptor,
        new java.lang.String[] { "Signature", "DesiredKeeper", "AdvantageChoice", "SubstituteBot", "Ping", "Msg", });
    internal_static_proto_gc_ControllerToTeam_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_gc_ControllerToTeam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_gc_ControllerToTeam_descriptor,
        new java.lang.String[] { "ControllerReply", "Msg", });
    proto.gc.SslGcRcon.getDescriptor();
    proto.simulation.SslGcCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
