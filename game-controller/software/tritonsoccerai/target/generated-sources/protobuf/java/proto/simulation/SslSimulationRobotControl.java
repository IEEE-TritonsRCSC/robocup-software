// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_simulation_robot_control.proto

package proto.simulation;

public final class SslSimulationRobotControl {
  private SslSimulationRobotControl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RobotCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     * @return Whether the moveCommand field is set.
     */
    boolean hasMoveCommand();
    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     * @return The moveCommand.
     */
    proto.simulation.SslSimulationRobotControl.RobotMoveCommand getMoveCommand();
    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     */
    proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder getMoveCommandOrBuilder();

    /**
     * <pre>
     * Absolute (3 dimensional) kick speed [m/s]
     * </pre>
     *
     * <code>optional float kick_speed = 3;</code>
     * @return Whether the kickSpeed field is set.
     */
    boolean hasKickSpeed();
    /**
     * <pre>
     * Absolute (3 dimensional) kick speed [m/s]
     * </pre>
     *
     * <code>optional float kick_speed = 3;</code>
     * @return The kickSpeed.
     */
    float getKickSpeed();

    /**
     * <pre>
     * Kick angle [degree] (defaults to 0 degrees for a straight kick)
     * </pre>
     *
     * <code>optional float kick_angle = 4 [default = 0];</code>
     * @return Whether the kickAngle field is set.
     */
    boolean hasKickAngle();
    /**
     * <pre>
     * Kick angle [degree] (defaults to 0 degrees for a straight kick)
     * </pre>
     *
     * <code>optional float kick_angle = 4 [default = 0];</code>
     * @return The kickAngle.
     */
    float getKickAngle();

    /**
     * <pre>
     * Dribbler speed in rounds per minute [rpm]
     * </pre>
     *
     * <code>optional float dribbler_speed = 5;</code>
     * @return Whether the dribblerSpeed field is set.
     */
    boolean hasDribblerSpeed();
    /**
     * <pre>
     * Dribbler speed in rounds per minute [rpm]
     * </pre>
     *
     * <code>optional float dribbler_speed = 5;</code>
     * @return The dribblerSpeed.
     */
    float getDribblerSpeed();
  }
  /**
   * <pre>
   * Full command for a single robot
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotCommand}
   */
  public static final class RobotCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotCommand)
      RobotCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotCommand.newBuilder() to construct.
    private RobotCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotCommand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 18: {
              proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = moveCommand_.toBuilder();
              }
              moveCommand_ = input.readMessage(proto.simulation.SslSimulationRobotControl.RobotMoveCommand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(moveCommand_);
                moveCommand_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              kickSpeed_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              kickAngle_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              dribblerSpeed_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.RobotCommand.class, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Id of the robot
     * </pre>
     *
     * <code>required uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int MOVE_COMMAND_FIELD_NUMBER = 2;
    private proto.simulation.SslSimulationRobotControl.RobotMoveCommand moveCommand_;
    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     * @return Whether the moveCommand field is set.
     */
    @java.lang.Override
    public boolean hasMoveCommand() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     * @return The moveCommand.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotMoveCommand getMoveCommand() {
      return moveCommand_ == null ? proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance() : moveCommand_;
    }
    /**
     * <pre>
     * Movement command
     * </pre>
     *
     * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder getMoveCommandOrBuilder() {
      return moveCommand_ == null ? proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance() : moveCommand_;
    }

    public static final int KICK_SPEED_FIELD_NUMBER = 3;
    private float kickSpeed_;
    /**
     * <pre>
     * Absolute (3 dimensional) kick speed [m/s]
     * </pre>
     *
     * <code>optional float kick_speed = 3;</code>
     * @return Whether the kickSpeed field is set.
     */
    @java.lang.Override
    public boolean hasKickSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Absolute (3 dimensional) kick speed [m/s]
     * </pre>
     *
     * <code>optional float kick_speed = 3;</code>
     * @return The kickSpeed.
     */
    @java.lang.Override
    public float getKickSpeed() {
      return kickSpeed_;
    }

    public static final int KICK_ANGLE_FIELD_NUMBER = 4;
    private float kickAngle_;
    /**
     * <pre>
     * Kick angle [degree] (defaults to 0 degrees for a straight kick)
     * </pre>
     *
     * <code>optional float kick_angle = 4 [default = 0];</code>
     * @return Whether the kickAngle field is set.
     */
    @java.lang.Override
    public boolean hasKickAngle() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Kick angle [degree] (defaults to 0 degrees for a straight kick)
     * </pre>
     *
     * <code>optional float kick_angle = 4 [default = 0];</code>
     * @return The kickAngle.
     */
    @java.lang.Override
    public float getKickAngle() {
      return kickAngle_;
    }

    public static final int DRIBBLER_SPEED_FIELD_NUMBER = 5;
    private float dribblerSpeed_;
    /**
     * <pre>
     * Dribbler speed in rounds per minute [rpm]
     * </pre>
     *
     * <code>optional float dribbler_speed = 5;</code>
     * @return Whether the dribblerSpeed field is set.
     */
    @java.lang.Override
    public boolean hasDribblerSpeed() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Dribbler speed in rounds per minute [rpm]
     * </pre>
     *
     * <code>optional float dribbler_speed = 5;</code>
     * @return The dribblerSpeed.
     */
    @java.lang.Override
    public float getDribblerSpeed() {
      return dribblerSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMoveCommand()) {
        if (!getMoveCommand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getMoveCommand());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, kickSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, kickAngle_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, dribblerSpeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMoveCommand());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, kickSpeed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, kickAngle_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, dribblerSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.RobotCommand)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.RobotCommand other = (proto.simulation.SslSimulationRobotControl.RobotCommand) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasMoveCommand() != other.hasMoveCommand()) return false;
      if (hasMoveCommand()) {
        if (!getMoveCommand()
            .equals(other.getMoveCommand())) return false;
      }
      if (hasKickSpeed() != other.hasKickSpeed()) return false;
      if (hasKickSpeed()) {
        if (java.lang.Float.floatToIntBits(getKickSpeed())
            != java.lang.Float.floatToIntBits(
                other.getKickSpeed())) return false;
      }
      if (hasKickAngle() != other.hasKickAngle()) return false;
      if (hasKickAngle()) {
        if (java.lang.Float.floatToIntBits(getKickAngle())
            != java.lang.Float.floatToIntBits(
                other.getKickAngle())) return false;
      }
      if (hasDribblerSpeed() != other.hasDribblerSpeed()) return false;
      if (hasDribblerSpeed()) {
        if (java.lang.Float.floatToIntBits(getDribblerSpeed())
            != java.lang.Float.floatToIntBits(
                other.getDribblerSpeed())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasMoveCommand()) {
        hash = (37 * hash) + MOVE_COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getMoveCommand().hashCode();
      }
      if (hasKickSpeed()) {
        hash = (37 * hash) + KICK_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getKickSpeed());
      }
      if (hasKickAngle()) {
        hash = (37 * hash) + KICK_ANGLE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getKickAngle());
      }
      if (hasDribblerSpeed()) {
        hash = (37 * hash) + DRIBBLER_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDribblerSpeed());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.RobotCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Full command for a single robot
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotCommand)
        proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.RobotCommand.class, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.RobotCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMoveCommandFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (moveCommandBuilder_ == null) {
          moveCommand_ = null;
        } else {
          moveCommandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        kickSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        kickAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        dribblerSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotCommand_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotCommand getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.RobotCommand.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotCommand build() {
        proto.simulation.SslSimulationRobotControl.RobotCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotCommand buildPartial() {
        proto.simulation.SslSimulationRobotControl.RobotCommand result = new proto.simulation.SslSimulationRobotControl.RobotCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (moveCommandBuilder_ == null) {
            result.moveCommand_ = moveCommand_;
          } else {
            result.moveCommand_ = moveCommandBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.kickSpeed_ = kickSpeed_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.kickAngle_ = kickAngle_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.dribblerSpeed_ = dribblerSpeed_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.RobotCommand) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.RobotCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.RobotCommand other) {
        if (other == proto.simulation.SslSimulationRobotControl.RobotCommand.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasMoveCommand()) {
          mergeMoveCommand(other.getMoveCommand());
        }
        if (other.hasKickSpeed()) {
          setKickSpeed(other.getKickSpeed());
        }
        if (other.hasKickAngle()) {
          setKickAngle(other.getKickAngle());
        }
        if (other.hasDribblerSpeed()) {
          setDribblerSpeed(other.getDribblerSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (hasMoveCommand()) {
          if (!getMoveCommand().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.RobotCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.RobotCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Id of the robot
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private proto.simulation.SslSimulationRobotControl.RobotMoveCommand moveCommand_;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.RobotMoveCommand, proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder> moveCommandBuilder_;
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       * @return Whether the moveCommand field is set.
       */
      public boolean hasMoveCommand() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       * @return The moveCommand.
       */
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommand getMoveCommand() {
        if (moveCommandBuilder_ == null) {
          return moveCommand_ == null ? proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance() : moveCommand_;
        } else {
          return moveCommandBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public Builder setMoveCommand(proto.simulation.SslSimulationRobotControl.RobotMoveCommand value) {
        if (moveCommandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          moveCommand_ = value;
          onChanged();
        } else {
          moveCommandBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public Builder setMoveCommand(
          proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder builderForValue) {
        if (moveCommandBuilder_ == null) {
          moveCommand_ = builderForValue.build();
          onChanged();
        } else {
          moveCommandBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public Builder mergeMoveCommand(proto.simulation.SslSimulationRobotControl.RobotMoveCommand value) {
        if (moveCommandBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              moveCommand_ != null &&
              moveCommand_ != proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance()) {
            moveCommand_ =
              proto.simulation.SslSimulationRobotControl.RobotMoveCommand.newBuilder(moveCommand_).mergeFrom(value).buildPartial();
          } else {
            moveCommand_ = value;
          }
          onChanged();
        } else {
          moveCommandBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public Builder clearMoveCommand() {
        if (moveCommandBuilder_ == null) {
          moveCommand_ = null;
          onChanged();
        } else {
          moveCommandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder getMoveCommandBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMoveCommandFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder getMoveCommandOrBuilder() {
        if (moveCommandBuilder_ != null) {
          return moveCommandBuilder_.getMessageOrBuilder();
        } else {
          return moveCommand_ == null ?
              proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance() : moveCommand_;
        }
      }
      /**
       * <pre>
       * Movement command
       * </pre>
       *
       * <code>optional .proto.simulation.RobotMoveCommand move_command = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.RobotMoveCommand, proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder> 
          getMoveCommandFieldBuilder() {
        if (moveCommandBuilder_ == null) {
          moveCommandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationRobotControl.RobotMoveCommand, proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder>(
                  getMoveCommand(),
                  getParentForChildren(),
                  isClean());
          moveCommand_ = null;
        }
        return moveCommandBuilder_;
      }

      private float kickSpeed_ ;
      /**
       * <pre>
       * Absolute (3 dimensional) kick speed [m/s]
       * </pre>
       *
       * <code>optional float kick_speed = 3;</code>
       * @return Whether the kickSpeed field is set.
       */
      @java.lang.Override
      public boolean hasKickSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Absolute (3 dimensional) kick speed [m/s]
       * </pre>
       *
       * <code>optional float kick_speed = 3;</code>
       * @return The kickSpeed.
       */
      @java.lang.Override
      public float getKickSpeed() {
        return kickSpeed_;
      }
      /**
       * <pre>
       * Absolute (3 dimensional) kick speed [m/s]
       * </pre>
       *
       * <code>optional float kick_speed = 3;</code>
       * @param value The kickSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setKickSpeed(float value) {
        bitField0_ |= 0x00000004;
        kickSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Absolute (3 dimensional) kick speed [m/s]
       * </pre>
       *
       * <code>optional float kick_speed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKickSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kickSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float kickAngle_ ;
      /**
       * <pre>
       * Kick angle [degree] (defaults to 0 degrees for a straight kick)
       * </pre>
       *
       * <code>optional float kick_angle = 4 [default = 0];</code>
       * @return Whether the kickAngle field is set.
       */
      @java.lang.Override
      public boolean hasKickAngle() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Kick angle [degree] (defaults to 0 degrees for a straight kick)
       * </pre>
       *
       * <code>optional float kick_angle = 4 [default = 0];</code>
       * @return The kickAngle.
       */
      @java.lang.Override
      public float getKickAngle() {
        return kickAngle_;
      }
      /**
       * <pre>
       * Kick angle [degree] (defaults to 0 degrees for a straight kick)
       * </pre>
       *
       * <code>optional float kick_angle = 4 [default = 0];</code>
       * @param value The kickAngle to set.
       * @return This builder for chaining.
       */
      public Builder setKickAngle(float value) {
        bitField0_ |= 0x00000008;
        kickAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kick angle [degree] (defaults to 0 degrees for a straight kick)
       * </pre>
       *
       * <code>optional float kick_angle = 4 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearKickAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kickAngle_ = 0F;
        onChanged();
        return this;
      }

      private float dribblerSpeed_ ;
      /**
       * <pre>
       * Dribbler speed in rounds per minute [rpm]
       * </pre>
       *
       * <code>optional float dribbler_speed = 5;</code>
       * @return Whether the dribblerSpeed field is set.
       */
      @java.lang.Override
      public boolean hasDribblerSpeed() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Dribbler speed in rounds per minute [rpm]
       * </pre>
       *
       * <code>optional float dribbler_speed = 5;</code>
       * @return The dribblerSpeed.
       */
      @java.lang.Override
      public float getDribblerSpeed() {
        return dribblerSpeed_;
      }
      /**
       * <pre>
       * Dribbler speed in rounds per minute [rpm]
       * </pre>
       *
       * <code>optional float dribbler_speed = 5;</code>
       * @param value The dribblerSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDribblerSpeed(float value) {
        bitField0_ |= 0x00000010;
        dribblerSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dribbler speed in rounds per minute [rpm]
       * </pre>
       *
       * <code>optional float dribbler_speed = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDribblerSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dribblerSpeed_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotCommand)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotCommand)
    private static final proto.simulation.SslSimulationRobotControl.RobotCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.RobotCommand();
    }

    public static proto.simulation.SslSimulationRobotControl.RobotCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotCommand>
        PARSER = new com.google.protobuf.AbstractParser<RobotCommand>() {
      @java.lang.Override
      public RobotCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RobotMoveCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotMoveCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     * @return Whether the wheelVelocity field is set.
     */
    boolean hasWheelVelocity();
    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     * @return The wheelVelocity.
     */
    proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getWheelVelocity();
    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     */
    proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder getWheelVelocityOrBuilder();

    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     * @return Whether the localVelocity field is set.
     */
    boolean hasLocalVelocity();
    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     * @return The localVelocity.
     */
    proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getLocalVelocity();
    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     */
    proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder getLocalVelocityOrBuilder();

    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     * @return Whether the globalVelocity field is set.
     */
    boolean hasGlobalVelocity();
    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     * @return The globalVelocity.
     */
    proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getGlobalVelocity();
    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     */
    proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder getGlobalVelocityOrBuilder();

    public proto.simulation.SslSimulationRobotControl.RobotMoveCommand.CommandCase getCommandCase();
  }
  /**
   * <pre>
   * Wrapper for different kinds of movement commands
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotMoveCommand}
   */
  public static final class RobotMoveCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotMoveCommand)
      RobotMoveCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotMoveCommand.newBuilder() to construct.
    private RobotMoveCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotMoveCommand() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotMoveCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotMoveCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder subBuilder = null;
              if (commandCase_ == 1) {
                subBuilder = ((proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_).toBuilder();
              }
              command_ =
                  input.readMessage(proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 1;
              break;
            }
            case 18: {
              proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder subBuilder = null;
              if (commandCase_ == 2) {
                subBuilder = ((proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_).toBuilder();
              }
              command_ =
                  input.readMessage(proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 2;
              break;
            }
            case 26: {
              proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder subBuilder = null;
              if (commandCase_ == 3) {
                subBuilder = ((proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_).toBuilder();
              }
              command_ =
                  input.readMessage(proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotMoveCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotMoveCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.RobotMoveCommand.class, proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder.class);
    }

    private int bitField0_;
    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      WHEEL_VELOCITY(1),
      LOCAL_VELOCITY(2),
      GLOBAL_VELOCITY(3),
      COMMAND_NOT_SET(0);
      private final int value;
      private CommandCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CommandCase valueOf(int value) {
        return forNumber(value);
      }

      public static CommandCase forNumber(int value) {
        switch (value) {
          case 1: return WHEEL_VELOCITY;
          case 2: return LOCAL_VELOCITY;
          case 3: return GLOBAL_VELOCITY;
          case 0: return COMMAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public static final int WHEEL_VELOCITY_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     * @return Whether the wheelVelocity field is set.
     */
    @java.lang.Override
    public boolean hasWheelVelocity() {
      return commandCase_ == 1;
    }
    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     * @return The wheelVelocity.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getWheelVelocity() {
      if (commandCase_ == 1) {
         return (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
    }
    /**
     * <pre>
     * Move with wheel velocities
     * </pre>
     *
     * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder getWheelVelocityOrBuilder() {
      if (commandCase_ == 1) {
         return (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
    }

    public static final int LOCAL_VELOCITY_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     * @return Whether the localVelocity field is set.
     */
    @java.lang.Override
    public boolean hasLocalVelocity() {
      return commandCase_ == 2;
    }
    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     * @return The localVelocity.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getLocalVelocity() {
      if (commandCase_ == 2) {
         return (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
    }
    /**
     * <pre>
     * Move with local velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder getLocalVelocityOrBuilder() {
      if (commandCase_ == 2) {
         return (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
    }

    public static final int GLOBAL_VELOCITY_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     * @return Whether the globalVelocity field is set.
     */
    @java.lang.Override
    public boolean hasGlobalVelocity() {
      return commandCase_ == 3;
    }
    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     * @return The globalVelocity.
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getGlobalVelocity() {
      if (commandCase_ == 3) {
         return (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
    }
    /**
     * <pre>
     * Move with global velocity
     * </pre>
     *
     * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder getGlobalVelocityOrBuilder() {
      if (commandCase_ == 3) {
         return (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_;
      }
      return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasWheelVelocity()) {
        if (!getWheelVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLocalVelocity()) {
        if (!getLocalVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGlobalVelocity()) {
        if (!getGlobalVelocity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (commandCase_ == 1) {
        output.writeMessage(1, (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_);
      }
      if (commandCase_ == 2) {
        output.writeMessage(2, (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_);
      }
      if (commandCase_ == 3) {
        output.writeMessage(3, (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (commandCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_);
      }
      if (commandCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_);
      }
      if (commandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.RobotMoveCommand)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.RobotMoveCommand other = (proto.simulation.SslSimulationRobotControl.RobotMoveCommand) obj;

      if (!getCommandCase().equals(other.getCommandCase())) return false;
      switch (commandCase_) {
        case 1:
          if (!getWheelVelocity()
              .equals(other.getWheelVelocity())) return false;
          break;
        case 2:
          if (!getLocalVelocity()
              .equals(other.getLocalVelocity())) return false;
          break;
        case 3:
          if (!getGlobalVelocity()
              .equals(other.getGlobalVelocity())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (commandCase_) {
        case 1:
          hash = (37 * hash) + WHEEL_VELOCITY_FIELD_NUMBER;
          hash = (53 * hash) + getWheelVelocity().hashCode();
          break;
        case 2:
          hash = (37 * hash) + LOCAL_VELOCITY_FIELD_NUMBER;
          hash = (53 * hash) + getLocalVelocity().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GLOBAL_VELOCITY_FIELD_NUMBER;
          hash = (53 * hash) + getGlobalVelocity().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.RobotMoveCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wrapper for different kinds of movement commands
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotMoveCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotMoveCommand)
        proto.simulation.SslSimulationRobotControl.RobotMoveCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotMoveCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotMoveCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.RobotMoveCommand.class, proto.simulation.SslSimulationRobotControl.RobotMoveCommand.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.RobotMoveCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        commandCase_ = 0;
        command_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotMoveCommand_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommand getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommand build() {
        proto.simulation.SslSimulationRobotControl.RobotMoveCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotMoveCommand buildPartial() {
        proto.simulation.SslSimulationRobotControl.RobotMoveCommand result = new proto.simulation.SslSimulationRobotControl.RobotMoveCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (commandCase_ == 1) {
          if (wheelVelocityBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = wheelVelocityBuilder_.build();
          }
        }
        if (commandCase_ == 2) {
          if (localVelocityBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = localVelocityBuilder_.build();
          }
        }
        if (commandCase_ == 3) {
          if (globalVelocityBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = globalVelocityBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.RobotMoveCommand) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.RobotMoveCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.RobotMoveCommand other) {
        if (other == proto.simulation.SslSimulationRobotControl.RobotMoveCommand.getDefaultInstance()) return this;
        switch (other.getCommandCase()) {
          case WHEEL_VELOCITY: {
            mergeWheelVelocity(other.getWheelVelocity());
            break;
          }
          case LOCAL_VELOCITY: {
            mergeLocalVelocity(other.getLocalVelocity());
            break;
          }
          case GLOBAL_VELOCITY: {
            mergeGlobalVelocity(other.getGlobalVelocity());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasWheelVelocity()) {
          if (!getWheelVelocity().isInitialized()) {
            return false;
          }
        }
        if (hasLocalVelocity()) {
          if (!getLocalVelocity().isInitialized()) {
            return false;
          }
        }
        if (hasGlobalVelocity()) {
          if (!getGlobalVelocity().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.RobotMoveCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.RobotMoveCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.forNumber(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveWheelVelocity, proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder> wheelVelocityBuilder_;
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       * @return Whether the wheelVelocity field is set.
       */
      @java.lang.Override
      public boolean hasWheelVelocity() {
        return commandCase_ == 1;
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       * @return The wheelVelocity.
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getWheelVelocity() {
        if (wheelVelocityBuilder_ == null) {
          if (commandCase_ == 1) {
            return (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
        } else {
          if (commandCase_ == 1) {
            return wheelVelocityBuilder_.getMessage();
          }
          return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      public Builder setWheelVelocity(proto.simulation.SslSimulationRobotControl.MoveWheelVelocity value) {
        if (wheelVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          wheelVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      public Builder setWheelVelocity(
          proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder builderForValue) {
        if (wheelVelocityBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          wheelVelocityBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      public Builder mergeWheelVelocity(proto.simulation.SslSimulationRobotControl.MoveWheelVelocity value) {
        if (wheelVelocityBuilder_ == null) {
          if (commandCase_ == 1 &&
              command_ != proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance()) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.newBuilder((proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 1) {
            wheelVelocityBuilder_.mergeFrom(value);
          }
          wheelVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      public Builder clearWheelVelocity() {
        if (wheelVelocityBuilder_ == null) {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 1) {
            commandCase_ = 0;
            command_ = null;
          }
          wheelVelocityBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder getWheelVelocityBuilder() {
        return getWheelVelocityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder getWheelVelocityOrBuilder() {
        if ((commandCase_ == 1) && (wheelVelocityBuilder_ != null)) {
          return wheelVelocityBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 1) {
            return (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with wheel velocities
       * </pre>
       *
       * <code>.proto.simulation.MoveWheelVelocity wheel_velocity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveWheelVelocity, proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder> 
          getWheelVelocityFieldBuilder() {
        if (wheelVelocityBuilder_ == null) {
          if (!(commandCase_ == 1)) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
          }
          wheelVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationRobotControl.MoveWheelVelocity, proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder>(
                  (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 1;
        onChanged();;
        return wheelVelocityBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveLocalVelocity, proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder> localVelocityBuilder_;
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       * @return Whether the localVelocity field is set.
       */
      @java.lang.Override
      public boolean hasLocalVelocity() {
        return commandCase_ == 2;
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       * @return The localVelocity.
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getLocalVelocity() {
        if (localVelocityBuilder_ == null) {
          if (commandCase_ == 2) {
            return (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
        } else {
          if (commandCase_ == 2) {
            return localVelocityBuilder_.getMessage();
          }
          return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      public Builder setLocalVelocity(proto.simulation.SslSimulationRobotControl.MoveLocalVelocity value) {
        if (localVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          localVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      public Builder setLocalVelocity(
          proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder builderForValue) {
        if (localVelocityBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          localVelocityBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      public Builder mergeLocalVelocity(proto.simulation.SslSimulationRobotControl.MoveLocalVelocity value) {
        if (localVelocityBuilder_ == null) {
          if (commandCase_ == 2 &&
              command_ != proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance()) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.newBuilder((proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 2) {
            localVelocityBuilder_.mergeFrom(value);
          }
          localVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      public Builder clearLocalVelocity() {
        if (localVelocityBuilder_ == null) {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 2) {
            commandCase_ = 0;
            command_ = null;
          }
          localVelocityBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder getLocalVelocityBuilder() {
        return getLocalVelocityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder getLocalVelocityOrBuilder() {
        if ((commandCase_ == 2) && (localVelocityBuilder_ != null)) {
          return localVelocityBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 2) {
            return (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with local velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveLocalVelocity local_velocity = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveLocalVelocity, proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder> 
          getLocalVelocityFieldBuilder() {
        if (localVelocityBuilder_ == null) {
          if (!(commandCase_ == 2)) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
          }
          localVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationRobotControl.MoveLocalVelocity, proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder>(
                  (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 2;
        onChanged();;
        return localVelocityBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder> globalVelocityBuilder_;
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       * @return Whether the globalVelocity field is set.
       */
      @java.lang.Override
      public boolean hasGlobalVelocity() {
        return commandCase_ == 3;
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       * @return The globalVelocity.
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getGlobalVelocity() {
        if (globalVelocityBuilder_ == null) {
          if (commandCase_ == 3) {
            return (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
        } else {
          if (commandCase_ == 3) {
            return globalVelocityBuilder_.getMessage();
          }
          return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      public Builder setGlobalVelocity(proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity value) {
        if (globalVelocityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          globalVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      public Builder setGlobalVelocity(
          proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder builderForValue) {
        if (globalVelocityBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          globalVelocityBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      public Builder mergeGlobalVelocity(proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity value) {
        if (globalVelocityBuilder_ == null) {
          if (commandCase_ == 3 &&
              command_ != proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance()) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.newBuilder((proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 3) {
            globalVelocityBuilder_.mergeFrom(value);
          }
          globalVelocityBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      public Builder clearGlobalVelocity() {
        if (globalVelocityBuilder_ == null) {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
          }
          globalVelocityBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder getGlobalVelocityBuilder() {
        return getGlobalVelocityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder getGlobalVelocityOrBuilder() {
        if ((commandCase_ == 3) && (globalVelocityBuilder_ != null)) {
          return globalVelocityBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 3) {
            return (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_;
          }
          return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Move with global velocity
       * </pre>
       *
       * <code>.proto.simulation.MoveGlobalVelocity global_velocity = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder> 
          getGlobalVelocityFieldBuilder() {
        if (globalVelocityBuilder_ == null) {
          if (!(commandCase_ == 3)) {
            command_ = proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
          }
          globalVelocityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder>(
                  (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 3;
        onChanged();;
        return globalVelocityBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotMoveCommand)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotMoveCommand)
    private static final proto.simulation.SslSimulationRobotControl.RobotMoveCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.RobotMoveCommand();
    }

    public static proto.simulation.SslSimulationRobotControl.RobotMoveCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotMoveCommand>
        PARSER = new com.google.protobuf.AbstractParser<RobotMoveCommand>() {
      @java.lang.Override
      public RobotMoveCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotMoveCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotMoveCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotMoveCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotMoveCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MoveWheelVelocityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.MoveWheelVelocity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Velocity [m/s] of front right wheel
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return Whether the frontRight field is set.
     */
    boolean hasFrontRight();
    /**
     * <pre>
     * Velocity [m/s] of front right wheel
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return The frontRight.
     */
    float getFrontRight();

    /**
     * <pre>
     * Velocity [m/s] of back right wheel
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return Whether the backRight field is set.
     */
    boolean hasBackRight();
    /**
     * <pre>
     * Velocity [m/s] of back right wheel
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return The backRight.
     */
    float getBackRight();

    /**
     * <pre>
     * Velocity [m/s] of back left wheel
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return Whether the backLeft field is set.
     */
    boolean hasBackLeft();
    /**
     * <pre>
     * Velocity [m/s] of back left wheel
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return The backLeft.
     */
    float getBackLeft();

    /**
     * <pre>
     * Velocity [m/s] of front left wheel
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return Whether the frontLeft field is set.
     */
    boolean hasFrontLeft();
    /**
     * <pre>
     * Velocity [m/s] of front left wheel
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return The frontLeft.
     */
    float getFrontLeft();
  }
  /**
   * <pre>
   * Move robot with wheel velocities
   * </pre>
   *
   * Protobuf type {@code proto.simulation.MoveWheelVelocity}
   */
  public static final class MoveWheelVelocity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.MoveWheelVelocity)
      MoveWheelVelocityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MoveWheelVelocity.newBuilder() to construct.
    private MoveWheelVelocity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MoveWheelVelocity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MoveWheelVelocity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MoveWheelVelocity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              frontRight_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              backRight_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              backLeft_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              frontLeft_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveWheelVelocity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveWheelVelocity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.class, proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder.class);
    }

    private int bitField0_;
    public static final int FRONT_RIGHT_FIELD_NUMBER = 1;
    private float frontRight_;
    /**
     * <pre>
     * Velocity [m/s] of front right wheel
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return Whether the frontRight field is set.
     */
    @java.lang.Override
    public boolean hasFrontRight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Velocity [m/s] of front right wheel
     * </pre>
     *
     * <code>required float front_right = 1;</code>
     * @return The frontRight.
     */
    @java.lang.Override
    public float getFrontRight() {
      return frontRight_;
    }

    public static final int BACK_RIGHT_FIELD_NUMBER = 2;
    private float backRight_;
    /**
     * <pre>
     * Velocity [m/s] of back right wheel
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return Whether the backRight field is set.
     */
    @java.lang.Override
    public boolean hasBackRight() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Velocity [m/s] of back right wheel
     * </pre>
     *
     * <code>required float back_right = 2;</code>
     * @return The backRight.
     */
    @java.lang.Override
    public float getBackRight() {
      return backRight_;
    }

    public static final int BACK_LEFT_FIELD_NUMBER = 3;
    private float backLeft_;
    /**
     * <pre>
     * Velocity [m/s] of back left wheel
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return Whether the backLeft field is set.
     */
    @java.lang.Override
    public boolean hasBackLeft() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Velocity [m/s] of back left wheel
     * </pre>
     *
     * <code>required float back_left = 3;</code>
     * @return The backLeft.
     */
    @java.lang.Override
    public float getBackLeft() {
      return backLeft_;
    }

    public static final int FRONT_LEFT_FIELD_NUMBER = 4;
    private float frontLeft_;
    /**
     * <pre>
     * Velocity [m/s] of front left wheel
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return Whether the frontLeft field is set.
     */
    @java.lang.Override
    public boolean hasFrontLeft() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Velocity [m/s] of front left wheel
     * </pre>
     *
     * <code>required float front_left = 4;</code>
     * @return The frontLeft.
     */
    @java.lang.Override
    public float getFrontLeft() {
      return frontLeft_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFrontRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBackRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBackLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrontLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, frontRight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, backRight_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, backLeft_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, frontLeft_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, frontRight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, backRight_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, backLeft_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, frontLeft_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.MoveWheelVelocity)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.MoveWheelVelocity other = (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) obj;

      if (hasFrontRight() != other.hasFrontRight()) return false;
      if (hasFrontRight()) {
        if (java.lang.Float.floatToIntBits(getFrontRight())
            != java.lang.Float.floatToIntBits(
                other.getFrontRight())) return false;
      }
      if (hasBackRight() != other.hasBackRight()) return false;
      if (hasBackRight()) {
        if (java.lang.Float.floatToIntBits(getBackRight())
            != java.lang.Float.floatToIntBits(
                other.getBackRight())) return false;
      }
      if (hasBackLeft() != other.hasBackLeft()) return false;
      if (hasBackLeft()) {
        if (java.lang.Float.floatToIntBits(getBackLeft())
            != java.lang.Float.floatToIntBits(
                other.getBackLeft())) return false;
      }
      if (hasFrontLeft() != other.hasFrontLeft()) return false;
      if (hasFrontLeft()) {
        if (java.lang.Float.floatToIntBits(getFrontLeft())
            != java.lang.Float.floatToIntBits(
                other.getFrontLeft())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrontRight()) {
        hash = (37 * hash) + FRONT_RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrontRight());
      }
      if (hasBackRight()) {
        hash = (37 * hash) + BACK_RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBackRight());
      }
      if (hasBackLeft()) {
        hash = (37 * hash) + BACK_LEFT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBackLeft());
      }
      if (hasFrontLeft()) {
        hash = (37 * hash) + FRONT_LEFT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrontLeft());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.MoveWheelVelocity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Move robot with wheel velocities
     * </pre>
     *
     * Protobuf type {@code proto.simulation.MoveWheelVelocity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.MoveWheelVelocity)
        proto.simulation.SslSimulationRobotControl.MoveWheelVelocityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveWheelVelocity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveWheelVelocity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.class, proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        frontRight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        backRight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        backLeft_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        frontLeft_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveWheelVelocity_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity build() {
        proto.simulation.SslSimulationRobotControl.MoveWheelVelocity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity buildPartial() {
        proto.simulation.SslSimulationRobotControl.MoveWheelVelocity result = new proto.simulation.SslSimulationRobotControl.MoveWheelVelocity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frontRight_ = frontRight_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.backRight_ = backRight_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.backLeft_ = backLeft_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.frontLeft_ = frontLeft_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.MoveWheelVelocity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.MoveWheelVelocity other) {
        if (other == proto.simulation.SslSimulationRobotControl.MoveWheelVelocity.getDefaultInstance()) return this;
        if (other.hasFrontRight()) {
          setFrontRight(other.getFrontRight());
        }
        if (other.hasBackRight()) {
          setBackRight(other.getBackRight());
        }
        if (other.hasBackLeft()) {
          setBackLeft(other.getBackLeft());
        }
        if (other.hasFrontLeft()) {
          setFrontLeft(other.getFrontLeft());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasFrontRight()) {
          return false;
        }
        if (!hasBackRight()) {
          return false;
        }
        if (!hasBackLeft()) {
          return false;
        }
        if (!hasFrontLeft()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.MoveWheelVelocity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.MoveWheelVelocity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float frontRight_ ;
      /**
       * <pre>
       * Velocity [m/s] of front right wheel
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return Whether the frontRight field is set.
       */
      @java.lang.Override
      public boolean hasFrontRight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Velocity [m/s] of front right wheel
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return The frontRight.
       */
      @java.lang.Override
      public float getFrontRight() {
        return frontRight_;
      }
      /**
       * <pre>
       * Velocity [m/s] of front right wheel
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @param value The frontRight to set.
       * @return This builder for chaining.
       */
      public Builder setFrontRight(float value) {
        bitField0_ |= 0x00000001;
        frontRight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity [m/s] of front right wheel
       * </pre>
       *
       * <code>required float front_right = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrontRight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frontRight_ = 0F;
        onChanged();
        return this;
      }

      private float backRight_ ;
      /**
       * <pre>
       * Velocity [m/s] of back right wheel
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return Whether the backRight field is set.
       */
      @java.lang.Override
      public boolean hasBackRight() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Velocity [m/s] of back right wheel
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return The backRight.
       */
      @java.lang.Override
      public float getBackRight() {
        return backRight_;
      }
      /**
       * <pre>
       * Velocity [m/s] of back right wheel
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @param value The backRight to set.
       * @return This builder for chaining.
       */
      public Builder setBackRight(float value) {
        bitField0_ |= 0x00000002;
        backRight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity [m/s] of back right wheel
       * </pre>
       *
       * <code>required float back_right = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackRight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        backRight_ = 0F;
        onChanged();
        return this;
      }

      private float backLeft_ ;
      /**
       * <pre>
       * Velocity [m/s] of back left wheel
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return Whether the backLeft field is set.
       */
      @java.lang.Override
      public boolean hasBackLeft() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Velocity [m/s] of back left wheel
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return The backLeft.
       */
      @java.lang.Override
      public float getBackLeft() {
        return backLeft_;
      }
      /**
       * <pre>
       * Velocity [m/s] of back left wheel
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @param value The backLeft to set.
       * @return This builder for chaining.
       */
      public Builder setBackLeft(float value) {
        bitField0_ |= 0x00000004;
        backLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity [m/s] of back left wheel
       * </pre>
       *
       * <code>required float back_left = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackLeft() {
        bitField0_ = (bitField0_ & ~0x00000004);
        backLeft_ = 0F;
        onChanged();
        return this;
      }

      private float frontLeft_ ;
      /**
       * <pre>
       * Velocity [m/s] of front left wheel
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return Whether the frontLeft field is set.
       */
      @java.lang.Override
      public boolean hasFrontLeft() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Velocity [m/s] of front left wheel
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return The frontLeft.
       */
      @java.lang.Override
      public float getFrontLeft() {
        return frontLeft_;
      }
      /**
       * <pre>
       * Velocity [m/s] of front left wheel
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @param value The frontLeft to set.
       * @return This builder for chaining.
       */
      public Builder setFrontLeft(float value) {
        bitField0_ |= 0x00000008;
        frontLeft_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity [m/s] of front left wheel
       * </pre>
       *
       * <code>required float front_left = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrontLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frontLeft_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.MoveWheelVelocity)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.MoveWheelVelocity)
    private static final proto.simulation.SslSimulationRobotControl.MoveWheelVelocity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.MoveWheelVelocity();
    }

    public static proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MoveWheelVelocity>
        PARSER = new com.google.protobuf.AbstractParser<MoveWheelVelocity>() {
      @java.lang.Override
      public MoveWheelVelocity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MoveWheelVelocity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MoveWheelVelocity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MoveWheelVelocity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveWheelVelocity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MoveLocalVelocityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.MoveLocalVelocity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Velocity forward [m/s] (towards the dribbler)
     * </pre>
     *
     * <code>required float forward = 1;</code>
     * @return Whether the forward field is set.
     */
    boolean hasForward();
    /**
     * <pre>
     * Velocity forward [m/s] (towards the dribbler)
     * </pre>
     *
     * <code>required float forward = 1;</code>
     * @return The forward.
     */
    float getForward();

    /**
     * <pre>
     * Velocity to the left [m/s]
     * </pre>
     *
     * <code>required float left = 2;</code>
     * @return Whether the left field is set.
     */
    boolean hasLeft();
    /**
     * <pre>
     * Velocity to the left [m/s]
     * </pre>
     *
     * <code>required float left = 2;</code>
     * @return The left.
     */
    float getLeft();

    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return Whether the angular field is set.
     */
    boolean hasAngular();
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return The angular.
     */
    float getAngular();
  }
  /**
   * <pre>
   * Move robot with local velocity
   * </pre>
   *
   * Protobuf type {@code proto.simulation.MoveLocalVelocity}
   */
  public static final class MoveLocalVelocity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.MoveLocalVelocity)
      MoveLocalVelocityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MoveLocalVelocity.newBuilder() to construct.
    private MoveLocalVelocity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MoveLocalVelocity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MoveLocalVelocity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MoveLocalVelocity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              forward_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              left_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angular_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveLocalVelocity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveLocalVelocity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.class, proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder.class);
    }

    private int bitField0_;
    public static final int FORWARD_FIELD_NUMBER = 1;
    private float forward_;
    /**
     * <pre>
     * Velocity forward [m/s] (towards the dribbler)
     * </pre>
     *
     * <code>required float forward = 1;</code>
     * @return Whether the forward field is set.
     */
    @java.lang.Override
    public boolean hasForward() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Velocity forward [m/s] (towards the dribbler)
     * </pre>
     *
     * <code>required float forward = 1;</code>
     * @return The forward.
     */
    @java.lang.Override
    public float getForward() {
      return forward_;
    }

    public static final int LEFT_FIELD_NUMBER = 2;
    private float left_;
    /**
     * <pre>
     * Velocity to the left [m/s]
     * </pre>
     *
     * <code>required float left = 2;</code>
     * @return Whether the left field is set.
     */
    @java.lang.Override
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Velocity to the left [m/s]
     * </pre>
     *
     * <code>required float left = 2;</code>
     * @return The left.
     */
    @java.lang.Override
    public float getLeft() {
      return left_;
    }

    public static final int ANGULAR_FIELD_NUMBER = 3;
    private float angular_;
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return Whether the angular field is set.
     */
    @java.lang.Override
    public boolean hasAngular() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return The angular.
     */
    @java.lang.Override
    public float getAngular() {
      return angular_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasForward()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAngular()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, forward_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, left_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, angular_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, forward_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, left_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angular_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.MoveLocalVelocity)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.MoveLocalVelocity other = (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) obj;

      if (hasForward() != other.hasForward()) return false;
      if (hasForward()) {
        if (java.lang.Float.floatToIntBits(getForward())
            != java.lang.Float.floatToIntBits(
                other.getForward())) return false;
      }
      if (hasLeft() != other.hasLeft()) return false;
      if (hasLeft()) {
        if (java.lang.Float.floatToIntBits(getLeft())
            != java.lang.Float.floatToIntBits(
                other.getLeft())) return false;
      }
      if (hasAngular() != other.hasAngular()) return false;
      if (hasAngular()) {
        if (java.lang.Float.floatToIntBits(getAngular())
            != java.lang.Float.floatToIntBits(
                other.getAngular())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasForward()) {
        hash = (37 * hash) + FORWARD_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getForward());
      }
      if (hasLeft()) {
        hash = (37 * hash) + LEFT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLeft());
      }
      if (hasAngular()) {
        hash = (37 * hash) + ANGULAR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAngular());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.MoveLocalVelocity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Move robot with local velocity
     * </pre>
     *
     * Protobuf type {@code proto.simulation.MoveLocalVelocity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.MoveLocalVelocity)
        proto.simulation.SslSimulationRobotControl.MoveLocalVelocityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveLocalVelocity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveLocalVelocity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.class, proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        forward_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        left_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        angular_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveLocalVelocity_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity build() {
        proto.simulation.SslSimulationRobotControl.MoveLocalVelocity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity buildPartial() {
        proto.simulation.SslSimulationRobotControl.MoveLocalVelocity result = new proto.simulation.SslSimulationRobotControl.MoveLocalVelocity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.forward_ = forward_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.left_ = left_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.angular_ = angular_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.MoveLocalVelocity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.MoveLocalVelocity other) {
        if (other == proto.simulation.SslSimulationRobotControl.MoveLocalVelocity.getDefaultInstance()) return this;
        if (other.hasForward()) {
          setForward(other.getForward());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasAngular()) {
          setAngular(other.getAngular());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasForward()) {
          return false;
        }
        if (!hasLeft()) {
          return false;
        }
        if (!hasAngular()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.MoveLocalVelocity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.MoveLocalVelocity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float forward_ ;
      /**
       * <pre>
       * Velocity forward [m/s] (towards the dribbler)
       * </pre>
       *
       * <code>required float forward = 1;</code>
       * @return Whether the forward field is set.
       */
      @java.lang.Override
      public boolean hasForward() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Velocity forward [m/s] (towards the dribbler)
       * </pre>
       *
       * <code>required float forward = 1;</code>
       * @return The forward.
       */
      @java.lang.Override
      public float getForward() {
        return forward_;
      }
      /**
       * <pre>
       * Velocity forward [m/s] (towards the dribbler)
       * </pre>
       *
       * <code>required float forward = 1;</code>
       * @param value The forward to set.
       * @return This builder for chaining.
       */
      public Builder setForward(float value) {
        bitField0_ |= 0x00000001;
        forward_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity forward [m/s] (towards the dribbler)
       * </pre>
       *
       * <code>required float forward = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearForward() {
        bitField0_ = (bitField0_ & ~0x00000001);
        forward_ = 0F;
        onChanged();
        return this;
      }

      private float left_ ;
      /**
       * <pre>
       * Velocity to the left [m/s]
       * </pre>
       *
       * <code>required float left = 2;</code>
       * @return Whether the left field is set.
       */
      @java.lang.Override
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Velocity to the left [m/s]
       * </pre>
       *
       * <code>required float left = 2;</code>
       * @return The left.
       */
      @java.lang.Override
      public float getLeft() {
        return left_;
      }
      /**
       * <pre>
       * Velocity to the left [m/s]
       * </pre>
       *
       * <code>required float left = 2;</code>
       * @param value The left to set.
       * @return This builder for chaining.
       */
      public Builder setLeft(float value) {
        bitField0_ |= 0x00000002;
        left_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity to the left [m/s]
       * </pre>
       *
       * <code>required float left = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000002);
        left_ = 0F;
        onChanged();
        return this;
      }

      private float angular_ ;
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return Whether the angular field is set.
       */
      @java.lang.Override
      public boolean hasAngular() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return The angular.
       */
      @java.lang.Override
      public float getAngular() {
        return angular_;
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @param value The angular to set.
       * @return This builder for chaining.
       */
      public Builder setAngular(float value) {
        bitField0_ |= 0x00000004;
        angular_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngular() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angular_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.MoveLocalVelocity)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.MoveLocalVelocity)
    private static final proto.simulation.SslSimulationRobotControl.MoveLocalVelocity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.MoveLocalVelocity();
    }

    public static proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MoveLocalVelocity>
        PARSER = new com.google.protobuf.AbstractParser<MoveLocalVelocity>() {
      @java.lang.Override
      public MoveLocalVelocity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MoveLocalVelocity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MoveLocalVelocity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MoveLocalVelocity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveLocalVelocity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MoveGlobalVelocityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.MoveGlobalVelocity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Velocity on x-axis of the field [m/s]
     * </pre>
     *
     * <code>required float x = 1;</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <pre>
     * Velocity on x-axis of the field [m/s]
     * </pre>
     *
     * <code>required float x = 1;</code>
     * @return The x.
     */
    float getX();

    /**
     * <pre>
     * Velocity on y-axis of the field [m/s]
     * </pre>
     *
     * <code>required float y = 2;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <pre>
     * Velocity on y-axis of the field [m/s]
     * </pre>
     *
     * <code>required float y = 2;</code>
     * @return The y.
     */
    float getY();

    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return Whether the angular field is set.
     */
    boolean hasAngular();
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return The angular.
     */
    float getAngular();
  }
  /**
   * <pre>
   * Move robot with global velocity
   * </pre>
   *
   * Protobuf type {@code proto.simulation.MoveGlobalVelocity}
   */
  public static final class MoveGlobalVelocity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.MoveGlobalVelocity)
      MoveGlobalVelocityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MoveGlobalVelocity.newBuilder() to construct.
    private MoveGlobalVelocity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MoveGlobalVelocity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MoveGlobalVelocity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MoveGlobalVelocity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angular_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveGlobalVelocity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveGlobalVelocity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.class, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <pre>
     * Velocity on x-axis of the field [m/s]
     * </pre>
     *
     * <code>required float x = 1;</code>
     * @return Whether the x field is set.
     */
    @java.lang.Override
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Velocity on x-axis of the field [m/s]
     * </pre>
     *
     * <code>required float x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <pre>
     * Velocity on y-axis of the field [m/s]
     * </pre>
     *
     * <code>required float y = 2;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Velocity on y-axis of the field [m/s]
     * </pre>
     *
     * <code>required float y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int ANGULAR_FIELD_NUMBER = 3;
    private float angular_;
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return Whether the angular field is set.
     */
    @java.lang.Override
    public boolean hasAngular() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Angular velocity counter-clockwise [rad/s]
     * </pre>
     *
     * <code>required float angular = 3;</code>
     * @return The angular.
     */
    @java.lang.Override
    public float getAngular() {
      return angular_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAngular()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, angular_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angular_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity other = (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) obj;

      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (java.lang.Float.floatToIntBits(getX())
            != java.lang.Float.floatToIntBits(
                other.getX())) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (java.lang.Float.floatToIntBits(getY())
            != java.lang.Float.floatToIntBits(
                other.getY())) return false;
      }
      if (hasAngular() != other.hasAngular()) return false;
      if (hasAngular()) {
        if (java.lang.Float.floatToIntBits(getAngular())
            != java.lang.Float.floatToIntBits(
                other.getAngular())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      if (hasAngular()) {
        hash = (37 * hash) + ANGULAR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAngular());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Move robot with global velocity
     * </pre>
     *
     * Protobuf type {@code proto.simulation.MoveGlobalVelocity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.MoveGlobalVelocity)
        proto.simulation.SslSimulationRobotControl.MoveGlobalVelocityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveGlobalVelocity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveGlobalVelocity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.class, proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        angular_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_MoveGlobalVelocity_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity build() {
        proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity buildPartial() {
        proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity result = new proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x_ = x_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y_ = y_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.angular_ = angular_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity other) {
        if (other == proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasAngular()) {
          setAngular(other.getAngular());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        if (!hasAngular()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <pre>
       * Velocity on x-axis of the field [m/s]
       * </pre>
       *
       * <code>required float x = 1;</code>
       * @return Whether the x field is set.
       */
      @java.lang.Override
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Velocity on x-axis of the field [m/s]
       * </pre>
       *
       * <code>required float x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <pre>
       * Velocity on x-axis of the field [m/s]
       * </pre>
       *
       * <code>required float x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity on x-axis of the field [m/s]
       * </pre>
       *
       * <code>required float x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <pre>
       * Velocity on y-axis of the field [m/s]
       * </pre>
       *
       * <code>required float y = 2;</code>
       * @return Whether the y field is set.
       */
      @java.lang.Override
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Velocity on y-axis of the field [m/s]
       * </pre>
       *
       * <code>required float y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <pre>
       * Velocity on y-axis of the field [m/s]
       * </pre>
       *
       * <code>required float y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity on y-axis of the field [m/s]
       * </pre>
       *
       * <code>required float y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float angular_ ;
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return Whether the angular field is set.
       */
      @java.lang.Override
      public boolean hasAngular() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return The angular.
       */
      @java.lang.Override
      public float getAngular() {
        return angular_;
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @param value The angular to set.
       * @return This builder for chaining.
       */
      public Builder setAngular(float value) {
        bitField0_ |= 0x00000004;
        angular_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angular velocity counter-clockwise [rad/s]
       * </pre>
       *
       * <code>required float angular = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngular() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angular_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.MoveGlobalVelocity)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.MoveGlobalVelocity)
    private static final proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity();
    }

    public static proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MoveGlobalVelocity>
        PARSER = new com.google.protobuf.AbstractParser<MoveGlobalVelocity>() {
      @java.lang.Override
      public MoveGlobalVelocity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MoveGlobalVelocity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MoveGlobalVelocity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MoveGlobalVelocity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.MoveGlobalVelocity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RobotControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.RobotControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand> 
        getRobotCommandsList();
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    proto.simulation.SslSimulationRobotControl.RobotCommand getRobotCommands(int index);
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    int getRobotCommandsCount();
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    java.util.List<? extends proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder> 
        getRobotCommandsOrBuilderList();
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder getRobotCommandsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Command from the connected client to the simulator
   * </pre>
   *
   * Protobuf type {@code proto.simulation.RobotControl}
   */
  public static final class RobotControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.RobotControl)
      RobotControlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RobotControl.newBuilder() to construct.
    private RobotControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RobotControl() {
      robotCommands_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RobotControl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RobotControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                robotCommands_ = new java.util.ArrayList<proto.simulation.SslSimulationRobotControl.RobotCommand>();
                mutable_bitField0_ |= 0x00000001;
              }
              robotCommands_.add(
                  input.readMessage(proto.simulation.SslSimulationRobotControl.RobotCommand.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          robotCommands_ = java.util.Collections.unmodifiableList(robotCommands_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotControl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationRobotControl.RobotControl.class, proto.simulation.SslSimulationRobotControl.RobotControl.Builder.class);
    }

    public static final int ROBOT_COMMANDS_FIELD_NUMBER = 1;
    private java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand> robotCommands_;
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    @java.lang.Override
    public java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand> getRobotCommandsList() {
      return robotCommands_;
    }
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder> 
        getRobotCommandsOrBuilderList() {
      return robotCommands_;
    }
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    @java.lang.Override
    public int getRobotCommandsCount() {
      return robotCommands_.size();
    }
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotCommand getRobotCommands(int index) {
      return robotCommands_.get(index);
    }
    /**
     * <pre>
     * Control the robots
     * </pre>
     *
     * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
     */
    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder getRobotCommandsOrBuilder(
        int index) {
      return robotCommands_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getRobotCommandsCount(); i++) {
        if (!getRobotCommands(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < robotCommands_.size(); i++) {
        output.writeMessage(1, robotCommands_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < robotCommands_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, robotCommands_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationRobotControl.RobotControl)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationRobotControl.RobotControl other = (proto.simulation.SslSimulationRobotControl.RobotControl) obj;

      if (!getRobotCommandsList()
          .equals(other.getRobotCommandsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRobotCommandsCount() > 0) {
        hash = (37 * hash) + ROBOT_COMMANDS_FIELD_NUMBER;
        hash = (53 * hash) + getRobotCommandsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationRobotControl.RobotControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationRobotControl.RobotControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Command from the connected client to the simulator
     * </pre>
     *
     * Protobuf type {@code proto.simulation.RobotControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.RobotControl)
        proto.simulation.SslSimulationRobotControl.RobotControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationRobotControl.RobotControl.class, proto.simulation.SslSimulationRobotControl.RobotControl.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationRobotControl.RobotControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRobotCommandsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (robotCommandsBuilder_ == null) {
          robotCommands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          robotCommandsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationRobotControl.internal_static_proto_simulation_RobotControl_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotControl getDefaultInstanceForType() {
        return proto.simulation.SslSimulationRobotControl.RobotControl.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotControl build() {
        proto.simulation.SslSimulationRobotControl.RobotControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationRobotControl.RobotControl buildPartial() {
        proto.simulation.SslSimulationRobotControl.RobotControl result = new proto.simulation.SslSimulationRobotControl.RobotControl(this);
        int from_bitField0_ = bitField0_;
        if (robotCommandsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            robotCommands_ = java.util.Collections.unmodifiableList(robotCommands_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.robotCommands_ = robotCommands_;
        } else {
          result.robotCommands_ = robotCommandsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationRobotControl.RobotControl) {
          return mergeFrom((proto.simulation.SslSimulationRobotControl.RobotControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationRobotControl.RobotControl other) {
        if (other == proto.simulation.SslSimulationRobotControl.RobotControl.getDefaultInstance()) return this;
        if (robotCommandsBuilder_ == null) {
          if (!other.robotCommands_.isEmpty()) {
            if (robotCommands_.isEmpty()) {
              robotCommands_ = other.robotCommands_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRobotCommandsIsMutable();
              robotCommands_.addAll(other.robotCommands_);
            }
            onChanged();
          }
        } else {
          if (!other.robotCommands_.isEmpty()) {
            if (robotCommandsBuilder_.isEmpty()) {
              robotCommandsBuilder_.dispose();
              robotCommandsBuilder_ = null;
              robotCommands_ = other.robotCommands_;
              bitField0_ = (bitField0_ & ~0x00000001);
              robotCommandsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRobotCommandsFieldBuilder() : null;
            } else {
              robotCommandsBuilder_.addAllMessages(other.robotCommands_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getRobotCommandsCount(); i++) {
          if (!getRobotCommands(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationRobotControl.RobotControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationRobotControl.RobotControl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand> robotCommands_ =
        java.util.Collections.emptyList();
      private void ensureRobotCommandsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          robotCommands_ = new java.util.ArrayList<proto.simulation.SslSimulationRobotControl.RobotCommand>(robotCommands_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.RobotCommand, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder> robotCommandsBuilder_;

      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand> getRobotCommandsList() {
        if (robotCommandsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(robotCommands_);
        } else {
          return robotCommandsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public int getRobotCommandsCount() {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.size();
        } else {
          return robotCommandsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotCommand getRobotCommands(int index) {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.get(index);
        } else {
          return robotCommandsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder setRobotCommands(
          int index, proto.simulation.SslSimulationRobotControl.RobotCommand value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.set(index, value);
          onChanged();
        } else {
          robotCommandsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder setRobotCommands(
          int index, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.set(index, builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder addRobotCommands(proto.simulation.SslSimulationRobotControl.RobotCommand value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.add(value);
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder addRobotCommands(
          int index, proto.simulation.SslSimulationRobotControl.RobotCommand value) {
        if (robotCommandsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRobotCommandsIsMutable();
          robotCommands_.add(index, value);
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder addRobotCommands(
          proto.simulation.SslSimulationRobotControl.RobotCommand.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.add(builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder addRobotCommands(
          int index, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder builderForValue) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.add(index, builderForValue.build());
          onChanged();
        } else {
          robotCommandsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder addAllRobotCommands(
          java.lang.Iterable<? extends proto.simulation.SslSimulationRobotControl.RobotCommand> values) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, robotCommands_);
          onChanged();
        } else {
          robotCommandsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder clearRobotCommands() {
        if (robotCommandsBuilder_ == null) {
          robotCommands_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          robotCommandsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public Builder removeRobotCommands(int index) {
        if (robotCommandsBuilder_ == null) {
          ensureRobotCommandsIsMutable();
          robotCommands_.remove(index);
          onChanged();
        } else {
          robotCommandsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotCommand.Builder getRobotCommandsBuilder(
          int index) {
        return getRobotCommandsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder getRobotCommandsOrBuilder(
          int index) {
        if (robotCommandsBuilder_ == null) {
          return robotCommands_.get(index);  } else {
          return robotCommandsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public java.util.List<? extends proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder> 
           getRobotCommandsOrBuilderList() {
        if (robotCommandsBuilder_ != null) {
          return robotCommandsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(robotCommands_);
        }
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotCommand.Builder addRobotCommandsBuilder() {
        return getRobotCommandsFieldBuilder().addBuilder(
            proto.simulation.SslSimulationRobotControl.RobotCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public proto.simulation.SslSimulationRobotControl.RobotCommand.Builder addRobotCommandsBuilder(
          int index) {
        return getRobotCommandsFieldBuilder().addBuilder(
            index, proto.simulation.SslSimulationRobotControl.RobotCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * Control the robots
       * </pre>
       *
       * <code>repeated .proto.simulation.RobotCommand robot_commands = 1;</code>
       */
      public java.util.List<proto.simulation.SslSimulationRobotControl.RobotCommand.Builder> 
           getRobotCommandsBuilderList() {
        return getRobotCommandsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationRobotControl.RobotCommand, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder> 
          getRobotCommandsFieldBuilder() {
        if (robotCommandsBuilder_ == null) {
          robotCommandsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.simulation.SslSimulationRobotControl.RobotCommand, proto.simulation.SslSimulationRobotControl.RobotCommand.Builder, proto.simulation.SslSimulationRobotControl.RobotCommandOrBuilder>(
                  robotCommands_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          robotCommands_ = null;
        }
        return robotCommandsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.RobotControl)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.RobotControl)
    private static final proto.simulation.SslSimulationRobotControl.RobotControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationRobotControl.RobotControl();
    }

    public static proto.simulation.SslSimulationRobotControl.RobotControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RobotControl>
        PARSER = new com.google.protobuf.AbstractParser<RobotControl>() {
      @java.lang.Override
      public RobotControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RobotControl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RobotControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RobotControl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationRobotControl.RobotControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotMoveCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotMoveCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_MoveWheelVelocity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_MoveWheelVelocity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_MoveLocalVelocity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_MoveLocalVelocity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_MoveGlobalVelocity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_MoveGlobalVelocity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_RobotControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_RobotControl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"ssl_simulation_robot_control.proto\022\020pr" +
      "oto.simulation\"\227\001\n\014RobotCommand\022\n\n\002id\030\001 " +
      "\002(\r\0228\n\014move_command\030\002 \001(\0132\".proto.simula" +
      "tion.RobotMoveCommand\022\022\n\nkick_speed\030\003 \001(" +
      "\002\022\025\n\nkick_angle\030\004 \001(\002:\0010\022\026\n\016dribbler_spe" +
      "ed\030\005 \001(\002\"\334\001\n\020RobotMoveCommand\022=\n\016wheel_v" +
      "elocity\030\001 \001(\0132#.proto.simulation.MoveWhe" +
      "elVelocityH\000\022=\n\016local_velocity\030\002 \001(\0132#.p" +
      "roto.simulation.MoveLocalVelocityH\000\022?\n\017g" +
      "lobal_velocity\030\003 \001(\0132$.proto.simulation." +
      "MoveGlobalVelocityH\000B\t\n\007command\"c\n\021MoveW" +
      "heelVelocity\022\023\n\013front_right\030\001 \002(\002\022\022\n\nbac" +
      "k_right\030\002 \002(\002\022\021\n\tback_left\030\003 \002(\002\022\022\n\nfron" +
      "t_left\030\004 \002(\002\"C\n\021MoveLocalVelocity\022\017\n\007for" +
      "ward\030\001 \002(\002\022\014\n\004left\030\002 \002(\002\022\017\n\007angular\030\003 \002(" +
      "\002\";\n\022MoveGlobalVelocity\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030" +
      "\002 \002(\002\022\017\n\007angular\030\003 \002(\002\"F\n\014RobotControl\0226" +
      "\n\016robot_commands\030\001 \003(\0132\036.proto.simulatio" +
      "n.RobotCommandB8Z6github.com/RoboCup-SSL" +
      "/ssl-simulation-protocol/pkg/sim"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_proto_simulation_RobotCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_simulation_RobotCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotCommand_descriptor,
        new java.lang.String[] { "Id", "MoveCommand", "KickSpeed", "KickAngle", "DribblerSpeed", });
    internal_static_proto_simulation_RobotMoveCommand_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_simulation_RobotMoveCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotMoveCommand_descriptor,
        new java.lang.String[] { "WheelVelocity", "LocalVelocity", "GlobalVelocity", "Command", });
    internal_static_proto_simulation_MoveWheelVelocity_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_simulation_MoveWheelVelocity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_MoveWheelVelocity_descriptor,
        new java.lang.String[] { "FrontRight", "BackRight", "BackLeft", "FrontLeft", });
    internal_static_proto_simulation_MoveLocalVelocity_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_simulation_MoveLocalVelocity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_MoveLocalVelocity_descriptor,
        new java.lang.String[] { "Forward", "Left", "Angular", });
    internal_static_proto_simulation_MoveGlobalVelocity_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_simulation_MoveGlobalVelocity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_MoveGlobalVelocity_descriptor,
        new java.lang.String[] { "X", "Y", "Angular", });
    internal_static_proto_simulation_RobotControl_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_proto_simulation_RobotControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_RobotControl_descriptor,
        new java.lang.String[] { "RobotCommands", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
