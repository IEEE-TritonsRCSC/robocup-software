// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robocup_ssl_geometry.proto

package proto.vision;

public final class MessagesRobocupSslGeometry {
  private MessagesRobocupSslGeometry() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code proto.vision.SSL_FieldShapeType}
   */
  public enum SSL_FieldShapeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Undefined = 0;</code>
     */
    Undefined(0),
    /**
     * <code>CenterCircle = 1;</code>
     */
    CenterCircle(1),
    /**
     * <code>TopTouchLine = 2;</code>
     */
    TopTouchLine(2),
    /**
     * <code>BottomTouchLine = 3;</code>
     */
    BottomTouchLine(3),
    /**
     * <code>LeftGoalLine = 4;</code>
     */
    LeftGoalLine(4),
    /**
     * <code>RightGoalLine = 5;</code>
     */
    RightGoalLine(5),
    /**
     * <code>HalfwayLine = 6;</code>
     */
    HalfwayLine(6),
    /**
     * <code>CenterLine = 7;</code>
     */
    CenterLine(7),
    /**
     * <code>LeftPenaltyStretch = 8;</code>
     */
    LeftPenaltyStretch(8),
    /**
     * <code>RightPenaltyStretch = 9;</code>
     */
    RightPenaltyStretch(9),
    /**
     * <code>LeftFieldLeftPenaltyStretch = 10;</code>
     */
    LeftFieldLeftPenaltyStretch(10),
    /**
     * <code>LeftFieldRightPenaltyStretch = 11;</code>
     */
    LeftFieldRightPenaltyStretch(11),
    /**
     * <code>RightFieldLeftPenaltyStretch = 12;</code>
     */
    RightFieldLeftPenaltyStretch(12),
    /**
     * <code>RightFieldRightPenaltyStretch = 13;</code>
     */
    RightFieldRightPenaltyStretch(13),
    ;

    /**
     * <code>Undefined = 0;</code>
     */
    public static final int Undefined_VALUE = 0;
    /**
     * <code>CenterCircle = 1;</code>
     */
    public static final int CenterCircle_VALUE = 1;
    /**
     * <code>TopTouchLine = 2;</code>
     */
    public static final int TopTouchLine_VALUE = 2;
    /**
     * <code>BottomTouchLine = 3;</code>
     */
    public static final int BottomTouchLine_VALUE = 3;
    /**
     * <code>LeftGoalLine = 4;</code>
     */
    public static final int LeftGoalLine_VALUE = 4;
    /**
     * <code>RightGoalLine = 5;</code>
     */
    public static final int RightGoalLine_VALUE = 5;
    /**
     * <code>HalfwayLine = 6;</code>
     */
    public static final int HalfwayLine_VALUE = 6;
    /**
     * <code>CenterLine = 7;</code>
     */
    public static final int CenterLine_VALUE = 7;
    /**
     * <code>LeftPenaltyStretch = 8;</code>
     */
    public static final int LeftPenaltyStretch_VALUE = 8;
    /**
     * <code>RightPenaltyStretch = 9;</code>
     */
    public static final int RightPenaltyStretch_VALUE = 9;
    /**
     * <code>LeftFieldLeftPenaltyStretch = 10;</code>
     */
    public static final int LeftFieldLeftPenaltyStretch_VALUE = 10;
    /**
     * <code>LeftFieldRightPenaltyStretch = 11;</code>
     */
    public static final int LeftFieldRightPenaltyStretch_VALUE = 11;
    /**
     * <code>RightFieldLeftPenaltyStretch = 12;</code>
     */
    public static final int RightFieldLeftPenaltyStretch_VALUE = 12;
    /**
     * <code>RightFieldRightPenaltyStretch = 13;</code>
     */
    public static final int RightFieldRightPenaltyStretch_VALUE = 13;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SSL_FieldShapeType valueOf(int value) {
      return forNumber(value);
    }

    public static SSL_FieldShapeType forNumber(int value) {
      switch (value) {
        case 0: return Undefined;
        case 1: return CenterCircle;
        case 2: return TopTouchLine;
        case 3: return BottomTouchLine;
        case 4: return LeftGoalLine;
        case 5: return RightGoalLine;
        case 6: return HalfwayLine;
        case 7: return CenterLine;
        case 8: return LeftPenaltyStretch;
        case 9: return RightPenaltyStretch;
        case 10: return LeftFieldLeftPenaltyStretch;
        case 11: return LeftFieldRightPenaltyStretch;
        case 12: return RightFieldLeftPenaltyStretch;
        case 13: return RightFieldRightPenaltyStretch;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SSL_FieldShapeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SSL_FieldShapeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SSL_FieldShapeType>() {
            public SSL_FieldShapeType findValueByNumber(int number) {
              return SSL_FieldShapeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.getDescriptor().getEnumTypes().get(0);
    }

    private static final SSL_FieldShapeType[] VALUES = values();

    public static SSL_FieldShapeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SSL_FieldShapeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.vision.SSL_FieldShapeType)
  }

  public interface Vector2fOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.Vector2f)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * X-coordinate in mm
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    boolean hasX();
    /**
     * <pre>
     * X-coordinate in mm
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    float getX();

    /**
     * <pre>
     * Y-coordinate in mm
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    boolean hasY();
    /**
     * <pre>
     * Y-coordinate in mm
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    float getY();
  }
  /**
   * <pre>
   * A 2D float vector.
   * </pre>
   *
   * Protobuf type {@code proto.vision.Vector2f}
   */
  public  static final class Vector2f extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.Vector2f)
      Vector2fOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Vector2f.newBuilder() to construct.
    private Vector2f(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector2f() {
      x_ = 0F;
      y_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Vector2f(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_Vector2f_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_Vector2f_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.Vector2f.class, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <pre>
     * X-coordinate in mm
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * X-coordinate in mm
     * </pre>
     *
     * <code>required float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <pre>
     * Y-coordinate in mm
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Y-coordinate in mm
     * </pre>
     *
     * <code>required float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.Vector2f)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.Vector2f other = (proto.vision.MessagesRobocupSslGeometry.Vector2f) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.Vector2f parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.Vector2f prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A 2D float vector.
     * </pre>
     *
     * Protobuf type {@code proto.vision.Vector2f}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.Vector2f)
        proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_Vector2f_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_Vector2f_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.Vector2f.class, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.Vector2f.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_Vector2f_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.Vector2f getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.Vector2f build() {
        proto.vision.MessagesRobocupSslGeometry.Vector2f result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.Vector2f buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.Vector2f result = new proto.vision.MessagesRobocupSslGeometry.Vector2f(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.Vector2f) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.Vector2f)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.Vector2f other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasX()) {
          return false;
        }
        if (!hasY()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.Vector2f parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.Vector2f) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <pre>
       * X-coordinate in mm
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * X-coordinate in mm
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <pre>
       * X-coordinate in mm
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * X-coordinate in mm
       * </pre>
       *
       * <code>required float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <pre>
       * Y-coordinate in mm
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Y-coordinate in mm
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <pre>
       * Y-coordinate in mm
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Y-coordinate in mm
       * </pre>
       *
       * <code>required float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.Vector2f)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.Vector2f)
    private static final proto.vision.MessagesRobocupSslGeometry.Vector2f DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.Vector2f();
    }

    public static proto.vision.MessagesRobocupSslGeometry.Vector2f getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Vector2f>
        PARSER = new com.google.protobuf.AbstractParser<Vector2f>() {
      @java.lang.Override
      public Vector2f parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector2f(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector2f> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector2f> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.Vector2f getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_FieldLineSegmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_FieldLineSegment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    boolean hasP1();
    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2f getP1();
    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP1OrBuilder();

    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    boolean hasP2();
    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2f getP2();
    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP2OrBuilder();

    /**
     * <pre>
     * Thickness of the line segment.
     * </pre>
     *
     * <code>required float thickness = 4;</code>
     */
    boolean hasThickness();
    /**
     * <pre>
     * Thickness of the line segment.
     * </pre>
     *
     * <code>required float thickness = 4;</code>
     */
    float getThickness();

    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType();
  }
  /**
   * <pre>
   * Represents a field marking as a line segment represented by a start point p1,
   * and end point p2, and a line thickness. The start and end points are along
   * the center of the line, so the thickness of the line extends by thickness / 2
   * on either side of the line.
   * </pre>
   *
   * Protobuf type {@code proto.vision.SSL_FieldLineSegment}
   */
  public  static final class SSL_FieldLineSegment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_FieldLineSegment)
      SSL_FieldLineSegmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_FieldLineSegment.newBuilder() to construct.
    private SSL_FieldLineSegment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_FieldLineSegment() {
      name_ = "";
      thickness_ = 0F;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_FieldLineSegment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = p1_.toBuilder();
              }
              p1_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.Vector2f.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p1_);
                p1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = p2_.toBuilder();
              }
              p2_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.Vector2f.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p2_);
                p2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              thickness_ = input.readFloat();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType value = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                type_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldLineSegment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldLineSegment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.class, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int P1_FIELD_NUMBER = 2;
    private proto.vision.MessagesRobocupSslGeometry.Vector2f p1_;
    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    public boolean hasP1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2f getP1() {
      return p1_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p1_;
    }
    /**
     * <pre>
     * Start point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p1 = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP1OrBuilder() {
      return p1_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p1_;
    }

    public static final int P2_FIELD_NUMBER = 3;
    private proto.vision.MessagesRobocupSslGeometry.Vector2f p2_;
    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    public boolean hasP2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2f getP2() {
      return p2_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p2_;
    }
    /**
     * <pre>
     * End point of the line segment.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f p2 = 3;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP2OrBuilder() {
      return p2_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p2_;
    }

    public static final int THICKNESS_FIELD_NUMBER = 4;
    private float thickness_;
    /**
     * <pre>
     * Thickness of the line segment.
     * </pre>
     *
     * <code>required float thickness = 4;</code>
     */
    public boolean hasThickness() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Thickness of the line segment.
     * </pre>
     *
     * <code>required float thickness = 4;</code>
     */
    public float getThickness() {
      return thickness_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType() {
      @SuppressWarnings("deprecation")
      proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType result = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(type_);
      return result == null ? proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.Undefined : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasP1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasP2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThickness()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getP1().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getP2().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getP1());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getP2());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, thickness_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getP1());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getP2());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, thickness_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment other = (proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasP1() == other.hasP1());
      if (hasP1()) {
        result = result && getP1()
            .equals(other.getP1());
      }
      result = result && (hasP2() == other.hasP2());
      if (hasP2()) {
        result = result && getP2()
            .equals(other.getP2());
      }
      result = result && (hasThickness() == other.hasThickness());
      if (hasThickness()) {
        result = result && (
            java.lang.Float.floatToIntBits(getThickness())
            == java.lang.Float.floatToIntBits(
                other.getThickness()));
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasP1()) {
        hash = (37 * hash) + P1_FIELD_NUMBER;
        hash = (53 * hash) + getP1().hashCode();
      }
      if (hasP2()) {
        hash = (37 * hash) + P2_FIELD_NUMBER;
        hash = (53 * hash) + getP2().hashCode();
      }
      if (hasThickness()) {
        hash = (37 * hash) + THICKNESS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getThickness());
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Represents a field marking as a line segment represented by a start point p1,
     * and end point p2, and a line thickness. The start and end points are along
     * the center of the line, so the thickness of the line extends by thickness / 2
     * on either side of the line.
     * </pre>
     *
     * Protobuf type {@code proto.vision.SSL_FieldLineSegment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_FieldLineSegment)
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldLineSegment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldLineSegment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.class, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getP1FieldBuilder();
          getP2FieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (p1Builder_ == null) {
          p1_ = null;
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (p2Builder_ == null) {
          p2_ = null;
        } else {
          p2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        thickness_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldLineSegment_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment result = new proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (p1Builder_ == null) {
          result.p1_ = p1_;
        } else {
          result.p1_ = p1Builder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (p2Builder_ == null) {
          result.p2_ = p2_;
        } else {
          result.p2_ = p2Builder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.thickness_ = thickness_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasP1()) {
          mergeP1(other.getP1());
        }
        if (other.hasP2()) {
          mergeP2(other.getP2());
        }
        if (other.hasThickness()) {
          setThickness(other.getThickness());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasP1()) {
          return false;
        }
        if (!hasP2()) {
          return false;
        }
        if (!hasThickness()) {
          return false;
        }
        if (!getP1().isInitialized()) {
          return false;
        }
        if (!getP2().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private proto.vision.MessagesRobocupSslGeometry.Vector2f p1_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> p1Builder_;
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public boolean hasP1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f getP1() {
        if (p1Builder_ == null) {
          return p1_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p1_;
        } else {
          return p1Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public Builder setP1(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (p1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p1_ = value;
          onChanged();
        } else {
          p1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public Builder setP1(
          proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder builderForValue) {
        if (p1Builder_ == null) {
          p1_ = builderForValue.build();
          onChanged();
        } else {
          p1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public Builder mergeP1(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (p1Builder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              p1_ != null &&
              p1_ != proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance()) {
            p1_ =
              proto.vision.MessagesRobocupSslGeometry.Vector2f.newBuilder(p1_).mergeFrom(value).buildPartial();
          } else {
            p1_ = value;
          }
          onChanged();
        } else {
          p1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public Builder clearP1() {
        if (p1Builder_ == null) {
          p1_ = null;
          onChanged();
        } else {
          p1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder getP1Builder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getP1FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP1OrBuilder() {
        if (p1Builder_ != null) {
          return p1Builder_.getMessageOrBuilder();
        } else {
          return p1_ == null ?
              proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p1_;
        }
      }
      /**
       * <pre>
       * Start point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p1 = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> 
          getP1FieldBuilder() {
        if (p1Builder_ == null) {
          p1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder>(
                  getP1(),
                  getParentForChildren(),
                  isClean());
          p1_ = null;
        }
        return p1Builder_;
      }

      private proto.vision.MessagesRobocupSslGeometry.Vector2f p2_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> p2Builder_;
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public boolean hasP2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f getP2() {
        if (p2Builder_ == null) {
          return p2_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p2_;
        } else {
          return p2Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public Builder setP2(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (p2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p2_ = value;
          onChanged();
        } else {
          p2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public Builder setP2(
          proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder builderForValue) {
        if (p2Builder_ == null) {
          p2_ = builderForValue.build();
          onChanged();
        } else {
          p2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public Builder mergeP2(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (p2Builder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              p2_ != null &&
              p2_ != proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance()) {
            p2_ =
              proto.vision.MessagesRobocupSslGeometry.Vector2f.newBuilder(p2_).mergeFrom(value).buildPartial();
          } else {
            p2_ = value;
          }
          onChanged();
        } else {
          p2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public Builder clearP2() {
        if (p2Builder_ == null) {
          p2_ = null;
          onChanged();
        } else {
          p2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder getP2Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getP2FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getP2OrBuilder() {
        if (p2Builder_ != null) {
          return p2Builder_.getMessageOrBuilder();
        } else {
          return p2_ == null ?
              proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : p2_;
        }
      }
      /**
       * <pre>
       * End point of the line segment.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f p2 = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> 
          getP2FieldBuilder() {
        if (p2Builder_ == null) {
          p2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder>(
                  getP2(),
                  getParentForChildren(),
                  isClean());
          p2_ = null;
        }
        return p2Builder_;
      }

      private float thickness_ ;
      /**
       * <pre>
       * Thickness of the line segment.
       * </pre>
       *
       * <code>required float thickness = 4;</code>
       */
      public boolean hasThickness() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Thickness of the line segment.
       * </pre>
       *
       * <code>required float thickness = 4;</code>
       */
      public float getThickness() {
        return thickness_;
      }
      /**
       * <pre>
       * Thickness of the line segment.
       * </pre>
       *
       * <code>required float thickness = 4;</code>
       */
      public Builder setThickness(float value) {
        bitField0_ |= 0x00000008;
        thickness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Thickness of the line segment.
       * </pre>
       *
       * <code>required float thickness = 4;</code>
       */
      public Builder clearThickness() {
        bitField0_ = (bitField0_ & ~0x00000008);
        thickness_ = 0F;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType() {
        @SuppressWarnings("deprecation")
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType result = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(type_);
        return result == null ? proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.Undefined : result;
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
       */
      public Builder setType(proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 5;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_FieldLineSegment)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_FieldLineSegment)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_FieldLineSegment>
        PARSER = new com.google.protobuf.AbstractParser<SSL_FieldLineSegment>() {
      @java.lang.Override
      public SSL_FieldLineSegment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_FieldLineSegment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_FieldLineSegment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_FieldLineSegment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_FieldCircularArcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_FieldCircularArc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    boolean hasCenter();
    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2f getCenter();
    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getCenterOrBuilder();

    /**
     * <pre>
     * Radius of the arc.
     * </pre>
     *
     * <code>required float radius = 3;</code>
     */
    boolean hasRadius();
    /**
     * <pre>
     * Radius of the arc.
     * </pre>
     *
     * <code>required float radius = 3;</code>
     */
    float getRadius();

    /**
     * <pre>
     * Start angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a1 = 4;</code>
     */
    boolean hasA1();
    /**
     * <pre>
     * Start angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a1 = 4;</code>
     */
    float getA1();

    /**
     * <pre>
     * End angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a2 = 5;</code>
     */
    boolean hasA2();
    /**
     * <pre>
     * End angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a2 = 5;</code>
     */
    float getA2();

    /**
     * <pre>
     * Thickness of the arc.
     * </pre>
     *
     * <code>required float thickness = 6;</code>
     */
    boolean hasThickness();
    /**
     * <pre>
     * Thickness of the arc.
     * </pre>
     *
     * <code>required float thickness = 6;</code>
     */
    float getThickness();

    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType();
  }
  /**
   * <pre>
   * Represents a field marking as a circular arc segment represented by center point, a
   * start angle, an end angle, and an arc thickness.
   * </pre>
   *
   * Protobuf type {@code proto.vision.SSL_FieldCircularArc}
   */
  public  static final class SSL_FieldCircularArc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_FieldCircularArc)
      SSL_FieldCircularArcOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_FieldCircularArc.newBuilder() to construct.
    private SSL_FieldCircularArc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_FieldCircularArc() {
      name_ = "";
      radius_ = 0F;
      a1_ = 0F;
      a2_ = 0F;
      thickness_ = 0F;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_FieldCircularArc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = center_.toBuilder();
              }
              center_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.Vector2f.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(center_);
                center_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              radius_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              a1_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              a2_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              thickness_ = input.readFloat();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType value = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                type_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldCircularArc_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldCircularArc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.class, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of this field marking.
     * </pre>
     *
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CENTER_FIELD_NUMBER = 2;
    private proto.vision.MessagesRobocupSslGeometry.Vector2f center_;
    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    public boolean hasCenter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2f getCenter() {
      return center_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : center_;
    }
    /**
     * <pre>
     * Center point of the circular arc.
     * </pre>
     *
     * <code>required .proto.vision.Vector2f center = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getCenterOrBuilder() {
      return center_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : center_;
    }

    public static final int RADIUS_FIELD_NUMBER = 3;
    private float radius_;
    /**
     * <pre>
     * Radius of the arc.
     * </pre>
     *
     * <code>required float radius = 3;</code>
     */
    public boolean hasRadius() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Radius of the arc.
     * </pre>
     *
     * <code>required float radius = 3;</code>
     */
    public float getRadius() {
      return radius_;
    }

    public static final int A1_FIELD_NUMBER = 4;
    private float a1_;
    /**
     * <pre>
     * Start angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a1 = 4;</code>
     */
    public boolean hasA1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Start angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a1 = 4;</code>
     */
    public float getA1() {
      return a1_;
    }

    public static final int A2_FIELD_NUMBER = 5;
    private float a2_;
    /**
     * <pre>
     * End angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a2 = 5;</code>
     */
    public boolean hasA2() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * End angle in counter-clockwise order.
     * </pre>
     *
     * <code>required float a2 = 5;</code>
     */
    public float getA2() {
      return a2_;
    }

    public static final int THICKNESS_FIELD_NUMBER = 6;
    private float thickness_;
    /**
     * <pre>
     * Thickness of the arc.
     * </pre>
     *
     * <code>required float thickness = 6;</code>
     */
    public boolean hasThickness() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Thickness of the arc.
     * </pre>
     *
     * <code>required float thickness = 6;</code>
     */
    public float getThickness() {
      return thickness_;
    }

    public static final int TYPE_FIELD_NUMBER = 7;
    private int type_;
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * The type of this shape
     * </pre>
     *
     * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType() {
      @SuppressWarnings("deprecation")
      proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType result = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(type_);
      return result == null ? proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.Undefined : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCenter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRadius()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasA1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasA2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThickness()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCenter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getCenter());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, radius_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, a1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, a2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, thickness_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCenter());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, radius_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, a1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, a2_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, thickness_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc other = (proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasCenter() == other.hasCenter());
      if (hasCenter()) {
        result = result && getCenter()
            .equals(other.getCenter());
      }
      result = result && (hasRadius() == other.hasRadius());
      if (hasRadius()) {
        result = result && (
            java.lang.Float.floatToIntBits(getRadius())
            == java.lang.Float.floatToIntBits(
                other.getRadius()));
      }
      result = result && (hasA1() == other.hasA1());
      if (hasA1()) {
        result = result && (
            java.lang.Float.floatToIntBits(getA1())
            == java.lang.Float.floatToIntBits(
                other.getA1()));
      }
      result = result && (hasA2() == other.hasA2());
      if (hasA2()) {
        result = result && (
            java.lang.Float.floatToIntBits(getA2())
            == java.lang.Float.floatToIntBits(
                other.getA2()));
      }
      result = result && (hasThickness() == other.hasThickness());
      if (hasThickness()) {
        result = result && (
            java.lang.Float.floatToIntBits(getThickness())
            == java.lang.Float.floatToIntBits(
                other.getThickness()));
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasCenter()) {
        hash = (37 * hash) + CENTER_FIELD_NUMBER;
        hash = (53 * hash) + getCenter().hashCode();
      }
      if (hasRadius()) {
        hash = (37 * hash) + RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRadius());
      }
      if (hasA1()) {
        hash = (37 * hash) + A1_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getA1());
      }
      if (hasA2()) {
        hash = (37 * hash) + A2_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getA2());
      }
      if (hasThickness()) {
        hash = (37 * hash) + THICKNESS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getThickness());
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Represents a field marking as a circular arc segment represented by center point, a
     * start angle, an end angle, and an arc thickness.
     * </pre>
     *
     * Protobuf type {@code proto.vision.SSL_FieldCircularArc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_FieldCircularArc)
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldCircularArc_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldCircularArc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.class, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCenterFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (centerBuilder_ == null) {
          center_ = null;
        } else {
          centerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        radius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        a1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        a2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        thickness_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_FieldCircularArc_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc result = new proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (centerBuilder_ == null) {
          result.center_ = center_;
        } else {
          result.center_ = centerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.radius_ = radius_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.a1_ = a1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.a2_ = a2_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.thickness_ = thickness_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCenter()) {
          mergeCenter(other.getCenter());
        }
        if (other.hasRadius()) {
          setRadius(other.getRadius());
        }
        if (other.hasA1()) {
          setA1(other.getA1());
        }
        if (other.hasA2()) {
          setA2(other.getA2());
        }
        if (other.hasThickness()) {
          setThickness(other.getThickness());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasCenter()) {
          return false;
        }
        if (!hasRadius()) {
          return false;
        }
        if (!hasA1()) {
          return false;
        }
        if (!hasA2()) {
          return false;
        }
        if (!hasThickness()) {
          return false;
        }
        if (!getCenter().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of this field marking.
       * </pre>
       *
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private proto.vision.MessagesRobocupSslGeometry.Vector2f center_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> centerBuilder_;
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public boolean hasCenter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f getCenter() {
        if (centerBuilder_ == null) {
          return center_ == null ? proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : center_;
        } else {
          return centerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public Builder setCenter(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (centerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          center_ = value;
          onChanged();
        } else {
          centerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public Builder setCenter(
          proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder builderForValue) {
        if (centerBuilder_ == null) {
          center_ = builderForValue.build();
          onChanged();
        } else {
          centerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public Builder mergeCenter(proto.vision.MessagesRobocupSslGeometry.Vector2f value) {
        if (centerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              center_ != null &&
              center_ != proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance()) {
            center_ =
              proto.vision.MessagesRobocupSslGeometry.Vector2f.newBuilder(center_).mergeFrom(value).buildPartial();
          } else {
            center_ = value;
          }
          onChanged();
        } else {
          centerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public Builder clearCenter() {
        if (centerBuilder_ == null) {
          center_ = null;
          onChanged();
        } else {
          centerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder getCenterBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCenterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder getCenterOrBuilder() {
        if (centerBuilder_ != null) {
          return centerBuilder_.getMessageOrBuilder();
        } else {
          return center_ == null ?
              proto.vision.MessagesRobocupSslGeometry.Vector2f.getDefaultInstance() : center_;
        }
      }
      /**
       * <pre>
       * Center point of the circular arc.
       * </pre>
       *
       * <code>required .proto.vision.Vector2f center = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder> 
          getCenterFieldBuilder() {
        if (centerBuilder_ == null) {
          centerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.Vector2f, proto.vision.MessagesRobocupSslGeometry.Vector2f.Builder, proto.vision.MessagesRobocupSslGeometry.Vector2fOrBuilder>(
                  getCenter(),
                  getParentForChildren(),
                  isClean());
          center_ = null;
        }
        return centerBuilder_;
      }

      private float radius_ ;
      /**
       * <pre>
       * Radius of the arc.
       * </pre>
       *
       * <code>required float radius = 3;</code>
       */
      public boolean hasRadius() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Radius of the arc.
       * </pre>
       *
       * <code>required float radius = 3;</code>
       */
      public float getRadius() {
        return radius_;
      }
      /**
       * <pre>
       * Radius of the arc.
       * </pre>
       *
       * <code>required float radius = 3;</code>
       */
      public Builder setRadius(float value) {
        bitField0_ |= 0x00000004;
        radius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Radius of the arc.
       * </pre>
       *
       * <code>required float radius = 3;</code>
       */
      public Builder clearRadius() {
        bitField0_ = (bitField0_ & ~0x00000004);
        radius_ = 0F;
        onChanged();
        return this;
      }

      private float a1_ ;
      /**
       * <pre>
       * Start angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a1 = 4;</code>
       */
      public boolean hasA1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Start angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a1 = 4;</code>
       */
      public float getA1() {
        return a1_;
      }
      /**
       * <pre>
       * Start angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a1 = 4;</code>
       */
      public Builder setA1(float value) {
        bitField0_ |= 0x00000008;
        a1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Start angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a1 = 4;</code>
       */
      public Builder clearA1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        a1_ = 0F;
        onChanged();
        return this;
      }

      private float a2_ ;
      /**
       * <pre>
       * End angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a2 = 5;</code>
       */
      public boolean hasA2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * End angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a2 = 5;</code>
       */
      public float getA2() {
        return a2_;
      }
      /**
       * <pre>
       * End angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a2 = 5;</code>
       */
      public Builder setA2(float value) {
        bitField0_ |= 0x00000010;
        a2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * End angle in counter-clockwise order.
       * </pre>
       *
       * <code>required float a2 = 5;</code>
       */
      public Builder clearA2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        a2_ = 0F;
        onChanged();
        return this;
      }

      private float thickness_ ;
      /**
       * <pre>
       * Thickness of the arc.
       * </pre>
       *
       * <code>required float thickness = 6;</code>
       */
      public boolean hasThickness() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Thickness of the arc.
       * </pre>
       *
       * <code>required float thickness = 6;</code>
       */
      public float getThickness() {
        return thickness_;
      }
      /**
       * <pre>
       * Thickness of the arc.
       * </pre>
       *
       * <code>required float thickness = 6;</code>
       */
      public Builder setThickness(float value) {
        bitField0_ |= 0x00000020;
        thickness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Thickness of the arc.
       * </pre>
       *
       * <code>required float thickness = 6;</code>
       */
      public Builder clearThickness() {
        bitField0_ = (bitField0_ & ~0x00000020);
        thickness_ = 0F;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType getType() {
        @SuppressWarnings("deprecation")
        proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType result = proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.valueOf(type_);
        return result == null ? proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType.Undefined : result;
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
       */
      public Builder setType(proto.vision.MessagesRobocupSslGeometry.SSL_FieldShapeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of this shape
       * </pre>
       *
       * <code>optional .proto.vision.SSL_FieldShapeType type = 7;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_FieldCircularArc)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_FieldCircularArc)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_FieldCircularArc>
        PARSER = new com.google.protobuf.AbstractParser<SSL_FieldCircularArc>() {
      @java.lang.Override
      public SSL_FieldCircularArc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_FieldCircularArc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_FieldCircularArc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_FieldCircularArc> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_GeometryFieldSizeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_GeometryFieldSize)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Field length (distance between goal lines) in mm
     * </pre>
     *
     * <code>required int32 field_length = 1;</code>
     */
    boolean hasFieldLength();
    /**
     * <pre>
     * Field length (distance between goal lines) in mm
     * </pre>
     *
     * <code>required int32 field_length = 1;</code>
     */
    int getFieldLength();

    /**
     * <pre>
     * Field width (distance between touch lines) in mm
     * </pre>
     *
     * <code>required int32 field_width = 2;</code>
     */
    boolean hasFieldWidth();
    /**
     * <pre>
     * Field width (distance between touch lines) in mm
     * </pre>
     *
     * <code>required int32 field_width = 2;</code>
     */
    int getFieldWidth();

    /**
     * <pre>
     * Goal width (distance between inner edges of goal posts) in mm
     * </pre>
     *
     * <code>required int32 goal_width = 3;</code>
     */
    boolean hasGoalWidth();
    /**
     * <pre>
     * Goal width (distance between inner edges of goal posts) in mm
     * </pre>
     *
     * <code>required int32 goal_width = 3;</code>
     */
    int getGoalWidth();

    /**
     * <pre>
     * Goal depth (distance from outer goal line edge to inner goal back) in mm
     * </pre>
     *
     * <code>required int32 goal_depth = 4;</code>
     */
    boolean hasGoalDepth();
    /**
     * <pre>
     * Goal depth (distance from outer goal line edge to inner goal back) in mm
     * </pre>
     *
     * <code>required int32 goal_depth = 4;</code>
     */
    int getGoalDepth();

    /**
     * <pre>
     * Boundary width (distance from touch/goal line centers to boundary walls) in mm
     * </pre>
     *
     * <code>required int32 boundary_width = 5;</code>
     */
    boolean hasBoundaryWidth();
    /**
     * <pre>
     * Boundary width (distance from touch/goal line centers to boundary walls) in mm
     * </pre>
     *
     * <code>required int32 boundary_width = 5;</code>
     */
    int getBoundaryWidth();

    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> 
        getFieldLinesList();
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getFieldLines(int index);
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    int getFieldLinesCount();
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder> 
        getFieldLinesOrBuilderList();
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder getFieldLinesOrBuilder(
        int index);

    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> 
        getFieldArcsList();
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getFieldArcs(int index);
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    int getFieldArcsCount();
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder> 
        getFieldArcsOrBuilderList();
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder getFieldArcsOrBuilder(
        int index);

    /**
     * <pre>
     * Depth of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_depth = 8;</code>
     */
    boolean hasPenaltyAreaDepth();
    /**
     * <pre>
     * Depth of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_depth = 8;</code>
     */
    int getPenaltyAreaDepth();

    /**
     * <pre>
     * Width of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_width = 9;</code>
     */
    boolean hasPenaltyAreaWidth();
    /**
     * <pre>
     * Width of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_width = 9;</code>
     */
    int getPenaltyAreaWidth();

    /**
     * <pre>
     * Radius of the center circle (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 center_circle_radius = 10;</code>
     */
    boolean hasCenterCircleRadius();
    /**
     * <pre>
     * Radius of the center circle (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 center_circle_radius = 10;</code>
     */
    int getCenterCircleRadius();

    /**
     * <pre>
     * Thickness/width of the lines on the field in mm
     * </pre>
     *
     * <code>optional int32 line_thickness = 11;</code>
     */
    boolean hasLineThickness();
    /**
     * <pre>
     * Thickness/width of the lines on the field in mm
     * </pre>
     *
     * <code>optional int32 line_thickness = 11;</code>
     */
    int getLineThickness();

    /**
     * <pre>
     * Distance between the goal center and the center of the penalty mark in mm 
     * </pre>
     *
     * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
     */
    boolean hasGoalCenterToPenaltyMark();
    /**
     * <pre>
     * Distance between the goal center and the center of the penalty mark in mm 
     * </pre>
     *
     * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
     */
    int getGoalCenterToPenaltyMark();

    /**
     * <pre>
     * Goal height in mm
     * </pre>
     *
     * <code>optional int32 goal_height = 13;</code>
     */
    boolean hasGoalHeight();
    /**
     * <pre>
     * Goal height in mm
     * </pre>
     *
     * <code>optional int32 goal_height = 13;</code>
     */
    int getGoalHeight();

    /**
     * <pre>
     * Ball radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float ball_radius = 14;</code>
     */
    boolean hasBallRadius();
    /**
     * <pre>
     * Ball radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float ball_radius = 14;</code>
     */
    float getBallRadius();

    /**
     * <pre>
     * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float max_robot_radius = 15;</code>
     */
    boolean hasMaxRobotRadius();
    /**
     * <pre>
     * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float max_robot_radius = 15;</code>
     */
    float getMaxRobotRadius();
  }
  /**
   * Protobuf type {@code proto.vision.SSL_GeometryFieldSize}
   */
  public  static final class SSL_GeometryFieldSize extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_GeometryFieldSize)
      SSL_GeometryFieldSizeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_GeometryFieldSize.newBuilder() to construct.
    private SSL_GeometryFieldSize(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryFieldSize() {
      fieldLength_ = 0;
      fieldWidth_ = 0;
      goalWidth_ = 0;
      goalDepth_ = 0;
      boundaryWidth_ = 0;
      fieldLines_ = java.util.Collections.emptyList();
      fieldArcs_ = java.util.Collections.emptyList();
      penaltyAreaDepth_ = 0;
      penaltyAreaWidth_ = 0;
      centerCircleRadius_ = 0;
      lineThickness_ = 0;
      goalCenterToPenaltyMark_ = 0;
      goalHeight_ = 0;
      ballRadius_ = 0F;
      maxRobotRadius_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryFieldSize(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              fieldLength_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fieldWidth_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              goalWidth_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              goalDepth_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              boundaryWidth_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                fieldLines_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment>();
                mutable_bitField0_ |= 0x00000020;
              }
              fieldLines_.add(
                  input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                fieldArcs_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc>();
                mutable_bitField0_ |= 0x00000040;
              }
              fieldArcs_.add(
                  input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              penaltyAreaDepth_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              penaltyAreaWidth_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              centerCircleRadius_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              lineThickness_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              goalCenterToPenaltyMark_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              goalHeight_ = input.readInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000800;
              ballRadius_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00001000;
              maxRobotRadius_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          fieldLines_ = java.util.Collections.unmodifiableList(fieldLines_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          fieldArcs_ = java.util.Collections.unmodifiableList(fieldArcs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryFieldSize_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryFieldSize_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder.class);
    }

    private int bitField0_;
    public static final int FIELD_LENGTH_FIELD_NUMBER = 1;
    private int fieldLength_;
    /**
     * <pre>
     * Field length (distance between goal lines) in mm
     * </pre>
     *
     * <code>required int32 field_length = 1;</code>
     */
    public boolean hasFieldLength() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Field length (distance between goal lines) in mm
     * </pre>
     *
     * <code>required int32 field_length = 1;</code>
     */
    public int getFieldLength() {
      return fieldLength_;
    }

    public static final int FIELD_WIDTH_FIELD_NUMBER = 2;
    private int fieldWidth_;
    /**
     * <pre>
     * Field width (distance between touch lines) in mm
     * </pre>
     *
     * <code>required int32 field_width = 2;</code>
     */
    public boolean hasFieldWidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Field width (distance between touch lines) in mm
     * </pre>
     *
     * <code>required int32 field_width = 2;</code>
     */
    public int getFieldWidth() {
      return fieldWidth_;
    }

    public static final int GOAL_WIDTH_FIELD_NUMBER = 3;
    private int goalWidth_;
    /**
     * <pre>
     * Goal width (distance between inner edges of goal posts) in mm
     * </pre>
     *
     * <code>required int32 goal_width = 3;</code>
     */
    public boolean hasGoalWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Goal width (distance between inner edges of goal posts) in mm
     * </pre>
     *
     * <code>required int32 goal_width = 3;</code>
     */
    public int getGoalWidth() {
      return goalWidth_;
    }

    public static final int GOAL_DEPTH_FIELD_NUMBER = 4;
    private int goalDepth_;
    /**
     * <pre>
     * Goal depth (distance from outer goal line edge to inner goal back) in mm
     * </pre>
     *
     * <code>required int32 goal_depth = 4;</code>
     */
    public boolean hasGoalDepth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Goal depth (distance from outer goal line edge to inner goal back) in mm
     * </pre>
     *
     * <code>required int32 goal_depth = 4;</code>
     */
    public int getGoalDepth() {
      return goalDepth_;
    }

    public static final int BOUNDARY_WIDTH_FIELD_NUMBER = 5;
    private int boundaryWidth_;
    /**
     * <pre>
     * Boundary width (distance from touch/goal line centers to boundary walls) in mm
     * </pre>
     *
     * <code>required int32 boundary_width = 5;</code>
     */
    public boolean hasBoundaryWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Boundary width (distance from touch/goal line centers to boundary walls) in mm
     * </pre>
     *
     * <code>required int32 boundary_width = 5;</code>
     */
    public int getBoundaryWidth() {
      return boundaryWidth_;
    }

    public static final int FIELD_LINES_FIELD_NUMBER = 6;
    private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> fieldLines_;
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> getFieldLinesList() {
      return fieldLines_;
    }
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder> 
        getFieldLinesOrBuilderList() {
      return fieldLines_;
    }
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    public int getFieldLinesCount() {
      return fieldLines_.size();
    }
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getFieldLines(int index) {
      return fieldLines_.get(index);
    }
    /**
     * <pre>
     * Generated line segments based on the other parameters 
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder getFieldLinesOrBuilder(
        int index) {
      return fieldLines_.get(index);
    }

    public static final int FIELD_ARCS_FIELD_NUMBER = 7;
    private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> fieldArcs_;
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> getFieldArcsList() {
      return fieldArcs_;
    }
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder> 
        getFieldArcsOrBuilderList() {
      return fieldArcs_;
    }
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    public int getFieldArcsCount() {
      return fieldArcs_.size();
    }
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getFieldArcs(int index) {
      return fieldArcs_.get(index);
    }
    /**
     * <pre>
     * Generated circular arcs based on the other parameters
     * </pre>
     *
     * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder getFieldArcsOrBuilder(
        int index) {
      return fieldArcs_.get(index);
    }

    public static final int PENALTY_AREA_DEPTH_FIELD_NUMBER = 8;
    private int penaltyAreaDepth_;
    /**
     * <pre>
     * Depth of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_depth = 8;</code>
     */
    public boolean hasPenaltyAreaDepth() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Depth of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_depth = 8;</code>
     */
    public int getPenaltyAreaDepth() {
      return penaltyAreaDepth_;
    }

    public static final int PENALTY_AREA_WIDTH_FIELD_NUMBER = 9;
    private int penaltyAreaWidth_;
    /**
     * <pre>
     * Width of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_width = 9;</code>
     */
    public boolean hasPenaltyAreaWidth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Width of the penalty/defense area (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 penalty_area_width = 9;</code>
     */
    public int getPenaltyAreaWidth() {
      return penaltyAreaWidth_;
    }

    public static final int CENTER_CIRCLE_RADIUS_FIELD_NUMBER = 10;
    private int centerCircleRadius_;
    /**
     * <pre>
     * Radius of the center circle (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 center_circle_radius = 10;</code>
     */
    public boolean hasCenterCircleRadius() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Radius of the center circle (measured between line centers) in mm
     * </pre>
     *
     * <code>optional int32 center_circle_radius = 10;</code>
     */
    public int getCenterCircleRadius() {
      return centerCircleRadius_;
    }

    public static final int LINE_THICKNESS_FIELD_NUMBER = 11;
    private int lineThickness_;
    /**
     * <pre>
     * Thickness/width of the lines on the field in mm
     * </pre>
     *
     * <code>optional int32 line_thickness = 11;</code>
     */
    public boolean hasLineThickness() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Thickness/width of the lines on the field in mm
     * </pre>
     *
     * <code>optional int32 line_thickness = 11;</code>
     */
    public int getLineThickness() {
      return lineThickness_;
    }

    public static final int GOAL_CENTER_TO_PENALTY_MARK_FIELD_NUMBER = 12;
    private int goalCenterToPenaltyMark_;
    /**
     * <pre>
     * Distance between the goal center and the center of the penalty mark in mm 
     * </pre>
     *
     * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
     */
    public boolean hasGoalCenterToPenaltyMark() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * Distance between the goal center and the center of the penalty mark in mm 
     * </pre>
     *
     * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
     */
    public int getGoalCenterToPenaltyMark() {
      return goalCenterToPenaltyMark_;
    }

    public static final int GOAL_HEIGHT_FIELD_NUMBER = 13;
    private int goalHeight_;
    /**
     * <pre>
     * Goal height in mm
     * </pre>
     *
     * <code>optional int32 goal_height = 13;</code>
     */
    public boolean hasGoalHeight() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * Goal height in mm
     * </pre>
     *
     * <code>optional int32 goal_height = 13;</code>
     */
    public int getGoalHeight() {
      return goalHeight_;
    }

    public static final int BALL_RADIUS_FIELD_NUMBER = 14;
    private float ballRadius_;
    /**
     * <pre>
     * Ball radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float ball_radius = 14;</code>
     */
    public boolean hasBallRadius() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Ball radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float ball_radius = 14;</code>
     */
    public float getBallRadius() {
      return ballRadius_;
    }

    public static final int MAX_ROBOT_RADIUS_FIELD_NUMBER = 15;
    private float maxRobotRadius_;
    /**
     * <pre>
     * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float max_robot_radius = 15;</code>
     */
    public boolean hasMaxRobotRadius() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
     * </pre>
     *
     * <code>optional float max_robot_radius = 15;</code>
     */
    public float getMaxRobotRadius() {
      return maxRobotRadius_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFieldWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoalWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoalDepth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoundaryWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldLinesCount(); i++) {
        if (!getFieldLines(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFieldArcsCount(); i++) {
        if (!getFieldArcs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldLength_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fieldWidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, goalWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, goalDepth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, boundaryWidth_);
      }
      for (int i = 0; i < fieldLines_.size(); i++) {
        output.writeMessage(6, fieldLines_.get(i));
      }
      for (int i = 0; i < fieldArcs_.size(); i++) {
        output.writeMessage(7, fieldArcs_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, penaltyAreaDepth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, penaltyAreaWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, centerCircleRadius_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, lineThickness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, goalCenterToPenaltyMark_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, goalHeight_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(14, ballRadius_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(15, maxRobotRadius_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldLength_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fieldWidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, goalWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, goalDepth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, boundaryWidth_);
      }
      for (int i = 0; i < fieldLines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fieldLines_.get(i));
      }
      for (int i = 0; i < fieldArcs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fieldArcs_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, penaltyAreaDepth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, penaltyAreaWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, centerCircleRadius_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, lineThickness_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, goalCenterToPenaltyMark_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, goalHeight_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, ballRadius_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, maxRobotRadius_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize other = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize) obj;

      boolean result = true;
      result = result && (hasFieldLength() == other.hasFieldLength());
      if (hasFieldLength()) {
        result = result && (getFieldLength()
            == other.getFieldLength());
      }
      result = result && (hasFieldWidth() == other.hasFieldWidth());
      if (hasFieldWidth()) {
        result = result && (getFieldWidth()
            == other.getFieldWidth());
      }
      result = result && (hasGoalWidth() == other.hasGoalWidth());
      if (hasGoalWidth()) {
        result = result && (getGoalWidth()
            == other.getGoalWidth());
      }
      result = result && (hasGoalDepth() == other.hasGoalDepth());
      if (hasGoalDepth()) {
        result = result && (getGoalDepth()
            == other.getGoalDepth());
      }
      result = result && (hasBoundaryWidth() == other.hasBoundaryWidth());
      if (hasBoundaryWidth()) {
        result = result && (getBoundaryWidth()
            == other.getBoundaryWidth());
      }
      result = result && getFieldLinesList()
          .equals(other.getFieldLinesList());
      result = result && getFieldArcsList()
          .equals(other.getFieldArcsList());
      result = result && (hasPenaltyAreaDepth() == other.hasPenaltyAreaDepth());
      if (hasPenaltyAreaDepth()) {
        result = result && (getPenaltyAreaDepth()
            == other.getPenaltyAreaDepth());
      }
      result = result && (hasPenaltyAreaWidth() == other.hasPenaltyAreaWidth());
      if (hasPenaltyAreaWidth()) {
        result = result && (getPenaltyAreaWidth()
            == other.getPenaltyAreaWidth());
      }
      result = result && (hasCenterCircleRadius() == other.hasCenterCircleRadius());
      if (hasCenterCircleRadius()) {
        result = result && (getCenterCircleRadius()
            == other.getCenterCircleRadius());
      }
      result = result && (hasLineThickness() == other.hasLineThickness());
      if (hasLineThickness()) {
        result = result && (getLineThickness()
            == other.getLineThickness());
      }
      result = result && (hasGoalCenterToPenaltyMark() == other.hasGoalCenterToPenaltyMark());
      if (hasGoalCenterToPenaltyMark()) {
        result = result && (getGoalCenterToPenaltyMark()
            == other.getGoalCenterToPenaltyMark());
      }
      result = result && (hasGoalHeight() == other.hasGoalHeight());
      if (hasGoalHeight()) {
        result = result && (getGoalHeight()
            == other.getGoalHeight());
      }
      result = result && (hasBallRadius() == other.hasBallRadius());
      if (hasBallRadius()) {
        result = result && (
            java.lang.Float.floatToIntBits(getBallRadius())
            == java.lang.Float.floatToIntBits(
                other.getBallRadius()));
      }
      result = result && (hasMaxRobotRadius() == other.hasMaxRobotRadius());
      if (hasMaxRobotRadius()) {
        result = result && (
            java.lang.Float.floatToIntBits(getMaxRobotRadius())
            == java.lang.Float.floatToIntBits(
                other.getMaxRobotRadius()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldLength()) {
        hash = (37 * hash) + FIELD_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getFieldLength();
      }
      if (hasFieldWidth()) {
        hash = (37 * hash) + FIELD_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getFieldWidth();
      }
      if (hasGoalWidth()) {
        hash = (37 * hash) + GOAL_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getGoalWidth();
      }
      if (hasGoalDepth()) {
        hash = (37 * hash) + GOAL_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getGoalDepth();
      }
      if (hasBoundaryWidth()) {
        hash = (37 * hash) + BOUNDARY_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getBoundaryWidth();
      }
      if (getFieldLinesCount() > 0) {
        hash = (37 * hash) + FIELD_LINES_FIELD_NUMBER;
        hash = (53 * hash) + getFieldLinesList().hashCode();
      }
      if (getFieldArcsCount() > 0) {
        hash = (37 * hash) + FIELD_ARCS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldArcsList().hashCode();
      }
      if (hasPenaltyAreaDepth()) {
        hash = (37 * hash) + PENALTY_AREA_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getPenaltyAreaDepth();
      }
      if (hasPenaltyAreaWidth()) {
        hash = (37 * hash) + PENALTY_AREA_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getPenaltyAreaWidth();
      }
      if (hasCenterCircleRadius()) {
        hash = (37 * hash) + CENTER_CIRCLE_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getCenterCircleRadius();
      }
      if (hasLineThickness()) {
        hash = (37 * hash) + LINE_THICKNESS_FIELD_NUMBER;
        hash = (53 * hash) + getLineThickness();
      }
      if (hasGoalCenterToPenaltyMark()) {
        hash = (37 * hash) + GOAL_CENTER_TO_PENALTY_MARK_FIELD_NUMBER;
        hash = (53 * hash) + getGoalCenterToPenaltyMark();
      }
      if (hasGoalHeight()) {
        hash = (37 * hash) + GOAL_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getGoalHeight();
      }
      if (hasBallRadius()) {
        hash = (37 * hash) + BALL_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBallRadius());
      }
      if (hasMaxRobotRadius()) {
        hash = (37 * hash) + MAX_ROBOT_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxRobotRadius());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.vision.SSL_GeometryFieldSize}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_GeometryFieldSize)
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryFieldSize_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryFieldSize_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldLinesFieldBuilder();
          getFieldArcsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fieldLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        goalWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        goalDepth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        boundaryWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (fieldLinesBuilder_ == null) {
          fieldLines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          fieldLinesBuilder_.clear();
        }
        if (fieldArcsBuilder_ == null) {
          fieldArcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldArcsBuilder_.clear();
        }
        penaltyAreaDepth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        penaltyAreaWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        centerCircleRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        lineThickness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        goalCenterToPenaltyMark_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        goalHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        ballRadius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        maxRobotRadius_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryFieldSize_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize result = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldLength_ = fieldLength_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fieldWidth_ = fieldWidth_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.goalWidth_ = goalWidth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.goalDepth_ = goalDepth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.boundaryWidth_ = boundaryWidth_;
        if (fieldLinesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            fieldLines_ = java.util.Collections.unmodifiableList(fieldLines_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.fieldLines_ = fieldLines_;
        } else {
          result.fieldLines_ = fieldLinesBuilder_.build();
        }
        if (fieldArcsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fieldArcs_ = java.util.Collections.unmodifiableList(fieldArcs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fieldArcs_ = fieldArcs_;
        } else {
          result.fieldArcs_ = fieldArcsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.penaltyAreaDepth_ = penaltyAreaDepth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.penaltyAreaWidth_ = penaltyAreaWidth_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.centerCircleRadius_ = centerCircleRadius_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lineThickness_ = lineThickness_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.goalCenterToPenaltyMark_ = goalCenterToPenaltyMark_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.goalHeight_ = goalHeight_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.ballRadius_ = ballRadius_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxRobotRadius_ = maxRobotRadius_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance()) return this;
        if (other.hasFieldLength()) {
          setFieldLength(other.getFieldLength());
        }
        if (other.hasFieldWidth()) {
          setFieldWidth(other.getFieldWidth());
        }
        if (other.hasGoalWidth()) {
          setGoalWidth(other.getGoalWidth());
        }
        if (other.hasGoalDepth()) {
          setGoalDepth(other.getGoalDepth());
        }
        if (other.hasBoundaryWidth()) {
          setBoundaryWidth(other.getBoundaryWidth());
        }
        if (fieldLinesBuilder_ == null) {
          if (!other.fieldLines_.isEmpty()) {
            if (fieldLines_.isEmpty()) {
              fieldLines_ = other.fieldLines_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFieldLinesIsMutable();
              fieldLines_.addAll(other.fieldLines_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldLines_.isEmpty()) {
            if (fieldLinesBuilder_.isEmpty()) {
              fieldLinesBuilder_.dispose();
              fieldLinesBuilder_ = null;
              fieldLines_ = other.fieldLines_;
              bitField0_ = (bitField0_ & ~0x00000020);
              fieldLinesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldLinesFieldBuilder() : null;
            } else {
              fieldLinesBuilder_.addAllMessages(other.fieldLines_);
            }
          }
        }
        if (fieldArcsBuilder_ == null) {
          if (!other.fieldArcs_.isEmpty()) {
            if (fieldArcs_.isEmpty()) {
              fieldArcs_ = other.fieldArcs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldArcsIsMutable();
              fieldArcs_.addAll(other.fieldArcs_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldArcs_.isEmpty()) {
            if (fieldArcsBuilder_.isEmpty()) {
              fieldArcsBuilder_.dispose();
              fieldArcsBuilder_ = null;
              fieldArcs_ = other.fieldArcs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldArcsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldArcsFieldBuilder() : null;
            } else {
              fieldArcsBuilder_.addAllMessages(other.fieldArcs_);
            }
          }
        }
        if (other.hasPenaltyAreaDepth()) {
          setPenaltyAreaDepth(other.getPenaltyAreaDepth());
        }
        if (other.hasPenaltyAreaWidth()) {
          setPenaltyAreaWidth(other.getPenaltyAreaWidth());
        }
        if (other.hasCenterCircleRadius()) {
          setCenterCircleRadius(other.getCenterCircleRadius());
        }
        if (other.hasLineThickness()) {
          setLineThickness(other.getLineThickness());
        }
        if (other.hasGoalCenterToPenaltyMark()) {
          setGoalCenterToPenaltyMark(other.getGoalCenterToPenaltyMark());
        }
        if (other.hasGoalHeight()) {
          setGoalHeight(other.getGoalHeight());
        }
        if (other.hasBallRadius()) {
          setBallRadius(other.getBallRadius());
        }
        if (other.hasMaxRobotRadius()) {
          setMaxRobotRadius(other.getMaxRobotRadius());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasFieldLength()) {
          return false;
        }
        if (!hasFieldWidth()) {
          return false;
        }
        if (!hasGoalWidth()) {
          return false;
        }
        if (!hasGoalDepth()) {
          return false;
        }
        if (!hasBoundaryWidth()) {
          return false;
        }
        for (int i = 0; i < getFieldLinesCount(); i++) {
          if (!getFieldLines(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getFieldArcsCount(); i++) {
          if (!getFieldArcs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldLength_ ;
      /**
       * <pre>
       * Field length (distance between goal lines) in mm
       * </pre>
       *
       * <code>required int32 field_length = 1;</code>
       */
      public boolean hasFieldLength() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Field length (distance between goal lines) in mm
       * </pre>
       *
       * <code>required int32 field_length = 1;</code>
       */
      public int getFieldLength() {
        return fieldLength_;
      }
      /**
       * <pre>
       * Field length (distance between goal lines) in mm
       * </pre>
       *
       * <code>required int32 field_length = 1;</code>
       */
      public Builder setFieldLength(int value) {
        bitField0_ |= 0x00000001;
        fieldLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Field length (distance between goal lines) in mm
       * </pre>
       *
       * <code>required int32 field_length = 1;</code>
       */
      public Builder clearFieldLength() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldLength_ = 0;
        onChanged();
        return this;
      }

      private int fieldWidth_ ;
      /**
       * <pre>
       * Field width (distance between touch lines) in mm
       * </pre>
       *
       * <code>required int32 field_width = 2;</code>
       */
      public boolean hasFieldWidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Field width (distance between touch lines) in mm
       * </pre>
       *
       * <code>required int32 field_width = 2;</code>
       */
      public int getFieldWidth() {
        return fieldWidth_;
      }
      /**
       * <pre>
       * Field width (distance between touch lines) in mm
       * </pre>
       *
       * <code>required int32 field_width = 2;</code>
       */
      public Builder setFieldWidth(int value) {
        bitField0_ |= 0x00000002;
        fieldWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Field width (distance between touch lines) in mm
       * </pre>
       *
       * <code>required int32 field_width = 2;</code>
       */
      public Builder clearFieldWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fieldWidth_ = 0;
        onChanged();
        return this;
      }

      private int goalWidth_ ;
      /**
       * <pre>
       * Goal width (distance between inner edges of goal posts) in mm
       * </pre>
       *
       * <code>required int32 goal_width = 3;</code>
       */
      public boolean hasGoalWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Goal width (distance between inner edges of goal posts) in mm
       * </pre>
       *
       * <code>required int32 goal_width = 3;</code>
       */
      public int getGoalWidth() {
        return goalWidth_;
      }
      /**
       * <pre>
       * Goal width (distance between inner edges of goal posts) in mm
       * </pre>
       *
       * <code>required int32 goal_width = 3;</code>
       */
      public Builder setGoalWidth(int value) {
        bitField0_ |= 0x00000004;
        goalWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Goal width (distance between inner edges of goal posts) in mm
       * </pre>
       *
       * <code>required int32 goal_width = 3;</code>
       */
      public Builder clearGoalWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        goalWidth_ = 0;
        onChanged();
        return this;
      }

      private int goalDepth_ ;
      /**
       * <pre>
       * Goal depth (distance from outer goal line edge to inner goal back) in mm
       * </pre>
       *
       * <code>required int32 goal_depth = 4;</code>
       */
      public boolean hasGoalDepth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Goal depth (distance from outer goal line edge to inner goal back) in mm
       * </pre>
       *
       * <code>required int32 goal_depth = 4;</code>
       */
      public int getGoalDepth() {
        return goalDepth_;
      }
      /**
       * <pre>
       * Goal depth (distance from outer goal line edge to inner goal back) in mm
       * </pre>
       *
       * <code>required int32 goal_depth = 4;</code>
       */
      public Builder setGoalDepth(int value) {
        bitField0_ |= 0x00000008;
        goalDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Goal depth (distance from outer goal line edge to inner goal back) in mm
       * </pre>
       *
       * <code>required int32 goal_depth = 4;</code>
       */
      public Builder clearGoalDepth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        goalDepth_ = 0;
        onChanged();
        return this;
      }

      private int boundaryWidth_ ;
      /**
       * <pre>
       * Boundary width (distance from touch/goal line centers to boundary walls) in mm
       * </pre>
       *
       * <code>required int32 boundary_width = 5;</code>
       */
      public boolean hasBoundaryWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Boundary width (distance from touch/goal line centers to boundary walls) in mm
       * </pre>
       *
       * <code>required int32 boundary_width = 5;</code>
       */
      public int getBoundaryWidth() {
        return boundaryWidth_;
      }
      /**
       * <pre>
       * Boundary width (distance from touch/goal line centers to boundary walls) in mm
       * </pre>
       *
       * <code>required int32 boundary_width = 5;</code>
       */
      public Builder setBoundaryWidth(int value) {
        bitField0_ |= 0x00000010;
        boundaryWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Boundary width (distance from touch/goal line centers to boundary walls) in mm
       * </pre>
       *
       * <code>required int32 boundary_width = 5;</code>
       */
      public Builder clearBoundaryWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        boundaryWidth_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> fieldLines_ =
        java.util.Collections.emptyList();
      private void ensureFieldLinesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          fieldLines_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment>(fieldLines_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder> fieldLinesBuilder_;

      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> getFieldLinesList() {
        if (fieldLinesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldLines_);
        } else {
          return fieldLinesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public int getFieldLinesCount() {
        if (fieldLinesBuilder_ == null) {
          return fieldLines_.size();
        } else {
          return fieldLinesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment getFieldLines(int index) {
        if (fieldLinesBuilder_ == null) {
          return fieldLines_.get(index);
        } else {
          return fieldLinesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder setFieldLines(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment value) {
        if (fieldLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldLinesIsMutable();
          fieldLines_.set(index, value);
          onChanged();
        } else {
          fieldLinesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder setFieldLines(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder builderForValue) {
        if (fieldLinesBuilder_ == null) {
          ensureFieldLinesIsMutable();
          fieldLines_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldLinesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder addFieldLines(proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment value) {
        if (fieldLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldLinesIsMutable();
          fieldLines_.add(value);
          onChanged();
        } else {
          fieldLinesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder addFieldLines(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment value) {
        if (fieldLinesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldLinesIsMutable();
          fieldLines_.add(index, value);
          onChanged();
        } else {
          fieldLinesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder addFieldLines(
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder builderForValue) {
        if (fieldLinesBuilder_ == null) {
          ensureFieldLinesIsMutable();
          fieldLines_.add(builderForValue.build());
          onChanged();
        } else {
          fieldLinesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder addFieldLines(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder builderForValue) {
        if (fieldLinesBuilder_ == null) {
          ensureFieldLinesIsMutable();
          fieldLines_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldLinesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder addAllFieldLines(
          java.lang.Iterable<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment> values) {
        if (fieldLinesBuilder_ == null) {
          ensureFieldLinesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldLines_);
          onChanged();
        } else {
          fieldLinesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder clearFieldLines() {
        if (fieldLinesBuilder_ == null) {
          fieldLines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          fieldLinesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public Builder removeFieldLines(int index) {
        if (fieldLinesBuilder_ == null) {
          ensureFieldLinesIsMutable();
          fieldLines_.remove(index);
          onChanged();
        } else {
          fieldLinesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder getFieldLinesBuilder(
          int index) {
        return getFieldLinesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder getFieldLinesOrBuilder(
          int index) {
        if (fieldLinesBuilder_ == null) {
          return fieldLines_.get(index);  } else {
          return fieldLinesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder> 
           getFieldLinesOrBuilderList() {
        if (fieldLinesBuilder_ != null) {
          return fieldLinesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldLines_);
        }
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder addFieldLinesBuilder() {
        return getFieldLinesFieldBuilder().addBuilder(
            proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.getDefaultInstance());
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder addFieldLinesBuilder(
          int index) {
        return getFieldLinesFieldBuilder().addBuilder(
            index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.getDefaultInstance());
      }
      /**
       * <pre>
       * Generated line segments based on the other parameters 
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldLineSegment field_lines = 6;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder> 
           getFieldLinesBuilderList() {
        return getFieldLinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder> 
          getFieldLinesFieldBuilder() {
        if (fieldLinesBuilder_ == null) {
          fieldLinesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegment.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldLineSegmentOrBuilder>(
                  fieldLines_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          fieldLines_ = null;
        }
        return fieldLinesBuilder_;
      }

      private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> fieldArcs_ =
        java.util.Collections.emptyList();
      private void ensureFieldArcsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fieldArcs_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc>(fieldArcs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder> fieldArcsBuilder_;

      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> getFieldArcsList() {
        if (fieldArcsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldArcs_);
        } else {
          return fieldArcsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public int getFieldArcsCount() {
        if (fieldArcsBuilder_ == null) {
          return fieldArcs_.size();
        } else {
          return fieldArcsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc getFieldArcs(int index) {
        if (fieldArcsBuilder_ == null) {
          return fieldArcs_.get(index);
        } else {
          return fieldArcsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder setFieldArcs(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc value) {
        if (fieldArcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldArcsIsMutable();
          fieldArcs_.set(index, value);
          onChanged();
        } else {
          fieldArcsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder setFieldArcs(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder builderForValue) {
        if (fieldArcsBuilder_ == null) {
          ensureFieldArcsIsMutable();
          fieldArcs_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldArcsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder addFieldArcs(proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc value) {
        if (fieldArcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldArcsIsMutable();
          fieldArcs_.add(value);
          onChanged();
        } else {
          fieldArcsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder addFieldArcs(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc value) {
        if (fieldArcsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldArcsIsMutable();
          fieldArcs_.add(index, value);
          onChanged();
        } else {
          fieldArcsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder addFieldArcs(
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder builderForValue) {
        if (fieldArcsBuilder_ == null) {
          ensureFieldArcsIsMutable();
          fieldArcs_.add(builderForValue.build());
          onChanged();
        } else {
          fieldArcsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder addFieldArcs(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder builderForValue) {
        if (fieldArcsBuilder_ == null) {
          ensureFieldArcsIsMutable();
          fieldArcs_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldArcsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder addAllFieldArcs(
          java.lang.Iterable<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc> values) {
        if (fieldArcsBuilder_ == null) {
          ensureFieldArcsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldArcs_);
          onChanged();
        } else {
          fieldArcsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder clearFieldArcs() {
        if (fieldArcsBuilder_ == null) {
          fieldArcs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldArcsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public Builder removeFieldArcs(int index) {
        if (fieldArcsBuilder_ == null) {
          ensureFieldArcsIsMutable();
          fieldArcs_.remove(index);
          onChanged();
        } else {
          fieldArcsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder getFieldArcsBuilder(
          int index) {
        return getFieldArcsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder getFieldArcsOrBuilder(
          int index) {
        if (fieldArcsBuilder_ == null) {
          return fieldArcs_.get(index);  } else {
          return fieldArcsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder> 
           getFieldArcsOrBuilderList() {
        if (fieldArcsBuilder_ != null) {
          return fieldArcsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldArcs_);
        }
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder addFieldArcsBuilder() {
        return getFieldArcsFieldBuilder().addBuilder(
            proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.getDefaultInstance());
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder addFieldArcsBuilder(
          int index) {
        return getFieldArcsFieldBuilder().addBuilder(
            index, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.getDefaultInstance());
      }
      /**
       * <pre>
       * Generated circular arcs based on the other parameters
       * </pre>
       *
       * <code>repeated .proto.vision.SSL_FieldCircularArc field_arcs = 7;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder> 
           getFieldArcsBuilderList() {
        return getFieldArcsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder> 
          getFieldArcsFieldBuilder() {
        if (fieldArcsBuilder_ == null) {
          fieldArcsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArc.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_FieldCircularArcOrBuilder>(
                  fieldArcs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fieldArcs_ = null;
        }
        return fieldArcsBuilder_;
      }

      private int penaltyAreaDepth_ ;
      /**
       * <pre>
       * Depth of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_depth = 8;</code>
       */
      public boolean hasPenaltyAreaDepth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Depth of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_depth = 8;</code>
       */
      public int getPenaltyAreaDepth() {
        return penaltyAreaDepth_;
      }
      /**
       * <pre>
       * Depth of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_depth = 8;</code>
       */
      public Builder setPenaltyAreaDepth(int value) {
        bitField0_ |= 0x00000080;
        penaltyAreaDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Depth of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_depth = 8;</code>
       */
      public Builder clearPenaltyAreaDepth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        penaltyAreaDepth_ = 0;
        onChanged();
        return this;
      }

      private int penaltyAreaWidth_ ;
      /**
       * <pre>
       * Width of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_width = 9;</code>
       */
      public boolean hasPenaltyAreaWidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Width of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_width = 9;</code>
       */
      public int getPenaltyAreaWidth() {
        return penaltyAreaWidth_;
      }
      /**
       * <pre>
       * Width of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_width = 9;</code>
       */
      public Builder setPenaltyAreaWidth(int value) {
        bitField0_ |= 0x00000100;
        penaltyAreaWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Width of the penalty/defense area (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 penalty_area_width = 9;</code>
       */
      public Builder clearPenaltyAreaWidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        penaltyAreaWidth_ = 0;
        onChanged();
        return this;
      }

      private int centerCircleRadius_ ;
      /**
       * <pre>
       * Radius of the center circle (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 center_circle_radius = 10;</code>
       */
      public boolean hasCenterCircleRadius() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Radius of the center circle (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 center_circle_radius = 10;</code>
       */
      public int getCenterCircleRadius() {
        return centerCircleRadius_;
      }
      /**
       * <pre>
       * Radius of the center circle (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 center_circle_radius = 10;</code>
       */
      public Builder setCenterCircleRadius(int value) {
        bitField0_ |= 0x00000200;
        centerCircleRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Radius of the center circle (measured between line centers) in mm
       * </pre>
       *
       * <code>optional int32 center_circle_radius = 10;</code>
       */
      public Builder clearCenterCircleRadius() {
        bitField0_ = (bitField0_ & ~0x00000200);
        centerCircleRadius_ = 0;
        onChanged();
        return this;
      }

      private int lineThickness_ ;
      /**
       * <pre>
       * Thickness/width of the lines on the field in mm
       * </pre>
       *
       * <code>optional int32 line_thickness = 11;</code>
       */
      public boolean hasLineThickness() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * Thickness/width of the lines on the field in mm
       * </pre>
       *
       * <code>optional int32 line_thickness = 11;</code>
       */
      public int getLineThickness() {
        return lineThickness_;
      }
      /**
       * <pre>
       * Thickness/width of the lines on the field in mm
       * </pre>
       *
       * <code>optional int32 line_thickness = 11;</code>
       */
      public Builder setLineThickness(int value) {
        bitField0_ |= 0x00000400;
        lineThickness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Thickness/width of the lines on the field in mm
       * </pre>
       *
       * <code>optional int32 line_thickness = 11;</code>
       */
      public Builder clearLineThickness() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lineThickness_ = 0;
        onChanged();
        return this;
      }

      private int goalCenterToPenaltyMark_ ;
      /**
       * <pre>
       * Distance between the goal center and the center of the penalty mark in mm 
       * </pre>
       *
       * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
       */
      public boolean hasGoalCenterToPenaltyMark() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * Distance between the goal center and the center of the penalty mark in mm 
       * </pre>
       *
       * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
       */
      public int getGoalCenterToPenaltyMark() {
        return goalCenterToPenaltyMark_;
      }
      /**
       * <pre>
       * Distance between the goal center and the center of the penalty mark in mm 
       * </pre>
       *
       * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
       */
      public Builder setGoalCenterToPenaltyMark(int value) {
        bitField0_ |= 0x00000800;
        goalCenterToPenaltyMark_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Distance between the goal center and the center of the penalty mark in mm 
       * </pre>
       *
       * <code>optional int32 goal_center_to_penalty_mark = 12;</code>
       */
      public Builder clearGoalCenterToPenaltyMark() {
        bitField0_ = (bitField0_ & ~0x00000800);
        goalCenterToPenaltyMark_ = 0;
        onChanged();
        return this;
      }

      private int goalHeight_ ;
      /**
       * <pre>
       * Goal height in mm
       * </pre>
       *
       * <code>optional int32 goal_height = 13;</code>
       */
      public boolean hasGoalHeight() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Goal height in mm
       * </pre>
       *
       * <code>optional int32 goal_height = 13;</code>
       */
      public int getGoalHeight() {
        return goalHeight_;
      }
      /**
       * <pre>
       * Goal height in mm
       * </pre>
       *
       * <code>optional int32 goal_height = 13;</code>
       */
      public Builder setGoalHeight(int value) {
        bitField0_ |= 0x00001000;
        goalHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Goal height in mm
       * </pre>
       *
       * <code>optional int32 goal_height = 13;</code>
       */
      public Builder clearGoalHeight() {
        bitField0_ = (bitField0_ & ~0x00001000);
        goalHeight_ = 0;
        onChanged();
        return this;
      }

      private float ballRadius_ ;
      /**
       * <pre>
       * Ball radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float ball_radius = 14;</code>
       */
      public boolean hasBallRadius() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * Ball radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float ball_radius = 14;</code>
       */
      public float getBallRadius() {
        return ballRadius_;
      }
      /**
       * <pre>
       * Ball radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float ball_radius = 14;</code>
       */
      public Builder setBallRadius(float value) {
        bitField0_ |= 0x00002000;
        ballRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ball radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float ball_radius = 14;</code>
       */
      public Builder clearBallRadius() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ballRadius_ = 0F;
        onChanged();
        return this;
      }

      private float maxRobotRadius_ ;
      /**
       * <pre>
       * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float max_robot_radius = 15;</code>
       */
      public boolean hasMaxRobotRadius() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float max_robot_radius = 15;</code>
       */
      public float getMaxRobotRadius() {
        return maxRobotRadius_;
      }
      /**
       * <pre>
       * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float max_robot_radius = 15;</code>
       */
      public Builder setMaxRobotRadius(float value) {
        bitField0_ |= 0x00004000;
        maxRobotRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max allowed robot radius in mm (note that this is a float type to represent sub-mm precision)
       * </pre>
       *
       * <code>optional float max_robot_radius = 15;</code>
       */
      public Builder clearMaxRobotRadius() {
        bitField0_ = (bitField0_ & ~0x00004000);
        maxRobotRadius_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_GeometryFieldSize)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_GeometryFieldSize)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryFieldSize>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryFieldSize>() {
      @java.lang.Override
      public SSL_GeometryFieldSize parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_GeometryFieldSize(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryFieldSize> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryFieldSize> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_GeometryCameraCalibrationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_GeometryCameraCalibration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 camera_id = 1;</code>
     */
    boolean hasCameraId();
    /**
     * <code>required uint32 camera_id = 1;</code>
     */
    int getCameraId();

    /**
     * <code>required float focal_length = 2;</code>
     */
    boolean hasFocalLength();
    /**
     * <code>required float focal_length = 2;</code>
     */
    float getFocalLength();

    /**
     * <code>required float principal_point_x = 3;</code>
     */
    boolean hasPrincipalPointX();
    /**
     * <code>required float principal_point_x = 3;</code>
     */
    float getPrincipalPointX();

    /**
     * <code>required float principal_point_y = 4;</code>
     */
    boolean hasPrincipalPointY();
    /**
     * <code>required float principal_point_y = 4;</code>
     */
    float getPrincipalPointY();

    /**
     * <code>required float distortion = 5;</code>
     */
    boolean hasDistortion();
    /**
     * <code>required float distortion = 5;</code>
     */
    float getDistortion();

    /**
     * <code>required float q0 = 6;</code>
     */
    boolean hasQ0();
    /**
     * <code>required float q0 = 6;</code>
     */
    float getQ0();

    /**
     * <code>required float q1 = 7;</code>
     */
    boolean hasQ1();
    /**
     * <code>required float q1 = 7;</code>
     */
    float getQ1();

    /**
     * <code>required float q2 = 8;</code>
     */
    boolean hasQ2();
    /**
     * <code>required float q2 = 8;</code>
     */
    float getQ2();

    /**
     * <code>required float q3 = 9;</code>
     */
    boolean hasQ3();
    /**
     * <code>required float q3 = 9;</code>
     */
    float getQ3();

    /**
     * <code>required float tx = 10;</code>
     */
    boolean hasTx();
    /**
     * <code>required float tx = 10;</code>
     */
    float getTx();

    /**
     * <code>required float ty = 11;</code>
     */
    boolean hasTy();
    /**
     * <code>required float ty = 11;</code>
     */
    float getTy();

    /**
     * <code>required float tz = 12;</code>
     */
    boolean hasTz();
    /**
     * <code>required float tz = 12;</code>
     */
    float getTz();

    /**
     * <code>optional float derived_camera_world_tx = 13;</code>
     */
    boolean hasDerivedCameraWorldTx();
    /**
     * <code>optional float derived_camera_world_tx = 13;</code>
     */
    float getDerivedCameraWorldTx();

    /**
     * <code>optional float derived_camera_world_ty = 14;</code>
     */
    boolean hasDerivedCameraWorldTy();
    /**
     * <code>optional float derived_camera_world_ty = 14;</code>
     */
    float getDerivedCameraWorldTy();

    /**
     * <code>optional float derived_camera_world_tz = 15;</code>
     */
    boolean hasDerivedCameraWorldTz();
    /**
     * <code>optional float derived_camera_world_tz = 15;</code>
     */
    float getDerivedCameraWorldTz();

    /**
     * <code>optional uint32 pixel_image_width = 16;</code>
     */
    boolean hasPixelImageWidth();
    /**
     * <code>optional uint32 pixel_image_width = 16;</code>
     */
    int getPixelImageWidth();

    /**
     * <code>optional uint32 pixel_image_height = 17;</code>
     */
    boolean hasPixelImageHeight();
    /**
     * <code>optional uint32 pixel_image_height = 17;</code>
     */
    int getPixelImageHeight();
  }
  /**
   * Protobuf type {@code proto.vision.SSL_GeometryCameraCalibration}
   */
  public  static final class SSL_GeometryCameraCalibration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_GeometryCameraCalibration)
      SSL_GeometryCameraCalibrationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_GeometryCameraCalibration.newBuilder() to construct.
    private SSL_GeometryCameraCalibration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryCameraCalibration() {
      cameraId_ = 0;
      focalLength_ = 0F;
      principalPointX_ = 0F;
      principalPointY_ = 0F;
      distortion_ = 0F;
      q0_ = 0F;
      q1_ = 0F;
      q2_ = 0F;
      q3_ = 0F;
      tx_ = 0F;
      ty_ = 0F;
      tz_ = 0F;
      derivedCameraWorldTx_ = 0F;
      derivedCameraWorldTy_ = 0F;
      derivedCameraWorldTz_ = 0F;
      pixelImageWidth_ = 0;
      pixelImageHeight_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryCameraCalibration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              cameraId_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              focalLength_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              principalPointX_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              principalPointY_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              distortion_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              q0_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              q1_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              q2_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              q3_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              tx_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              ty_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              tz_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              derivedCameraWorldTx_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              derivedCameraWorldTy_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              derivedCameraWorldTz_ = input.readFloat();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              pixelImageWidth_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              pixelImageHeight_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryCameraCalibration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder.class);
    }

    private int bitField0_;
    public static final int CAMERA_ID_FIELD_NUMBER = 1;
    private int cameraId_;
    /**
     * <code>required uint32 camera_id = 1;</code>
     */
    public boolean hasCameraId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 camera_id = 1;</code>
     */
    public int getCameraId() {
      return cameraId_;
    }

    public static final int FOCAL_LENGTH_FIELD_NUMBER = 2;
    private float focalLength_;
    /**
     * <code>required float focal_length = 2;</code>
     */
    public boolean hasFocalLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float focal_length = 2;</code>
     */
    public float getFocalLength() {
      return focalLength_;
    }

    public static final int PRINCIPAL_POINT_X_FIELD_NUMBER = 3;
    private float principalPointX_;
    /**
     * <code>required float principal_point_x = 3;</code>
     */
    public boolean hasPrincipalPointX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float principal_point_x = 3;</code>
     */
    public float getPrincipalPointX() {
      return principalPointX_;
    }

    public static final int PRINCIPAL_POINT_Y_FIELD_NUMBER = 4;
    private float principalPointY_;
    /**
     * <code>required float principal_point_y = 4;</code>
     */
    public boolean hasPrincipalPointY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float principal_point_y = 4;</code>
     */
    public float getPrincipalPointY() {
      return principalPointY_;
    }

    public static final int DISTORTION_FIELD_NUMBER = 5;
    private float distortion_;
    /**
     * <code>required float distortion = 5;</code>
     */
    public boolean hasDistortion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float distortion = 5;</code>
     */
    public float getDistortion() {
      return distortion_;
    }

    public static final int Q0_FIELD_NUMBER = 6;
    private float q0_;
    /**
     * <code>required float q0 = 6;</code>
     */
    public boolean hasQ0() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float q0 = 6;</code>
     */
    public float getQ0() {
      return q0_;
    }

    public static final int Q1_FIELD_NUMBER = 7;
    private float q1_;
    /**
     * <code>required float q1 = 7;</code>
     */
    public boolean hasQ1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float q1 = 7;</code>
     */
    public float getQ1() {
      return q1_;
    }

    public static final int Q2_FIELD_NUMBER = 8;
    private float q2_;
    /**
     * <code>required float q2 = 8;</code>
     */
    public boolean hasQ2() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float q2 = 8;</code>
     */
    public float getQ2() {
      return q2_;
    }

    public static final int Q3_FIELD_NUMBER = 9;
    private float q3_;
    /**
     * <code>required float q3 = 9;</code>
     */
    public boolean hasQ3() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float q3 = 9;</code>
     */
    public float getQ3() {
      return q3_;
    }

    public static final int TX_FIELD_NUMBER = 10;
    private float tx_;
    /**
     * <code>required float tx = 10;</code>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required float tx = 10;</code>
     */
    public float getTx() {
      return tx_;
    }

    public static final int TY_FIELD_NUMBER = 11;
    private float ty_;
    /**
     * <code>required float ty = 11;</code>
     */
    public boolean hasTy() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required float ty = 11;</code>
     */
    public float getTy() {
      return ty_;
    }

    public static final int TZ_FIELD_NUMBER = 12;
    private float tz_;
    /**
     * <code>required float tz = 12;</code>
     */
    public boolean hasTz() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required float tz = 12;</code>
     */
    public float getTz() {
      return tz_;
    }

    public static final int DERIVED_CAMERA_WORLD_TX_FIELD_NUMBER = 13;
    private float derivedCameraWorldTx_;
    /**
     * <code>optional float derived_camera_world_tx = 13;</code>
     */
    public boolean hasDerivedCameraWorldTx() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float derived_camera_world_tx = 13;</code>
     */
    public float getDerivedCameraWorldTx() {
      return derivedCameraWorldTx_;
    }

    public static final int DERIVED_CAMERA_WORLD_TY_FIELD_NUMBER = 14;
    private float derivedCameraWorldTy_;
    /**
     * <code>optional float derived_camera_world_ty = 14;</code>
     */
    public boolean hasDerivedCameraWorldTy() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float derived_camera_world_ty = 14;</code>
     */
    public float getDerivedCameraWorldTy() {
      return derivedCameraWorldTy_;
    }

    public static final int DERIVED_CAMERA_WORLD_TZ_FIELD_NUMBER = 15;
    private float derivedCameraWorldTz_;
    /**
     * <code>optional float derived_camera_world_tz = 15;</code>
     */
    public boolean hasDerivedCameraWorldTz() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float derived_camera_world_tz = 15;</code>
     */
    public float getDerivedCameraWorldTz() {
      return derivedCameraWorldTz_;
    }

    public static final int PIXEL_IMAGE_WIDTH_FIELD_NUMBER = 16;
    private int pixelImageWidth_;
    /**
     * <code>optional uint32 pixel_image_width = 16;</code>
     */
    public boolean hasPixelImageWidth() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 pixel_image_width = 16;</code>
     */
    public int getPixelImageWidth() {
      return pixelImageWidth_;
    }

    public static final int PIXEL_IMAGE_HEIGHT_FIELD_NUMBER = 17;
    private int pixelImageHeight_;
    /**
     * <code>optional uint32 pixel_image_height = 17;</code>
     */
    public boolean hasPixelImageHeight() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 pixel_image_height = 17;</code>
     */
    public int getPixelImageHeight() {
      return pixelImageHeight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCameraId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFocalLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrincipalPointX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrincipalPointY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistortion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ0()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTz()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cameraId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, focalLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, principalPointX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, principalPointY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, distortion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, q0_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, q1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, q2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, q3_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, tx_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, ty_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, tz_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, derivedCameraWorldTx_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, derivedCameraWorldTy_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, derivedCameraWorldTz_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(16, pixelImageWidth_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, pixelImageHeight_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cameraId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, focalLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, principalPointX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, principalPointY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, distortion_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, q0_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, q1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, q2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, q3_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, tx_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, ty_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, tz_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, derivedCameraWorldTx_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, derivedCameraWorldTy_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, derivedCameraWorldTz_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, pixelImageWidth_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, pixelImageHeight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration other = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration) obj;

      boolean result = true;
      result = result && (hasCameraId() == other.hasCameraId());
      if (hasCameraId()) {
        result = result && (getCameraId()
            == other.getCameraId());
      }
      result = result && (hasFocalLength() == other.hasFocalLength());
      if (hasFocalLength()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFocalLength())
            == java.lang.Float.floatToIntBits(
                other.getFocalLength()));
      }
      result = result && (hasPrincipalPointX() == other.hasPrincipalPointX());
      if (hasPrincipalPointX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getPrincipalPointX())
            == java.lang.Float.floatToIntBits(
                other.getPrincipalPointX()));
      }
      result = result && (hasPrincipalPointY() == other.hasPrincipalPointY());
      if (hasPrincipalPointY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getPrincipalPointY())
            == java.lang.Float.floatToIntBits(
                other.getPrincipalPointY()));
      }
      result = result && (hasDistortion() == other.hasDistortion());
      if (hasDistortion()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDistortion())
            == java.lang.Float.floatToIntBits(
                other.getDistortion()));
      }
      result = result && (hasQ0() == other.hasQ0());
      if (hasQ0()) {
        result = result && (
            java.lang.Float.floatToIntBits(getQ0())
            == java.lang.Float.floatToIntBits(
                other.getQ0()));
      }
      result = result && (hasQ1() == other.hasQ1());
      if (hasQ1()) {
        result = result && (
            java.lang.Float.floatToIntBits(getQ1())
            == java.lang.Float.floatToIntBits(
                other.getQ1()));
      }
      result = result && (hasQ2() == other.hasQ2());
      if (hasQ2()) {
        result = result && (
            java.lang.Float.floatToIntBits(getQ2())
            == java.lang.Float.floatToIntBits(
                other.getQ2()));
      }
      result = result && (hasQ3() == other.hasQ3());
      if (hasQ3()) {
        result = result && (
            java.lang.Float.floatToIntBits(getQ3())
            == java.lang.Float.floatToIntBits(
                other.getQ3()));
      }
      result = result && (hasTx() == other.hasTx());
      if (hasTx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTx())
            == java.lang.Float.floatToIntBits(
                other.getTx()));
      }
      result = result && (hasTy() == other.hasTy());
      if (hasTy()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTy())
            == java.lang.Float.floatToIntBits(
                other.getTy()));
      }
      result = result && (hasTz() == other.hasTz());
      if (hasTz()) {
        result = result && (
            java.lang.Float.floatToIntBits(getTz())
            == java.lang.Float.floatToIntBits(
                other.getTz()));
      }
      result = result && (hasDerivedCameraWorldTx() == other.hasDerivedCameraWorldTx());
      if (hasDerivedCameraWorldTx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDerivedCameraWorldTx())
            == java.lang.Float.floatToIntBits(
                other.getDerivedCameraWorldTx()));
      }
      result = result && (hasDerivedCameraWorldTy() == other.hasDerivedCameraWorldTy());
      if (hasDerivedCameraWorldTy()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDerivedCameraWorldTy())
            == java.lang.Float.floatToIntBits(
                other.getDerivedCameraWorldTy()));
      }
      result = result && (hasDerivedCameraWorldTz() == other.hasDerivedCameraWorldTz());
      if (hasDerivedCameraWorldTz()) {
        result = result && (
            java.lang.Float.floatToIntBits(getDerivedCameraWorldTz())
            == java.lang.Float.floatToIntBits(
                other.getDerivedCameraWorldTz()));
      }
      result = result && (hasPixelImageWidth() == other.hasPixelImageWidth());
      if (hasPixelImageWidth()) {
        result = result && (getPixelImageWidth()
            == other.getPixelImageWidth());
      }
      result = result && (hasPixelImageHeight() == other.hasPixelImageHeight());
      if (hasPixelImageHeight()) {
        result = result && (getPixelImageHeight()
            == other.getPixelImageHeight());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCameraId()) {
        hash = (37 * hash) + CAMERA_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCameraId();
      }
      if (hasFocalLength()) {
        hash = (37 * hash) + FOCAL_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFocalLength());
      }
      if (hasPrincipalPointX()) {
        hash = (37 * hash) + PRINCIPAL_POINT_X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPrincipalPointX());
      }
      if (hasPrincipalPointY()) {
        hash = (37 * hash) + PRINCIPAL_POINT_Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPrincipalPointY());
      }
      if (hasDistortion()) {
        hash = (37 * hash) + DISTORTION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDistortion());
      }
      if (hasQ0()) {
        hash = (37 * hash) + Q0_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getQ0());
      }
      if (hasQ1()) {
        hash = (37 * hash) + Q1_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getQ1());
      }
      if (hasQ2()) {
        hash = (37 * hash) + Q2_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getQ2());
      }
      if (hasQ3()) {
        hash = (37 * hash) + Q3_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getQ3());
      }
      if (hasTx()) {
        hash = (37 * hash) + TX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTx());
      }
      if (hasTy()) {
        hash = (37 * hash) + TY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTy());
      }
      if (hasTz()) {
        hash = (37 * hash) + TZ_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTz());
      }
      if (hasDerivedCameraWorldTx()) {
        hash = (37 * hash) + DERIVED_CAMERA_WORLD_TX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDerivedCameraWorldTx());
      }
      if (hasDerivedCameraWorldTy()) {
        hash = (37 * hash) + DERIVED_CAMERA_WORLD_TY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDerivedCameraWorldTy());
      }
      if (hasDerivedCameraWorldTz()) {
        hash = (37 * hash) + DERIVED_CAMERA_WORLD_TZ_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDerivedCameraWorldTz());
      }
      if (hasPixelImageWidth()) {
        hash = (37 * hash) + PIXEL_IMAGE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getPixelImageWidth();
      }
      if (hasPixelImageHeight()) {
        hash = (37 * hash) + PIXEL_IMAGE_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getPixelImageHeight();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.vision.SSL_GeometryCameraCalibration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_GeometryCameraCalibration)
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryCameraCalibration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cameraId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        focalLength_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        principalPointX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        principalPointY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        distortion_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        q0_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        q1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        q2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        q3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        tx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        ty_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        tz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        derivedCameraWorldTx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        derivedCameraWorldTy_ = 0F;
        bitField0_ = (bitField0_ & ~0x00002000);
        derivedCameraWorldTz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        pixelImageWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        pixelImageHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration result = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cameraId_ = cameraId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.focalLength_ = focalLength_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.principalPointX_ = principalPointX_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.principalPointY_ = principalPointY_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.distortion_ = distortion_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.q0_ = q0_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.q1_ = q1_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.q2_ = q2_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.q3_ = q3_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tx_ = tx_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.ty_ = ty_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tz_ = tz_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.derivedCameraWorldTx_ = derivedCameraWorldTx_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.derivedCameraWorldTy_ = derivedCameraWorldTy_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.derivedCameraWorldTz_ = derivedCameraWorldTz_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.pixelImageWidth_ = pixelImageWidth_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.pixelImageHeight_ = pixelImageHeight_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance()) return this;
        if (other.hasCameraId()) {
          setCameraId(other.getCameraId());
        }
        if (other.hasFocalLength()) {
          setFocalLength(other.getFocalLength());
        }
        if (other.hasPrincipalPointX()) {
          setPrincipalPointX(other.getPrincipalPointX());
        }
        if (other.hasPrincipalPointY()) {
          setPrincipalPointY(other.getPrincipalPointY());
        }
        if (other.hasDistortion()) {
          setDistortion(other.getDistortion());
        }
        if (other.hasQ0()) {
          setQ0(other.getQ0());
        }
        if (other.hasQ1()) {
          setQ1(other.getQ1());
        }
        if (other.hasQ2()) {
          setQ2(other.getQ2());
        }
        if (other.hasQ3()) {
          setQ3(other.getQ3());
        }
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        if (other.hasTy()) {
          setTy(other.getTy());
        }
        if (other.hasTz()) {
          setTz(other.getTz());
        }
        if (other.hasDerivedCameraWorldTx()) {
          setDerivedCameraWorldTx(other.getDerivedCameraWorldTx());
        }
        if (other.hasDerivedCameraWorldTy()) {
          setDerivedCameraWorldTy(other.getDerivedCameraWorldTy());
        }
        if (other.hasDerivedCameraWorldTz()) {
          setDerivedCameraWorldTz(other.getDerivedCameraWorldTz());
        }
        if (other.hasPixelImageWidth()) {
          setPixelImageWidth(other.getPixelImageWidth());
        }
        if (other.hasPixelImageHeight()) {
          setPixelImageHeight(other.getPixelImageHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCameraId()) {
          return false;
        }
        if (!hasFocalLength()) {
          return false;
        }
        if (!hasPrincipalPointX()) {
          return false;
        }
        if (!hasPrincipalPointY()) {
          return false;
        }
        if (!hasDistortion()) {
          return false;
        }
        if (!hasQ0()) {
          return false;
        }
        if (!hasQ1()) {
          return false;
        }
        if (!hasQ2()) {
          return false;
        }
        if (!hasQ3()) {
          return false;
        }
        if (!hasTx()) {
          return false;
        }
        if (!hasTy()) {
          return false;
        }
        if (!hasTz()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int cameraId_ ;
      /**
       * <code>required uint32 camera_id = 1;</code>
       */
      public boolean hasCameraId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 camera_id = 1;</code>
       */
      public int getCameraId() {
        return cameraId_;
      }
      /**
       * <code>required uint32 camera_id = 1;</code>
       */
      public Builder setCameraId(int value) {
        bitField0_ |= 0x00000001;
        cameraId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 camera_id = 1;</code>
       */
      public Builder clearCameraId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cameraId_ = 0;
        onChanged();
        return this;
      }

      private float focalLength_ ;
      /**
       * <code>required float focal_length = 2;</code>
       */
      public boolean hasFocalLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float focal_length = 2;</code>
       */
      public float getFocalLength() {
        return focalLength_;
      }
      /**
       * <code>required float focal_length = 2;</code>
       */
      public Builder setFocalLength(float value) {
        bitField0_ |= 0x00000002;
        focalLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float focal_length = 2;</code>
       */
      public Builder clearFocalLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        focalLength_ = 0F;
        onChanged();
        return this;
      }

      private float principalPointX_ ;
      /**
       * <code>required float principal_point_x = 3;</code>
       */
      public boolean hasPrincipalPointX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float principal_point_x = 3;</code>
       */
      public float getPrincipalPointX() {
        return principalPointX_;
      }
      /**
       * <code>required float principal_point_x = 3;</code>
       */
      public Builder setPrincipalPointX(float value) {
        bitField0_ |= 0x00000004;
        principalPointX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float principal_point_x = 3;</code>
       */
      public Builder clearPrincipalPointX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        principalPointX_ = 0F;
        onChanged();
        return this;
      }

      private float principalPointY_ ;
      /**
       * <code>required float principal_point_y = 4;</code>
       */
      public boolean hasPrincipalPointY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float principal_point_y = 4;</code>
       */
      public float getPrincipalPointY() {
        return principalPointY_;
      }
      /**
       * <code>required float principal_point_y = 4;</code>
       */
      public Builder setPrincipalPointY(float value) {
        bitField0_ |= 0x00000008;
        principalPointY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float principal_point_y = 4;</code>
       */
      public Builder clearPrincipalPointY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        principalPointY_ = 0F;
        onChanged();
        return this;
      }

      private float distortion_ ;
      /**
       * <code>required float distortion = 5;</code>
       */
      public boolean hasDistortion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float distortion = 5;</code>
       */
      public float getDistortion() {
        return distortion_;
      }
      /**
       * <code>required float distortion = 5;</code>
       */
      public Builder setDistortion(float value) {
        bitField0_ |= 0x00000010;
        distortion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float distortion = 5;</code>
       */
      public Builder clearDistortion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        distortion_ = 0F;
        onChanged();
        return this;
      }

      private float q0_ ;
      /**
       * <code>required float q0 = 6;</code>
       */
      public boolean hasQ0() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float q0 = 6;</code>
       */
      public float getQ0() {
        return q0_;
      }
      /**
       * <code>required float q0 = 6;</code>
       */
      public Builder setQ0(float value) {
        bitField0_ |= 0x00000020;
        q0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float q0 = 6;</code>
       */
      public Builder clearQ0() {
        bitField0_ = (bitField0_ & ~0x00000020);
        q0_ = 0F;
        onChanged();
        return this;
      }

      private float q1_ ;
      /**
       * <code>required float q1 = 7;</code>
       */
      public boolean hasQ1() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float q1 = 7;</code>
       */
      public float getQ1() {
        return q1_;
      }
      /**
       * <code>required float q1 = 7;</code>
       */
      public Builder setQ1(float value) {
        bitField0_ |= 0x00000040;
        q1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float q1 = 7;</code>
       */
      public Builder clearQ1() {
        bitField0_ = (bitField0_ & ~0x00000040);
        q1_ = 0F;
        onChanged();
        return this;
      }

      private float q2_ ;
      /**
       * <code>required float q2 = 8;</code>
       */
      public boolean hasQ2() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float q2 = 8;</code>
       */
      public float getQ2() {
        return q2_;
      }
      /**
       * <code>required float q2 = 8;</code>
       */
      public Builder setQ2(float value) {
        bitField0_ |= 0x00000080;
        q2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float q2 = 8;</code>
       */
      public Builder clearQ2() {
        bitField0_ = (bitField0_ & ~0x00000080);
        q2_ = 0F;
        onChanged();
        return this;
      }

      private float q3_ ;
      /**
       * <code>required float q3 = 9;</code>
       */
      public boolean hasQ3() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float q3 = 9;</code>
       */
      public float getQ3() {
        return q3_;
      }
      /**
       * <code>required float q3 = 9;</code>
       */
      public Builder setQ3(float value) {
        bitField0_ |= 0x00000100;
        q3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float q3 = 9;</code>
       */
      public Builder clearQ3() {
        bitField0_ = (bitField0_ & ~0x00000100);
        q3_ = 0F;
        onChanged();
        return this;
      }

      private float tx_ ;
      /**
       * <code>required float tx = 10;</code>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required float tx = 10;</code>
       */
      public float getTx() {
        return tx_;
      }
      /**
       * <code>required float tx = 10;</code>
       */
      public Builder setTx(float value) {
        bitField0_ |= 0x00000200;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float tx = 10;</code>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tx_ = 0F;
        onChanged();
        return this;
      }

      private float ty_ ;
      /**
       * <code>required float ty = 11;</code>
       */
      public boolean hasTy() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required float ty = 11;</code>
       */
      public float getTy() {
        return ty_;
      }
      /**
       * <code>required float ty = 11;</code>
       */
      public Builder setTy(float value) {
        bitField0_ |= 0x00000400;
        ty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float ty = 11;</code>
       */
      public Builder clearTy() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ty_ = 0F;
        onChanged();
        return this;
      }

      private float tz_ ;
      /**
       * <code>required float tz = 12;</code>
       */
      public boolean hasTz() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required float tz = 12;</code>
       */
      public float getTz() {
        return tz_;
      }
      /**
       * <code>required float tz = 12;</code>
       */
      public Builder setTz(float value) {
        bitField0_ |= 0x00000800;
        tz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float tz = 12;</code>
       */
      public Builder clearTz() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tz_ = 0F;
        onChanged();
        return this;
      }

      private float derivedCameraWorldTx_ ;
      /**
       * <code>optional float derived_camera_world_tx = 13;</code>
       */
      public boolean hasDerivedCameraWorldTx() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float derived_camera_world_tx = 13;</code>
       */
      public float getDerivedCameraWorldTx() {
        return derivedCameraWorldTx_;
      }
      /**
       * <code>optional float derived_camera_world_tx = 13;</code>
       */
      public Builder setDerivedCameraWorldTx(float value) {
        bitField0_ |= 0x00001000;
        derivedCameraWorldTx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float derived_camera_world_tx = 13;</code>
       */
      public Builder clearDerivedCameraWorldTx() {
        bitField0_ = (bitField0_ & ~0x00001000);
        derivedCameraWorldTx_ = 0F;
        onChanged();
        return this;
      }

      private float derivedCameraWorldTy_ ;
      /**
       * <code>optional float derived_camera_world_ty = 14;</code>
       */
      public boolean hasDerivedCameraWorldTy() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float derived_camera_world_ty = 14;</code>
       */
      public float getDerivedCameraWorldTy() {
        return derivedCameraWorldTy_;
      }
      /**
       * <code>optional float derived_camera_world_ty = 14;</code>
       */
      public Builder setDerivedCameraWorldTy(float value) {
        bitField0_ |= 0x00002000;
        derivedCameraWorldTy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float derived_camera_world_ty = 14;</code>
       */
      public Builder clearDerivedCameraWorldTy() {
        bitField0_ = (bitField0_ & ~0x00002000);
        derivedCameraWorldTy_ = 0F;
        onChanged();
        return this;
      }

      private float derivedCameraWorldTz_ ;
      /**
       * <code>optional float derived_camera_world_tz = 15;</code>
       */
      public boolean hasDerivedCameraWorldTz() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float derived_camera_world_tz = 15;</code>
       */
      public float getDerivedCameraWorldTz() {
        return derivedCameraWorldTz_;
      }
      /**
       * <code>optional float derived_camera_world_tz = 15;</code>
       */
      public Builder setDerivedCameraWorldTz(float value) {
        bitField0_ |= 0x00004000;
        derivedCameraWorldTz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float derived_camera_world_tz = 15;</code>
       */
      public Builder clearDerivedCameraWorldTz() {
        bitField0_ = (bitField0_ & ~0x00004000);
        derivedCameraWorldTz_ = 0F;
        onChanged();
        return this;
      }

      private int pixelImageWidth_ ;
      /**
       * <code>optional uint32 pixel_image_width = 16;</code>
       */
      public boolean hasPixelImageWidth() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 pixel_image_width = 16;</code>
       */
      public int getPixelImageWidth() {
        return pixelImageWidth_;
      }
      /**
       * <code>optional uint32 pixel_image_width = 16;</code>
       */
      public Builder setPixelImageWidth(int value) {
        bitField0_ |= 0x00008000;
        pixelImageWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pixel_image_width = 16;</code>
       */
      public Builder clearPixelImageWidth() {
        bitField0_ = (bitField0_ & ~0x00008000);
        pixelImageWidth_ = 0;
        onChanged();
        return this;
      }

      private int pixelImageHeight_ ;
      /**
       * <code>optional uint32 pixel_image_height = 17;</code>
       */
      public boolean hasPixelImageHeight() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 pixel_image_height = 17;</code>
       */
      public int getPixelImageHeight() {
        return pixelImageHeight_;
      }
      /**
       * <code>optional uint32 pixel_image_height = 17;</code>
       */
      public Builder setPixelImageHeight(int value) {
        bitField0_ |= 0x00010000;
        pixelImageHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pixel_image_height = 17;</code>
       */
      public Builder clearPixelImageHeight() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pixelImageHeight_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_GeometryCameraCalibration)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_GeometryCameraCalibration)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryCameraCalibration>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryCameraCalibration>() {
      @java.lang.Override
      public SSL_GeometryCameraCalibration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_GeometryCameraCalibration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryCameraCalibration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryCameraCalibration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_BallModelStraightTwoPhaseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_BallModelStraightTwoPhase)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Ball sliding acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_slide = 1;</code>
     */
    boolean hasAccSlide();
    /**
     * <pre>
     * Ball sliding acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_slide = 1;</code>
     */
    double getAccSlide();

    /**
     * <pre>
     * Ball rolling acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_roll = 2;</code>
     */
    boolean hasAccRoll();
    /**
     * <pre>
     * Ball rolling acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_roll = 2;</code>
     */
    double getAccRoll();

    /**
     * <pre>
     * Fraction of the initial velocity where the ball starts to roll
     * </pre>
     *
     * <code>required double k_switch = 3;</code>
     */
    boolean hasKSwitch();
    /**
     * <pre>
     * Fraction of the initial velocity where the ball starts to roll
     * </pre>
     *
     * <code>required double k_switch = 3;</code>
     */
    double getKSwitch();
  }
  /**
   * <pre>
   * Two-Phase model for straight-kicked balls.
   * There are two phases with different accelerations during the ball kicks:
   * 1. Sliding
   * 2. Rolling
   * The full model is described in the TDP of ER-Force from 2016, which can be found here:
   * https://ssl.robocup.org/wp-content/uploads/2019/01/2016_ETDP_ER-Force.pdf
   * </pre>
   *
   * Protobuf type {@code proto.vision.SSL_BallModelStraightTwoPhase}
   */
  public  static final class SSL_BallModelStraightTwoPhase extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_BallModelStraightTwoPhase)
      SSL_BallModelStraightTwoPhaseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_BallModelStraightTwoPhase.newBuilder() to construct.
    private SSL_BallModelStraightTwoPhase(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_BallModelStraightTwoPhase() {
      accSlide_ = 0D;
      accRoll_ = 0D;
      kSwitch_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_BallModelStraightTwoPhase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              accSlide_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              accRoll_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              kSwitch_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelStraightTwoPhase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.class, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder.class);
    }

    private int bitField0_;
    public static final int ACC_SLIDE_FIELD_NUMBER = 1;
    private double accSlide_;
    /**
     * <pre>
     * Ball sliding acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_slide = 1;</code>
     */
    public boolean hasAccSlide() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Ball sliding acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_slide = 1;</code>
     */
    public double getAccSlide() {
      return accSlide_;
    }

    public static final int ACC_ROLL_FIELD_NUMBER = 2;
    private double accRoll_;
    /**
     * <pre>
     * Ball rolling acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_roll = 2;</code>
     */
    public boolean hasAccRoll() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Ball rolling acceleration [m/s^2] (should be negative)
     * </pre>
     *
     * <code>required double acc_roll = 2;</code>
     */
    public double getAccRoll() {
      return accRoll_;
    }

    public static final int K_SWITCH_FIELD_NUMBER = 3;
    private double kSwitch_;
    /**
     * <pre>
     * Fraction of the initial velocity where the ball starts to roll
     * </pre>
     *
     * <code>required double k_switch = 3;</code>
     */
    public boolean hasKSwitch() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Fraction of the initial velocity where the ball starts to roll
     * </pre>
     *
     * <code>required double k_switch = 3;</code>
     */
    public double getKSwitch() {
      return kSwitch_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAccSlide()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccRoll()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKSwitch()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, accSlide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, accRoll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, kSwitch_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, accSlide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, accRoll_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, kSwitch_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase other = (proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase) obj;

      boolean result = true;
      result = result && (hasAccSlide() == other.hasAccSlide());
      if (hasAccSlide()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAccSlide())
            == java.lang.Double.doubleToLongBits(
                other.getAccSlide()));
      }
      result = result && (hasAccRoll() == other.hasAccRoll());
      if (hasAccRoll()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAccRoll())
            == java.lang.Double.doubleToLongBits(
                other.getAccRoll()));
      }
      result = result && (hasKSwitch() == other.hasKSwitch());
      if (hasKSwitch()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getKSwitch())
            == java.lang.Double.doubleToLongBits(
                other.getKSwitch()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccSlide()) {
        hash = (37 * hash) + ACC_SLIDE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAccSlide()));
      }
      if (hasAccRoll()) {
        hash = (37 * hash) + ACC_ROLL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAccRoll()));
      }
      if (hasKSwitch()) {
        hash = (37 * hash) + K_SWITCH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getKSwitch()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Two-Phase model for straight-kicked balls.
     * There are two phases with different accelerations during the ball kicks:
     * 1. Sliding
     * 2. Rolling
     * The full model is described in the TDP of ER-Force from 2016, which can be found here:
     * https://ssl.robocup.org/wp-content/uploads/2019/01/2016_ETDP_ER-Force.pdf
     * </pre>
     *
     * Protobuf type {@code proto.vision.SSL_BallModelStraightTwoPhase}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_BallModelStraightTwoPhase)
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelStraightTwoPhase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.class, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        accSlide_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        accRoll_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        kSwitch_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase result = new proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accSlide_ = accSlide_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accRoll_ = accRoll_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kSwitch_ = kSwitch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance()) return this;
        if (other.hasAccSlide()) {
          setAccSlide(other.getAccSlide());
        }
        if (other.hasAccRoll()) {
          setAccRoll(other.getAccRoll());
        }
        if (other.hasKSwitch()) {
          setKSwitch(other.getKSwitch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasAccSlide()) {
          return false;
        }
        if (!hasAccRoll()) {
          return false;
        }
        if (!hasKSwitch()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double accSlide_ ;
      /**
       * <pre>
       * Ball sliding acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_slide = 1;</code>
       */
      public boolean hasAccSlide() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Ball sliding acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_slide = 1;</code>
       */
      public double getAccSlide() {
        return accSlide_;
      }
      /**
       * <pre>
       * Ball sliding acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_slide = 1;</code>
       */
      public Builder setAccSlide(double value) {
        bitField0_ |= 0x00000001;
        accSlide_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ball sliding acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_slide = 1;</code>
       */
      public Builder clearAccSlide() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accSlide_ = 0D;
        onChanged();
        return this;
      }

      private double accRoll_ ;
      /**
       * <pre>
       * Ball rolling acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_roll = 2;</code>
       */
      public boolean hasAccRoll() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Ball rolling acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_roll = 2;</code>
       */
      public double getAccRoll() {
        return accRoll_;
      }
      /**
       * <pre>
       * Ball rolling acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_roll = 2;</code>
       */
      public Builder setAccRoll(double value) {
        bitField0_ |= 0x00000002;
        accRoll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ball rolling acceleration [m/s^2] (should be negative)
       * </pre>
       *
       * <code>required double acc_roll = 2;</code>
       */
      public Builder clearAccRoll() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accRoll_ = 0D;
        onChanged();
        return this;
      }

      private double kSwitch_ ;
      /**
       * <pre>
       * Fraction of the initial velocity where the ball starts to roll
       * </pre>
       *
       * <code>required double k_switch = 3;</code>
       */
      public boolean hasKSwitch() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Fraction of the initial velocity where the ball starts to roll
       * </pre>
       *
       * <code>required double k_switch = 3;</code>
       */
      public double getKSwitch() {
        return kSwitch_;
      }
      /**
       * <pre>
       * Fraction of the initial velocity where the ball starts to roll
       * </pre>
       *
       * <code>required double k_switch = 3;</code>
       */
      public Builder setKSwitch(double value) {
        bitField0_ |= 0x00000004;
        kSwitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fraction of the initial velocity where the ball starts to roll
       * </pre>
       *
       * <code>required double k_switch = 3;</code>
       */
      public Builder clearKSwitch() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kSwitch_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_BallModelStraightTwoPhase)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_BallModelStraightTwoPhase)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_BallModelStraightTwoPhase>
        PARSER = new com.google.protobuf.AbstractParser<SSL_BallModelStraightTwoPhase>() {
      @java.lang.Override
      public SSL_BallModelStraightTwoPhase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_BallModelStraightTwoPhase(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_BallModelStraightTwoPhase> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_BallModelStraightTwoPhase> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_BallModelChipFixedLossOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_BallModelChipFixedLoss)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for the first hop
     * </pre>
     *
     * <code>required double damping_xy_first_hop = 1;</code>
     */
    boolean hasDampingXyFirstHop();
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for the first hop
     * </pre>
     *
     * <code>required double damping_xy_first_hop = 1;</code>
     */
    double getDampingXyFirstHop();

    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for all following hops
     * </pre>
     *
     * <code>required double damping_xy_other_hops = 2;</code>
     */
    boolean hasDampingXyOtherHops();
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for all following hops
     * </pre>
     *
     * <code>required double damping_xy_other_hops = 2;</code>
     */
    double getDampingXyOtherHops();

    /**
     * <pre>
     * Chip kick velocity damping factor in Z direction for all hops
     * </pre>
     *
     * <code>required double damping_z = 3;</code>
     */
    boolean hasDampingZ();
    /**
     * <pre>
     * Chip kick velocity damping factor in Z direction for all hops
     * </pre>
     *
     * <code>required double damping_z = 3;</code>
     */
    double getDampingZ();
  }
  /**
   * <pre>
   * Fixed-Loss model for chipped balls.
   * Uses fixed damping factors for xy and z direction per hop.
   * </pre>
   *
   * Protobuf type {@code proto.vision.SSL_BallModelChipFixedLoss}
   */
  public  static final class SSL_BallModelChipFixedLoss extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_BallModelChipFixedLoss)
      SSL_BallModelChipFixedLossOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_BallModelChipFixedLoss.newBuilder() to construct.
    private SSL_BallModelChipFixedLoss(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_BallModelChipFixedLoss() {
      dampingXyFirstHop_ = 0D;
      dampingXyOtherHops_ = 0D;
      dampingZ_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_BallModelChipFixedLoss(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              dampingXyFirstHop_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              dampingXyOtherHops_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              dampingZ_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelChipFixedLoss_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.class, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder.class);
    }

    private int bitField0_;
    public static final int DAMPING_XY_FIRST_HOP_FIELD_NUMBER = 1;
    private double dampingXyFirstHop_;
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for the first hop
     * </pre>
     *
     * <code>required double damping_xy_first_hop = 1;</code>
     */
    public boolean hasDampingXyFirstHop() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for the first hop
     * </pre>
     *
     * <code>required double damping_xy_first_hop = 1;</code>
     */
    public double getDampingXyFirstHop() {
      return dampingXyFirstHop_;
    }

    public static final int DAMPING_XY_OTHER_HOPS_FIELD_NUMBER = 2;
    private double dampingXyOtherHops_;
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for all following hops
     * </pre>
     *
     * <code>required double damping_xy_other_hops = 2;</code>
     */
    public boolean hasDampingXyOtherHops() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Chip kick velocity damping factor in XY direction for all following hops
     * </pre>
     *
     * <code>required double damping_xy_other_hops = 2;</code>
     */
    public double getDampingXyOtherHops() {
      return dampingXyOtherHops_;
    }

    public static final int DAMPING_Z_FIELD_NUMBER = 3;
    private double dampingZ_;
    /**
     * <pre>
     * Chip kick velocity damping factor in Z direction for all hops
     * </pre>
     *
     * <code>required double damping_z = 3;</code>
     */
    public boolean hasDampingZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Chip kick velocity damping factor in Z direction for all hops
     * </pre>
     *
     * <code>required double damping_z = 3;</code>
     */
    public double getDampingZ() {
      return dampingZ_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDampingXyFirstHop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDampingXyOtherHops()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDampingZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, dampingXyFirstHop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, dampingXyOtherHops_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, dampingZ_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, dampingXyFirstHop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, dampingXyOtherHops_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, dampingZ_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss other = (proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss) obj;

      boolean result = true;
      result = result && (hasDampingXyFirstHop() == other.hasDampingXyFirstHop());
      if (hasDampingXyFirstHop()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDampingXyFirstHop())
            == java.lang.Double.doubleToLongBits(
                other.getDampingXyFirstHop()));
      }
      result = result && (hasDampingXyOtherHops() == other.hasDampingXyOtherHops());
      if (hasDampingXyOtherHops()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDampingXyOtherHops())
            == java.lang.Double.doubleToLongBits(
                other.getDampingXyOtherHops()));
      }
      result = result && (hasDampingZ() == other.hasDampingZ());
      if (hasDampingZ()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDampingZ())
            == java.lang.Double.doubleToLongBits(
                other.getDampingZ()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDampingXyFirstHop()) {
        hash = (37 * hash) + DAMPING_XY_FIRST_HOP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDampingXyFirstHop()));
      }
      if (hasDampingXyOtherHops()) {
        hash = (37 * hash) + DAMPING_XY_OTHER_HOPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDampingXyOtherHops()));
      }
      if (hasDampingZ()) {
        hash = (37 * hash) + DAMPING_Z_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDampingZ()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Fixed-Loss model for chipped balls.
     * Uses fixed damping factors for xy and z direction per hop.
     * </pre>
     *
     * Protobuf type {@code proto.vision.SSL_BallModelChipFixedLoss}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_BallModelChipFixedLoss)
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelChipFixedLoss_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.class, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dampingXyFirstHop_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        dampingXyOtherHops_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        dampingZ_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss result = new proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dampingXyFirstHop_ = dampingXyFirstHop_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dampingXyOtherHops_ = dampingXyOtherHops_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dampingZ_ = dampingZ_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance()) return this;
        if (other.hasDampingXyFirstHop()) {
          setDampingXyFirstHop(other.getDampingXyFirstHop());
        }
        if (other.hasDampingXyOtherHops()) {
          setDampingXyOtherHops(other.getDampingXyOtherHops());
        }
        if (other.hasDampingZ()) {
          setDampingZ(other.getDampingZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDampingXyFirstHop()) {
          return false;
        }
        if (!hasDampingXyOtherHops()) {
          return false;
        }
        if (!hasDampingZ()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double dampingXyFirstHop_ ;
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for the first hop
       * </pre>
       *
       * <code>required double damping_xy_first_hop = 1;</code>
       */
      public boolean hasDampingXyFirstHop() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for the first hop
       * </pre>
       *
       * <code>required double damping_xy_first_hop = 1;</code>
       */
      public double getDampingXyFirstHop() {
        return dampingXyFirstHop_;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for the first hop
       * </pre>
       *
       * <code>required double damping_xy_first_hop = 1;</code>
       */
      public Builder setDampingXyFirstHop(double value) {
        bitField0_ |= 0x00000001;
        dampingXyFirstHop_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for the first hop
       * </pre>
       *
       * <code>required double damping_xy_first_hop = 1;</code>
       */
      public Builder clearDampingXyFirstHop() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dampingXyFirstHop_ = 0D;
        onChanged();
        return this;
      }

      private double dampingXyOtherHops_ ;
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for all following hops
       * </pre>
       *
       * <code>required double damping_xy_other_hops = 2;</code>
       */
      public boolean hasDampingXyOtherHops() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for all following hops
       * </pre>
       *
       * <code>required double damping_xy_other_hops = 2;</code>
       */
      public double getDampingXyOtherHops() {
        return dampingXyOtherHops_;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for all following hops
       * </pre>
       *
       * <code>required double damping_xy_other_hops = 2;</code>
       */
      public Builder setDampingXyOtherHops(double value) {
        bitField0_ |= 0x00000002;
        dampingXyOtherHops_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in XY direction for all following hops
       * </pre>
       *
       * <code>required double damping_xy_other_hops = 2;</code>
       */
      public Builder clearDampingXyOtherHops() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dampingXyOtherHops_ = 0D;
        onChanged();
        return this;
      }

      private double dampingZ_ ;
      /**
       * <pre>
       * Chip kick velocity damping factor in Z direction for all hops
       * </pre>
       *
       * <code>required double damping_z = 3;</code>
       */
      public boolean hasDampingZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in Z direction for all hops
       * </pre>
       *
       * <code>required double damping_z = 3;</code>
       */
      public double getDampingZ() {
        return dampingZ_;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in Z direction for all hops
       * </pre>
       *
       * <code>required double damping_z = 3;</code>
       */
      public Builder setDampingZ(double value) {
        bitField0_ |= 0x00000004;
        dampingZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chip kick velocity damping factor in Z direction for all hops
       * </pre>
       *
       * <code>required double damping_z = 3;</code>
       */
      public Builder clearDampingZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dampingZ_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_BallModelChipFixedLoss)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_BallModelChipFixedLoss)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_BallModelChipFixedLoss>
        PARSER = new com.google.protobuf.AbstractParser<SSL_BallModelChipFixedLoss>() {
      @java.lang.Override
      public SSL_BallModelChipFixedLoss parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_BallModelChipFixedLoss(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_BallModelChipFixedLoss> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_BallModelChipFixedLoss> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_GeometryModelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_GeometryModels)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    boolean hasStraightTwoPhase();
    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getStraightTwoPhase();
    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder getStraightTwoPhaseOrBuilder();

    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    boolean hasChipFixedLoss();
    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getChipFixedLoss();
    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder getChipFixedLossOrBuilder();
  }
  /**
   * Protobuf type {@code proto.vision.SSL_GeometryModels}
   */
  public  static final class SSL_GeometryModels extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_GeometryModels)
      SSL_GeometryModelsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_GeometryModels.newBuilder() to construct.
    private SSL_GeometryModels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryModels() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryModels(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = straightTwoPhase_.toBuilder();
              }
              straightTwoPhase_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(straightTwoPhase_);
                straightTwoPhase_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chipFixedLoss_.toBuilder();
              }
              chipFixedLoss_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chipFixedLoss_);
                chipFixedLoss_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryModels_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryModels_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder.class);
    }

    private int bitField0_;
    public static final int STRAIGHT_TWO_PHASE_FIELD_NUMBER = 1;
    private proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase straightTwoPhase_;
    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    public boolean hasStraightTwoPhase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getStraightTwoPhase() {
      return straightTwoPhase_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance() : straightTwoPhase_;
    }
    /**
     * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder getStraightTwoPhaseOrBuilder() {
      return straightTwoPhase_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance() : straightTwoPhase_;
    }

    public static final int CHIP_FIXED_LOSS_FIELD_NUMBER = 2;
    private proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss chipFixedLoss_;
    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    public boolean hasChipFixedLoss() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getChipFixedLoss() {
      return chipFixedLoss_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance() : chipFixedLoss_;
    }
    /**
     * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder getChipFixedLossOrBuilder() {
      return chipFixedLoss_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance() : chipFixedLoss_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasStraightTwoPhase()) {
        if (!getStraightTwoPhase().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasChipFixedLoss()) {
        if (!getChipFixedLoss().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getStraightTwoPhase());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getChipFixedLoss());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStraightTwoPhase());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChipFixedLoss());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels other = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels) obj;

      boolean result = true;
      result = result && (hasStraightTwoPhase() == other.hasStraightTwoPhase());
      if (hasStraightTwoPhase()) {
        result = result && getStraightTwoPhase()
            .equals(other.getStraightTwoPhase());
      }
      result = result && (hasChipFixedLoss() == other.hasChipFixedLoss());
      if (hasChipFixedLoss()) {
        result = result && getChipFixedLoss()
            .equals(other.getChipFixedLoss());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStraightTwoPhase()) {
        hash = (37 * hash) + STRAIGHT_TWO_PHASE_FIELD_NUMBER;
        hash = (53 * hash) + getStraightTwoPhase().hashCode();
      }
      if (hasChipFixedLoss()) {
        hash = (37 * hash) + CHIP_FIXED_LOSS_FIELD_NUMBER;
        hash = (53 * hash) + getChipFixedLoss().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.vision.SSL_GeometryModels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_GeometryModels)
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryModels_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryModels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStraightTwoPhaseFieldBuilder();
          getChipFixedLossFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (straightTwoPhaseBuilder_ == null) {
          straightTwoPhase_ = null;
        } else {
          straightTwoPhaseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chipFixedLossBuilder_ == null) {
          chipFixedLoss_ = null;
        } else {
          chipFixedLossBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryModels_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels result = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (straightTwoPhaseBuilder_ == null) {
          result.straightTwoPhase_ = straightTwoPhase_;
        } else {
          result.straightTwoPhase_ = straightTwoPhaseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chipFixedLossBuilder_ == null) {
          result.chipFixedLoss_ = chipFixedLoss_;
        } else {
          result.chipFixedLoss_ = chipFixedLossBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance()) return this;
        if (other.hasStraightTwoPhase()) {
          mergeStraightTwoPhase(other.getStraightTwoPhase());
        }
        if (other.hasChipFixedLoss()) {
          mergeChipFixedLoss(other.getChipFixedLoss());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasStraightTwoPhase()) {
          if (!getStraightTwoPhase().isInitialized()) {
            return false;
          }
        }
        if (hasChipFixedLoss()) {
          if (!getChipFixedLoss().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase straightTwoPhase_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder> straightTwoPhaseBuilder_;
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public boolean hasStraightTwoPhase() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase getStraightTwoPhase() {
        if (straightTwoPhaseBuilder_ == null) {
          return straightTwoPhase_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance() : straightTwoPhase_;
        } else {
          return straightTwoPhaseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public Builder setStraightTwoPhase(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase value) {
        if (straightTwoPhaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          straightTwoPhase_ = value;
          onChanged();
        } else {
          straightTwoPhaseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public Builder setStraightTwoPhase(
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder builderForValue) {
        if (straightTwoPhaseBuilder_ == null) {
          straightTwoPhase_ = builderForValue.build();
          onChanged();
        } else {
          straightTwoPhaseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public Builder mergeStraightTwoPhase(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase value) {
        if (straightTwoPhaseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              straightTwoPhase_ != null &&
              straightTwoPhase_ != proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance()) {
            straightTwoPhase_ =
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.newBuilder(straightTwoPhase_).mergeFrom(value).buildPartial();
          } else {
            straightTwoPhase_ = value;
          }
          onChanged();
        } else {
          straightTwoPhaseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public Builder clearStraightTwoPhase() {
        if (straightTwoPhaseBuilder_ == null) {
          straightTwoPhase_ = null;
          onChanged();
        } else {
          straightTwoPhaseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder getStraightTwoPhaseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStraightTwoPhaseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder getStraightTwoPhaseOrBuilder() {
        if (straightTwoPhaseBuilder_ != null) {
          return straightTwoPhaseBuilder_.getMessageOrBuilder();
        } else {
          return straightTwoPhase_ == null ?
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.getDefaultInstance() : straightTwoPhase_;
        }
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelStraightTwoPhase straight_two_phase = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder> 
          getStraightTwoPhaseFieldBuilder() {
        if (straightTwoPhaseBuilder_ == null) {
          straightTwoPhaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhase.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelStraightTwoPhaseOrBuilder>(
                  getStraightTwoPhase(),
                  getParentForChildren(),
                  isClean());
          straightTwoPhase_ = null;
        }
        return straightTwoPhaseBuilder_;
      }

      private proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss chipFixedLoss_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder> chipFixedLossBuilder_;
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public boolean hasChipFixedLoss() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss getChipFixedLoss() {
        if (chipFixedLossBuilder_ == null) {
          return chipFixedLoss_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance() : chipFixedLoss_;
        } else {
          return chipFixedLossBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public Builder setChipFixedLoss(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss value) {
        if (chipFixedLossBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chipFixedLoss_ = value;
          onChanged();
        } else {
          chipFixedLossBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public Builder setChipFixedLoss(
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder builderForValue) {
        if (chipFixedLossBuilder_ == null) {
          chipFixedLoss_ = builderForValue.build();
          onChanged();
        } else {
          chipFixedLossBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public Builder mergeChipFixedLoss(proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss value) {
        if (chipFixedLossBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chipFixedLoss_ != null &&
              chipFixedLoss_ != proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance()) {
            chipFixedLoss_ =
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.newBuilder(chipFixedLoss_).mergeFrom(value).buildPartial();
          } else {
            chipFixedLoss_ = value;
          }
          onChanged();
        } else {
          chipFixedLossBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public Builder clearChipFixedLoss() {
        if (chipFixedLossBuilder_ == null) {
          chipFixedLoss_ = null;
          onChanged();
        } else {
          chipFixedLossBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder getChipFixedLossBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChipFixedLossFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder getChipFixedLossOrBuilder() {
        if (chipFixedLossBuilder_ != null) {
          return chipFixedLossBuilder_.getMessageOrBuilder();
        } else {
          return chipFixedLoss_ == null ?
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.getDefaultInstance() : chipFixedLoss_;
        }
      }
      /**
       * <code>optional .proto.vision.SSL_BallModelChipFixedLoss chip_fixed_loss = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder> 
          getChipFixedLossFieldBuilder() {
        if (chipFixedLossBuilder_ == null) {
          chipFixedLossBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLoss.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_BallModelChipFixedLossOrBuilder>(
                  getChipFixedLoss(),
                  getParentForChildren(),
                  isClean());
          chipFixedLoss_ = null;
        }
        return chipFixedLossBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_GeometryModels)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_GeometryModels)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryModels>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryModels>() {
      @java.lang.Override
      public SSL_GeometryModels parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_GeometryModels(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryModels> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryModels> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_GeometryDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.vision.SSL_GeometryData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    boolean hasField();
    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getField();
    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder();

    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> 
        getCalibList();
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index);
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    int getCalibCount();
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
        getCalibOrBuilderList();
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
        int index);

    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    boolean hasModels();
    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getModels();
    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder getModelsOrBuilder();
  }
  /**
   * Protobuf type {@code proto.vision.SSL_GeometryData}
   */
  public  static final class SSL_GeometryData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.vision.SSL_GeometryData)
      SSL_GeometryDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSL_GeometryData.newBuilder() to construct.
    private SSL_GeometryData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryData() {
      calib_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                calib_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration>();
                mutable_bitField0_ |= 0x00000002;
              }
              calib_.add(
                  input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = models_.toBuilder();
              }
              models_ = input.readMessage(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(models_);
                models_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          calib_ = java.util.Collections.unmodifiableList(calib_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELD_FIELD_NUMBER = 1;
    private proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize field_;
    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getField() {
      return field_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance() : field_;
    }
    /**
     * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder() {
      return field_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance() : field_;
    }

    public static final int CALIB_FIELD_NUMBER = 2;
    private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> calib_;
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> getCalibList() {
      return calib_;
    }
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
        getCalibOrBuilderList() {
      return calib_;
    }
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public int getCalibCount() {
      return calib_.size();
    }
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
      return calib_.get(index);
    }
    /**
     * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
        int index) {
      return calib_.get(index);
    }

    public static final int MODELS_FIELD_NUMBER = 3;
    private proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels models_;
    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    public boolean hasModels() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getModels() {
      return models_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance() : models_;
    }
    /**
     * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
     */
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder getModelsOrBuilder() {
      return models_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance() : models_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getField().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCalibCount(); i++) {
        if (!getCalib(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasModels()) {
        if (!getModels().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getField());
      }
      for (int i = 0; i < calib_.size(); i++) {
        output.writeMessage(2, calib_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, getModels());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getField());
      }
      for (int i = 0; i < calib_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, calib_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getModels());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData)) {
        return super.equals(obj);
      }
      proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData other = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData) obj;

      boolean result = true;
      result = result && (hasField() == other.hasField());
      if (hasField()) {
        result = result && getField()
            .equals(other.getField());
      }
      result = result && getCalibList()
          .equals(other.getCalibList());
      result = result && (hasModels() == other.hasModels());
      if (hasModels()) {
        result = result && getModels()
            .equals(other.getModels());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasField()) {
        hash = (37 * hash) + FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getField().hashCode();
      }
      if (getCalibCount() > 0) {
        hash = (37 * hash) + CALIB_FIELD_NUMBER;
        hash = (53 * hash) + getCalibList().hashCode();
      }
      if (hasModels()) {
        hash = (37 * hash) + MODELS_FIELD_NUMBER;
        hash = (53 * hash) + getModels().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.vision.SSL_GeometryData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.vision.SSL_GeometryData)
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.class, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.Builder.class);
      }

      // Construct using proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
          getCalibFieldBuilder();
          getModelsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = null;
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (calibBuilder_ == null) {
          calib_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          calibBuilder_.clear();
        }
        if (modelsBuilder_ == null) {
          models_ = null;
        } else {
          modelsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.vision.MessagesRobocupSslGeometry.internal_static_proto_vision_SSL_GeometryData_descriptor;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData getDefaultInstanceForType() {
        return proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.getDefaultInstance();
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData build() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData buildPartial() {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData result = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        if (calibBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            calib_ = java.util.Collections.unmodifiableList(calib_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.calib_ = calib_;
        } else {
          result.calib_ = calibBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (modelsBuilder_ == null) {
          result.models_ = models_;
        } else {
          result.models_ = modelsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData) {
          return mergeFrom((proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData other) {
        if (other == proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (calibBuilder_ == null) {
          if (!other.calib_.isEmpty()) {
            if (calib_.isEmpty()) {
              calib_ = other.calib_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCalibIsMutable();
              calib_.addAll(other.calib_);
            }
            onChanged();
          }
        } else {
          if (!other.calib_.isEmpty()) {
            if (calibBuilder_.isEmpty()) {
              calibBuilder_.dispose();
              calibBuilder_ = null;
              calib_ = other.calib_;
              bitField0_ = (bitField0_ & ~0x00000002);
              calibBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalibFieldBuilder() : null;
            } else {
              calibBuilder_.addAllMessages(other.calib_);
            }
          }
        }
        if (other.hasModels()) {
          mergeModels(other.getModels());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasField()) {
          return false;
        }
        if (!getField().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getCalibCount(); i++) {
          if (!getCalib(i).isInitialized()) {
            return false;
          }
        }
        if (hasModels()) {
          if (!getModels().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize field_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder> fieldBuilder_;
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public boolean hasField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize getField() {
        if (fieldBuilder_ == null) {
          return field_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance() : field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder setField(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder setField(
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder mergeField(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize value) {
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              field_ != null &&
              field_ != proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance()) {
            field_ =
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = null;
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder getFieldBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_ == null ?
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.getDefaultInstance() : field_;
        }
      }
      /**
       * <code>required .proto.vision.SSL_GeometryFieldSize field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSize.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryFieldSizeOrBuilder>(
                  getField(),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      private java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> calib_ =
        java.util.Collections.emptyList();
      private void ensureCalibIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          calib_ = new java.util.ArrayList<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration>(calib_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> calibBuilder_;

      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> getCalibList() {
        if (calibBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calib_);
        } else {
          return calibBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public int getCalibCount() {
        if (calibBuilder_ == null) {
          return calib_.size();
        } else {
          return calibBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
        if (calibBuilder_ == null) {
          return calib_.get(index);
        } else {
          return calibBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder setCalib(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.set(index, value);
          onChanged();
        } else {
          calibBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder setCalib(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.set(index, builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.add(value);
          onChanged();
        } else {
          calibBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.add(index, value);
          onChanged();
        } else {
          calibBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.add(builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          int index, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.add(index, builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addAllCalib(
          java.lang.Iterable<? extends proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> values) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calib_);
          onChanged();
        } else {
          calibBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder clearCalib() {
        if (calibBuilder_ == null) {
          calib_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          calibBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder removeCalib(int index) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.remove(index);
          onChanged();
        } else {
          calibBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder getCalibBuilder(
          int index) {
        return getCalibFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
          int index) {
        if (calibBuilder_ == null) {
          return calib_.get(index);  } else {
          return calibBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<? extends proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
           getCalibOrBuilderList() {
        if (calibBuilder_ != null) {
          return calibBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calib_);
        }
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder addCalibBuilder() {
        return getCalibFieldBuilder().addBuilder(
            proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder addCalibBuilder(
          int index) {
        return getCalibFieldBuilder().addBuilder(
            index, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance());
      }
      /**
       * <code>repeated .proto.vision.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder> 
           getCalibBuilderList() {
        return getCalibFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
          getCalibFieldBuilder() {
        if (calibBuilder_ == null) {
          calibBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder>(
                  calib_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          calib_ = null;
        }
        return calibBuilder_;
      }

      private proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels models_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder> modelsBuilder_;
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public boolean hasModels() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels getModels() {
        if (modelsBuilder_ == null) {
          return models_ == null ? proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance() : models_;
        } else {
          return modelsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public Builder setModels(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels value) {
        if (modelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          models_ = value;
          onChanged();
        } else {
          modelsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public Builder setModels(
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder builderForValue) {
        if (modelsBuilder_ == null) {
          models_ = builderForValue.build();
          onChanged();
        } else {
          modelsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public Builder mergeModels(proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels value) {
        if (modelsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              models_ != null &&
              models_ != proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance()) {
            models_ =
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.newBuilder(models_).mergeFrom(value).buildPartial();
          } else {
            models_ = value;
          }
          onChanged();
        } else {
          modelsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public Builder clearModels() {
        if (modelsBuilder_ == null) {
          models_ = null;
          onChanged();
        } else {
          modelsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder getModelsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getModelsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder getModelsOrBuilder() {
        if (modelsBuilder_ != null) {
          return modelsBuilder_.getMessageOrBuilder();
        } else {
          return models_ == null ?
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.getDefaultInstance() : models_;
        }
      }
      /**
       * <code>optional .proto.vision.SSL_GeometryModels models = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder> 
          getModelsFieldBuilder() {
        if (modelsBuilder_ == null) {
          modelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModels.Builder, proto.vision.MessagesRobocupSslGeometry.SSL_GeometryModelsOrBuilder>(
                  getModels(),
                  getParentForChildren(),
                  isClean());
          models_ = null;
        }
        return modelsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.vision.SSL_GeometryData)
    }

    // @@protoc_insertion_point(class_scope:proto.vision.SSL_GeometryData)
    private static final proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData();
    }

    public static proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryData>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryData>() {
      @java.lang.Override
      public SSL_GeometryData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSL_GeometryData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.vision.MessagesRobocupSslGeometry.SSL_GeometryData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_Vector2f_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_Vector2f_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_FieldLineSegment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_FieldLineSegment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_FieldCircularArc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_FieldCircularArc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_GeometryFieldSize_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_GeometryFieldSize_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_GeometryCameraCalibration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_BallModelStraightTwoPhase_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_BallModelChipFixedLoss_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_GeometryModels_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_GeometryModels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_vision_SSL_GeometryData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_vision_SSL_GeometryData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#messages_robocup_ssl_geometry.proto\022\014p" +
      "roto.vision\" \n\010Vector2f\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030" +
      "\002 \002(\002\"\257\001\n\024SSL_FieldLineSegment\022\014\n\004name\030\001" +
      " \002(\t\022\"\n\002p1\030\002 \002(\0132\026.proto.vision.Vector2f" +
      "\022\"\n\002p2\030\003 \002(\0132\026.proto.vision.Vector2f\022\021\n\t" +
      "thickness\030\004 \002(\002\022.\n\004type\030\005 \001(\0162 .proto.vi" +
      "sion.SSL_FieldShapeType\"\267\001\n\024SSL_FieldCir" +
      "cularArc\022\014\n\004name\030\001 \002(\t\022&\n\006center\030\002 \002(\0132\026" +
      ".proto.vision.Vector2f\022\016\n\006radius\030\003 \002(\002\022\n" +
      "\n\002a1\030\004 \002(\002\022\n\n\002a2\030\005 \002(\002\022\021\n\tthickness\030\006 \002(" +
      "\002\022.\n\004type\030\007 \001(\0162 .proto.vision.SSL_Field" +
      "ShapeType\"\312\003\n\025SSL_GeometryFieldSize\022\024\n\014f" +
      "ield_length\030\001 \002(\005\022\023\n\013field_width\030\002 \002(\005\022\022" +
      "\n\ngoal_width\030\003 \002(\005\022\022\n\ngoal_depth\030\004 \002(\005\022\026" +
      "\n\016boundary_width\030\005 \002(\005\0227\n\013field_lines\030\006 " +
      "\003(\0132\".proto.vision.SSL_FieldLineSegment\022" +
      "6\n\nfield_arcs\030\007 \003(\0132\".proto.vision.SSL_F" +
      "ieldCircularArc\022\032\n\022penalty_area_depth\030\010 " +
      "\001(\005\022\032\n\022penalty_area_width\030\t \001(\005\022\034\n\024cente" +
      "r_circle_radius\030\n \001(\005\022\026\n\016line_thickness\030" +
      "\013 \001(\005\022#\n\033goal_center_to_penalty_mark\030\014 \001" +
      "(\005\022\023\n\013goal_height\030\r \001(\005\022\023\n\013ball_radius\030\016" +
      " \001(\002\022\030\n\020max_robot_radius\030\017 \001(\002\"\200\003\n\035SSL_G" +
      "eometryCameraCalibration\022\021\n\tcamera_id\030\001 " +
      "\002(\r\022\024\n\014focal_length\030\002 \002(\002\022\031\n\021principal_p" +
      "oint_x\030\003 \002(\002\022\031\n\021principal_point_y\030\004 \002(\002\022" +
      "\022\n\ndistortion\030\005 \002(\002\022\n\n\002q0\030\006 \002(\002\022\n\n\002q1\030\007 " +
      "\002(\002\022\n\n\002q2\030\010 \002(\002\022\n\n\002q3\030\t \002(\002\022\n\n\002tx\030\n \002(\002\022" +
      "\n\n\002ty\030\013 \002(\002\022\n\n\002tz\030\014 \002(\002\022\037\n\027derived_camer" +
      "a_world_tx\030\r \001(\002\022\037\n\027derived_camera_world" +
      "_ty\030\016 \001(\002\022\037\n\027derived_camera_world_tz\030\017 \001" +
      "(\002\022\031\n\021pixel_image_width\030\020 \001(\r\022\032\n\022pixel_i" +
      "mage_height\030\021 \001(\r\"V\n\035SSL_BallModelStraig" +
      "htTwoPhase\022\021\n\tacc_slide\030\001 \002(\001\022\020\n\010acc_rol" +
      "l\030\002 \002(\001\022\020\n\010k_switch\030\003 \002(\001\"l\n\032SSL_BallMod" +
      "elChipFixedLoss\022\034\n\024damping_xy_first_hop\030" +
      "\001 \002(\001\022\035\n\025damping_xy_other_hops\030\002 \002(\001\022\021\n\t" +
      "damping_z\030\003 \002(\001\"\240\001\n\022SSL_GeometryModels\022G" +
      "\n\022straight_two_phase\030\001 \001(\0132+.proto.visio" +
      "n.SSL_BallModelStraightTwoPhase\022A\n\017chip_" +
      "fixed_loss\030\002 \001(\0132(.proto.vision.SSL_Ball" +
      "ModelChipFixedLoss\"\264\001\n\020SSL_GeometryData\022" +
      "2\n\005field\030\001 \002(\0132#.proto.vision.SSL_Geomet" +
      "ryFieldSize\022:\n\005calib\030\002 \003(\0132+.proto.visio" +
      "n.SSL_GeometryCameraCalibration\0220\n\006model" +
      "s\030\003 \001(\0132 .proto.vision.SSL_GeometryModel" +
      "s*\333\002\n\022SSL_FieldShapeType\022\r\n\tUndefined\020\000\022" +
      "\020\n\014CenterCircle\020\001\022\020\n\014TopTouchLine\020\002\022\023\n\017B" +
      "ottomTouchLine\020\003\022\020\n\014LeftGoalLine\020\004\022\021\n\rRi" +
      "ghtGoalLine\020\005\022\017\n\013HalfwayLine\020\006\022\016\n\nCenter" +
      "Line\020\007\022\026\n\022LeftPenaltyStretch\020\010\022\027\n\023RightP" +
      "enaltyStretch\020\t\022\037\n\033LeftFieldLeftPenaltyS" +
      "tretch\020\n\022 \n\034LeftFieldRightPenaltyStretch" +
      "\020\013\022 \n\034RightFieldLeftPenaltyStretch\020\014\022!\n\035" +
      "RightFieldRightPenaltyStretch\020\r"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_proto_vision_Vector2f_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_vision_Vector2f_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_Vector2f_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_proto_vision_SSL_FieldLineSegment_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_vision_SSL_FieldLineSegment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_FieldLineSegment_descriptor,
        new java.lang.String[] { "Name", "P1", "P2", "Thickness", "Type", });
    internal_static_proto_vision_SSL_FieldCircularArc_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_vision_SSL_FieldCircularArc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_FieldCircularArc_descriptor,
        new java.lang.String[] { "Name", "Center", "Radius", "A1", "A2", "Thickness", "Type", });
    internal_static_proto_vision_SSL_GeometryFieldSize_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_vision_SSL_GeometryFieldSize_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_GeometryFieldSize_descriptor,
        new java.lang.String[] { "FieldLength", "FieldWidth", "GoalWidth", "GoalDepth", "BoundaryWidth", "FieldLines", "FieldArcs", "PenaltyAreaDepth", "PenaltyAreaWidth", "CenterCircleRadius", "LineThickness", "GoalCenterToPenaltyMark", "GoalHeight", "BallRadius", "MaxRobotRadius", });
    internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_vision_SSL_GeometryCameraCalibration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_GeometryCameraCalibration_descriptor,
        new java.lang.String[] { "CameraId", "FocalLength", "PrincipalPointX", "PrincipalPointY", "Distortion", "Q0", "Q1", "Q2", "Q3", "Tx", "Ty", "Tz", "DerivedCameraWorldTx", "DerivedCameraWorldTy", "DerivedCameraWorldTz", "PixelImageWidth", "PixelImageHeight", });
    internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_proto_vision_SSL_BallModelStraightTwoPhase_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_BallModelStraightTwoPhase_descriptor,
        new java.lang.String[] { "AccSlide", "AccRoll", "KSwitch", });
    internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_proto_vision_SSL_BallModelChipFixedLoss_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_BallModelChipFixedLoss_descriptor,
        new java.lang.String[] { "DampingXyFirstHop", "DampingXyOtherHops", "DampingZ", });
    internal_static_proto_vision_SSL_GeometryModels_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_proto_vision_SSL_GeometryModels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_GeometryModels_descriptor,
        new java.lang.String[] { "StraightTwoPhase", "ChipFixedLoss", });
    internal_static_proto_vision_SSL_GeometryData_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_proto_vision_SSL_GeometryData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_vision_SSL_GeometryData_descriptor,
        new java.lang.String[] { "Field", "Calib", "Models", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
