// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_simulation_control.proto

package proto.simulation;

public final class SslSimulationControl {
  private SslSimulationControl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TeleportBallOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.TeleportBall)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 1;</code>
     */
    boolean hasX();
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 1;</code>
     */
    float getX();

    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 2;</code>
     */
    boolean hasY();
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 2;</code>
     */
    float getY();

    /**
     * <pre>
     * z-coordinate (height) [m]
     * </pre>
     *
     * <code>optional float z = 3;</code>
     */
    boolean hasZ();
    /**
     * <pre>
     * z-coordinate (height) [m]
     * </pre>
     *
     * <code>optional float z = 3;</code>
     */
    float getZ();

    /**
     * <pre>
     * Velocity in x-direction [m/s]
     * </pre>
     *
     * <code>optional float vx = 4;</code>
     */
    boolean hasVx();
    /**
     * <pre>
     * Velocity in x-direction [m/s]
     * </pre>
     *
     * <code>optional float vx = 4;</code>
     */
    float getVx();

    /**
     * <pre>
     * Velocity in y-direction [m/s]
     * </pre>
     *
     * <code>optional float vy = 5;</code>
     */
    boolean hasVy();
    /**
     * <pre>
     * Velocity in y-direction [m/s]
     * </pre>
     *
     * <code>optional float vy = 5;</code>
     */
    float getVy();

    /**
     * <pre>
     * Velocity in z-direction [m/s]
     * </pre>
     *
     * <code>optional float vz = 6;</code>
     */
    boolean hasVz();
    /**
     * <pre>
     * Velocity in z-direction [m/s]
     * </pre>
     *
     * <code>optional float vz = 6;</code>
     */
    float getVz();

    /**
     * <pre>
     * Teleport the ball safely to the target, for example by
     * moving robots out of the way in case of collision and set speed of robots close-by to zero
     * </pre>
     *
     * <code>optional bool teleport_safely = 7 [default = false];</code>
     */
    boolean hasTeleportSafely();
    /**
     * <pre>
     * Teleport the ball safely to the target, for example by
     * moving robots out of the way in case of collision and set speed of robots close-by to zero
     * </pre>
     *
     * <code>optional bool teleport_safely = 7 [default = false];</code>
     */
    boolean getTeleportSafely();

    /**
     * <pre>
     * Adapt the angular ball velocity such that the ball is rolling
     * </pre>
     *
     * <code>optional bool roll = 8 [default = false];</code>
     */
    boolean hasRoll();
    /**
     * <pre>
     * Adapt the angular ball velocity such that the ball is rolling
     * </pre>
     *
     * <code>optional bool roll = 8 [default = false];</code>
     */
    boolean getRoll();

    /**
     * <pre>
     * Instead of teleporting the ball, apply some force to make sure
     * the ball reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportBall command with by_force = false.
     * To avoid teleporting the ball at the end and resetting its current spin,
     * do not set any of the optional fields in this message to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    boolean hasByForce();
    /**
     * <pre>
     * Instead of teleporting the ball, apply some force to make sure
     * the ball reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportBall command with by_force = false.
     * To avoid teleporting the ball at the end and resetting its current spin,
     * do not set any of the optional fields in this message to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    boolean getByForce();
  }
  /**
   * <pre>
   * Teleport the ball to a new location and optionally set it to some velocity
   * </pre>
   *
   * Protobuf type {@code proto.simulation.TeleportBall}
   */
  public  static final class TeleportBall extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.TeleportBall)
      TeleportBallOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TeleportBall.newBuilder() to construct.
    private TeleportBall(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TeleportBall() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
      vx_ = 0F;
      vy_ = 0F;
      vz_ = 0F;
      teleportSafely_ = false;
      roll_ = false;
      byForce_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TeleportBall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              vx_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              vy_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              vz_ = input.readFloat();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              teleportSafely_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roll_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              byForce_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportBall_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportBall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationControl.TeleportBall.class, proto.simulation.SslSimulationControl.TeleportBall.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 1;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 2;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    /**
     * <pre>
     * z-coordinate (height) [m]
     * </pre>
     *
     * <code>optional float z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * z-coordinate (height) [m]
     * </pre>
     *
     * <code>optional float z = 3;</code>
     */
    public float getZ() {
      return z_;
    }

    public static final int VX_FIELD_NUMBER = 4;
    private float vx_;
    /**
     * <pre>
     * Velocity in x-direction [m/s]
     * </pre>
     *
     * <code>optional float vx = 4;</code>
     */
    public boolean hasVx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Velocity in x-direction [m/s]
     * </pre>
     *
     * <code>optional float vx = 4;</code>
     */
    public float getVx() {
      return vx_;
    }

    public static final int VY_FIELD_NUMBER = 5;
    private float vy_;
    /**
     * <pre>
     * Velocity in y-direction [m/s]
     * </pre>
     *
     * <code>optional float vy = 5;</code>
     */
    public boolean hasVy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Velocity in y-direction [m/s]
     * </pre>
     *
     * <code>optional float vy = 5;</code>
     */
    public float getVy() {
      return vy_;
    }

    public static final int VZ_FIELD_NUMBER = 6;
    private float vz_;
    /**
     * <pre>
     * Velocity in z-direction [m/s]
     * </pre>
     *
     * <code>optional float vz = 6;</code>
     */
    public boolean hasVz() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Velocity in z-direction [m/s]
     * </pre>
     *
     * <code>optional float vz = 6;</code>
     */
    public float getVz() {
      return vz_;
    }

    public static final int TELEPORT_SAFELY_FIELD_NUMBER = 7;
    private boolean teleportSafely_;
    /**
     * <pre>
     * Teleport the ball safely to the target, for example by
     * moving robots out of the way in case of collision and set speed of robots close-by to zero
     * </pre>
     *
     * <code>optional bool teleport_safely = 7 [default = false];</code>
     */
    public boolean hasTeleportSafely() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Teleport the ball safely to the target, for example by
     * moving robots out of the way in case of collision and set speed of robots close-by to zero
     * </pre>
     *
     * <code>optional bool teleport_safely = 7 [default = false];</code>
     */
    public boolean getTeleportSafely() {
      return teleportSafely_;
    }

    public static final int ROLL_FIELD_NUMBER = 8;
    private boolean roll_;
    /**
     * <pre>
     * Adapt the angular ball velocity such that the ball is rolling
     * </pre>
     *
     * <code>optional bool roll = 8 [default = false];</code>
     */
    public boolean hasRoll() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Adapt the angular ball velocity such that the ball is rolling
     * </pre>
     *
     * <code>optional bool roll = 8 [default = false];</code>
     */
    public boolean getRoll() {
      return roll_;
    }

    public static final int BY_FORCE_FIELD_NUMBER = 9;
    private boolean byForce_;
    /**
     * <pre>
     * Instead of teleporting the ball, apply some force to make sure
     * the ball reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportBall command with by_force = false.
     * To avoid teleporting the ball at the end and resetting its current spin,
     * do not set any of the optional fields in this message to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    public boolean hasByForce() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Instead of teleporting the ball, apply some force to make sure
     * the ball reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportBall command with by_force = false.
     * To avoid teleporting the ball at the end and resetting its current spin,
     * do not set any of the optional fields in this message to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    public boolean getByForce() {
      return byForce_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, vx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, vy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, vz_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, teleportSafely_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, roll_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, byForce_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, vx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, vy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, vz_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, teleportSafely_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, roll_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, byForce_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationControl.TeleportBall)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationControl.TeleportBall other = (proto.simulation.SslSimulationControl.TeleportBall) obj;

      boolean result = true;
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && (hasZ() == other.hasZ());
      if (hasZ()) {
        result = result && (
            java.lang.Float.floatToIntBits(getZ())
            == java.lang.Float.floatToIntBits(
                other.getZ()));
      }
      result = result && (hasVx() == other.hasVx());
      if (hasVx()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVx())
            == java.lang.Float.floatToIntBits(
                other.getVx()));
      }
      result = result && (hasVy() == other.hasVy());
      if (hasVy()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVy())
            == java.lang.Float.floatToIntBits(
                other.getVy()));
      }
      result = result && (hasVz() == other.hasVz());
      if (hasVz()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVz())
            == java.lang.Float.floatToIntBits(
                other.getVz()));
      }
      result = result && (hasTeleportSafely() == other.hasTeleportSafely());
      if (hasTeleportSafely()) {
        result = result && (getTeleportSafely()
            == other.getTeleportSafely());
      }
      result = result && (hasRoll() == other.hasRoll());
      if (hasRoll()) {
        result = result && (getRoll()
            == other.getRoll());
      }
      result = result && (hasByForce() == other.hasByForce());
      if (hasByForce()) {
        result = result && (getByForce()
            == other.getByForce());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      if (hasZ()) {
        hash = (37 * hash) + Z_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getZ());
      }
      if (hasVx()) {
        hash = (37 * hash) + VX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVx());
      }
      if (hasVy()) {
        hash = (37 * hash) + VY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVy());
      }
      if (hasVz()) {
        hash = (37 * hash) + VZ_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVz());
      }
      if (hasTeleportSafely()) {
        hash = (37 * hash) + TELEPORT_SAFELY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTeleportSafely());
      }
      if (hasRoll()) {
        hash = (37 * hash) + ROLL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRoll());
      }
      if (hasByForce()) {
        hash = (37 * hash) + BY_FORCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getByForce());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportBall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationControl.TeleportBall prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Teleport the ball to a new location and optionally set it to some velocity
     * </pre>
     *
     * Protobuf type {@code proto.simulation.TeleportBall}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.TeleportBall)
        proto.simulation.SslSimulationControl.TeleportBallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportBall_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportBall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationControl.TeleportBall.class, proto.simulation.SslSimulationControl.TeleportBall.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationControl.TeleportBall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        vx_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        vy_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        vz_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        teleportSafely_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        roll_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        byForce_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportBall_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportBall getDefaultInstanceForType() {
        return proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportBall build() {
        proto.simulation.SslSimulationControl.TeleportBall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportBall buildPartial() {
        proto.simulation.SslSimulationControl.TeleportBall result = new proto.simulation.SslSimulationControl.TeleportBall(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vx_ = vx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vy_ = vy_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vz_ = vz_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.teleportSafely_ = teleportSafely_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.roll_ = roll_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.byForce_ = byForce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationControl.TeleportBall) {
          return mergeFrom((proto.simulation.SslSimulationControl.TeleportBall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationControl.TeleportBall other) {
        if (other == proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasVx()) {
          setVx(other.getVx());
        }
        if (other.hasVy()) {
          setVy(other.getVy());
        }
        if (other.hasVz()) {
          setVz(other.getVz());
        }
        if (other.hasTeleportSafely()) {
          setTeleportSafely(other.getTeleportSafely());
        }
        if (other.hasRoll()) {
          setRoll(other.getRoll());
        }
        if (other.hasByForce()) {
          setByForce(other.getByForce());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationControl.TeleportBall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationControl.TeleportBall) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float x_ ;
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 1;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 1;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 2;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 2;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <pre>
       * z-coordinate (height) [m]
       * </pre>
       *
       * <code>optional float z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * z-coordinate (height) [m]
       * </pre>
       *
       * <code>optional float z = 3;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <pre>
       * z-coordinate (height) [m]
       * </pre>
       *
       * <code>optional float z = 3;</code>
       */
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * z-coordinate (height) [m]
       * </pre>
       *
       * <code>optional float z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }

      private float vx_ ;
      /**
       * <pre>
       * Velocity in x-direction [m/s]
       * </pre>
       *
       * <code>optional float vx = 4;</code>
       */
      public boolean hasVx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Velocity in x-direction [m/s]
       * </pre>
       *
       * <code>optional float vx = 4;</code>
       */
      public float getVx() {
        return vx_;
      }
      /**
       * <pre>
       * Velocity in x-direction [m/s]
       * </pre>
       *
       * <code>optional float vx = 4;</code>
       */
      public Builder setVx(float value) {
        bitField0_ |= 0x00000008;
        vx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity in x-direction [m/s]
       * </pre>
       *
       * <code>optional float vx = 4;</code>
       */
      public Builder clearVx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vx_ = 0F;
        onChanged();
        return this;
      }

      private float vy_ ;
      /**
       * <pre>
       * Velocity in y-direction [m/s]
       * </pre>
       *
       * <code>optional float vy = 5;</code>
       */
      public boolean hasVy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Velocity in y-direction [m/s]
       * </pre>
       *
       * <code>optional float vy = 5;</code>
       */
      public float getVy() {
        return vy_;
      }
      /**
       * <pre>
       * Velocity in y-direction [m/s]
       * </pre>
       *
       * <code>optional float vy = 5;</code>
       */
      public Builder setVy(float value) {
        bitField0_ |= 0x00000010;
        vy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity in y-direction [m/s]
       * </pre>
       *
       * <code>optional float vy = 5;</code>
       */
      public Builder clearVy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vy_ = 0F;
        onChanged();
        return this;
      }

      private float vz_ ;
      /**
       * <pre>
       * Velocity in z-direction [m/s]
       * </pre>
       *
       * <code>optional float vz = 6;</code>
       */
      public boolean hasVz() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Velocity in z-direction [m/s]
       * </pre>
       *
       * <code>optional float vz = 6;</code>
       */
      public float getVz() {
        return vz_;
      }
      /**
       * <pre>
       * Velocity in z-direction [m/s]
       * </pre>
       *
       * <code>optional float vz = 6;</code>
       */
      public Builder setVz(float value) {
        bitField0_ |= 0x00000020;
        vz_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity in z-direction [m/s]
       * </pre>
       *
       * <code>optional float vz = 6;</code>
       */
      public Builder clearVz() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vz_ = 0F;
        onChanged();
        return this;
      }

      private boolean teleportSafely_ ;
      /**
       * <pre>
       * Teleport the ball safely to the target, for example by
       * moving robots out of the way in case of collision and set speed of robots close-by to zero
       * </pre>
       *
       * <code>optional bool teleport_safely = 7 [default = false];</code>
       */
      public boolean hasTeleportSafely() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Teleport the ball safely to the target, for example by
       * moving robots out of the way in case of collision and set speed of robots close-by to zero
       * </pre>
       *
       * <code>optional bool teleport_safely = 7 [default = false];</code>
       */
      public boolean getTeleportSafely() {
        return teleportSafely_;
      }
      /**
       * <pre>
       * Teleport the ball safely to the target, for example by
       * moving robots out of the way in case of collision and set speed of robots close-by to zero
       * </pre>
       *
       * <code>optional bool teleport_safely = 7 [default = false];</code>
       */
      public Builder setTeleportSafely(boolean value) {
        bitField0_ |= 0x00000040;
        teleportSafely_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Teleport the ball safely to the target, for example by
       * moving robots out of the way in case of collision and set speed of robots close-by to zero
       * </pre>
       *
       * <code>optional bool teleport_safely = 7 [default = false];</code>
       */
      public Builder clearTeleportSafely() {
        bitField0_ = (bitField0_ & ~0x00000040);
        teleportSafely_ = false;
        onChanged();
        return this;
      }

      private boolean roll_ ;
      /**
       * <pre>
       * Adapt the angular ball velocity such that the ball is rolling
       * </pre>
       *
       * <code>optional bool roll = 8 [default = false];</code>
       */
      public boolean hasRoll() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Adapt the angular ball velocity such that the ball is rolling
       * </pre>
       *
       * <code>optional bool roll = 8 [default = false];</code>
       */
      public boolean getRoll() {
        return roll_;
      }
      /**
       * <pre>
       * Adapt the angular ball velocity such that the ball is rolling
       * </pre>
       *
       * <code>optional bool roll = 8 [default = false];</code>
       */
      public Builder setRoll(boolean value) {
        bitField0_ |= 0x00000080;
        roll_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Adapt the angular ball velocity such that the ball is rolling
       * </pre>
       *
       * <code>optional bool roll = 8 [default = false];</code>
       */
      public Builder clearRoll() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roll_ = false;
        onChanged();
        return this;
      }

      private boolean byForce_ ;
      /**
       * <pre>
       * Instead of teleporting the ball, apply some force to make sure
       * the ball reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportBall command with by_force = false.
       * To avoid teleporting the ball at the end and resetting its current spin,
       * do not set any of the optional fields in this message to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public boolean hasByForce() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Instead of teleporting the ball, apply some force to make sure
       * the ball reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportBall command with by_force = false.
       * To avoid teleporting the ball at the end and resetting its current spin,
       * do not set any of the optional fields in this message to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public boolean getByForce() {
        return byForce_;
      }
      /**
       * <pre>
       * Instead of teleporting the ball, apply some force to make sure
       * the ball reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportBall command with by_force = false.
       * To avoid teleporting the ball at the end and resetting its current spin,
       * do not set any of the optional fields in this message to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public Builder setByForce(boolean value) {
        bitField0_ |= 0x00000100;
        byForce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Instead of teleporting the ball, apply some force to make sure
       * the ball reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportBall command with by_force = false.
       * To avoid teleporting the ball at the end and resetting its current spin,
       * do not set any of the optional fields in this message to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public Builder clearByForce() {
        bitField0_ = (bitField0_ & ~0x00000100);
        byForce_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.TeleportBall)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.TeleportBall)
    private static final proto.simulation.SslSimulationControl.TeleportBall DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationControl.TeleportBall();
    }

    public static proto.simulation.SslSimulationControl.TeleportBall getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TeleportBall>
        PARSER = new com.google.protobuf.AbstractParser<TeleportBall>() {
      @java.lang.Override
      public TeleportBall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeleportBall(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TeleportBall> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TeleportBall> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationControl.TeleportBall getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TeleportRobotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.TeleportRobot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    proto.simulation.SslGcCommon.RobotId getId();
    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 2;</code>
     */
    boolean hasX();
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 2;</code>
     */
    float getX();

    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 3;</code>
     */
    boolean hasY();
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 3;</code>
     */
    float getY();

    /**
     * <pre>
     * Orientation [rad], measured from the x-axis counter-clockwise
     * </pre>
     *
     * <code>optional float orientation = 4;</code>
     */
    boolean hasOrientation();
    /**
     * <pre>
     * Orientation [rad], measured from the x-axis counter-clockwise
     * </pre>
     *
     * <code>optional float orientation = 4;</code>
     */
    float getOrientation();

    /**
     * <pre>
     * Global velocity [m/s] towards x-axis
     * </pre>
     *
     * <code>optional float v_x = 5 [default = 0];</code>
     */
    boolean hasVX();
    /**
     * <pre>
     * Global velocity [m/s] towards x-axis
     * </pre>
     *
     * <code>optional float v_x = 5 [default = 0];</code>
     */
    float getVX();

    /**
     * <pre>
     * Global velocity [m/s] towards y-axis
     * </pre>
     *
     * <code>optional float v_y = 6 [default = 0];</code>
     */
    boolean hasVY();
    /**
     * <pre>
     * Global velocity [m/s] towards y-axis
     * </pre>
     *
     * <code>optional float v_y = 6 [default = 0];</code>
     */
    float getVY();

    /**
     * <pre>
     * Angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float v_angular = 7 [default = 0];</code>
     */
    boolean hasVAngular();
    /**
     * <pre>
     * Angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float v_angular = 7 [default = 0];</code>
     */
    float getVAngular();

    /**
     * <pre>
     * Robot should be present on the field?
     * true -&gt; robot will be added, if it does not exist yet
     * false -&gt; robot will be removed, if it is present
     * </pre>
     *
     * <code>optional bool present = 8;</code>
     */
    boolean hasPresent();
    /**
     * <pre>
     * Robot should be present on the field?
     * true -&gt; robot will be added, if it does not exist yet
     * false -&gt; robot will be removed, if it is present
     * </pre>
     *
     * <code>optional bool present = 8;</code>
     */
    boolean getPresent();

    /**
     * <pre>
     * Instead of teleporting, apply some force to make sure
     * the robot reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportRobot command for the same bot with by_force = false.
     * To avoid teleporting at the end,
     * do not set any of the optional fields in this message
     * to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    boolean hasByForce();
    /**
     * <pre>
     * Instead of teleporting, apply some force to make sure
     * the robot reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportRobot command for the same bot with by_force = false.
     * To avoid teleporting at the end,
     * do not set any of the optional fields in this message
     * to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    boolean getByForce();
  }
  /**
   * <pre>
   * Teleport a robot to some location and give it a velocity
   * </pre>
   *
   * Protobuf type {@code proto.simulation.TeleportRobot}
   */
  public  static final class TeleportRobot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.TeleportRobot)
      TeleportRobotOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TeleportRobot.newBuilder() to construct.
    private TeleportRobot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TeleportRobot() {
      x_ = 0F;
      y_ = 0F;
      orientation_ = 0F;
      vX_ = 0F;
      vY_ = 0F;
      vAngular_ = 0F;
      present_ = false;
      byForce_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TeleportRobot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslGcCommon.RobotId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(proto.simulation.SslGcCommon.RobotId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              x_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              y_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              orientation_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              vX_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              vY_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              vAngular_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              present_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              byForce_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportRobot_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportRobot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationControl.TeleportRobot.class, proto.simulation.SslSimulationControl.TeleportRobot.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private proto.simulation.SslGcCommon.RobotId id_;
    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    public proto.simulation.SslGcCommon.RobotId getId() {
      return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * Robot id to teleport
     * </pre>
     *
     * <code>required .proto.simulation.RobotId id = 1;</code>
     */
    public proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder() {
      return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 2;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * x-coordinate [m]
     * </pre>
     *
     * <code>optional float x = 2;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 3;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * y-coordinate [m]
     * </pre>
     *
     * <code>optional float y = 3;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int ORIENTATION_FIELD_NUMBER = 4;
    private float orientation_;
    /**
     * <pre>
     * Orientation [rad], measured from the x-axis counter-clockwise
     * </pre>
     *
     * <code>optional float orientation = 4;</code>
     */
    public boolean hasOrientation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Orientation [rad], measured from the x-axis counter-clockwise
     * </pre>
     *
     * <code>optional float orientation = 4;</code>
     */
    public float getOrientation() {
      return orientation_;
    }

    public static final int V_X_FIELD_NUMBER = 5;
    private float vX_;
    /**
     * <pre>
     * Global velocity [m/s] towards x-axis
     * </pre>
     *
     * <code>optional float v_x = 5 [default = 0];</code>
     */
    public boolean hasVX() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Global velocity [m/s] towards x-axis
     * </pre>
     *
     * <code>optional float v_x = 5 [default = 0];</code>
     */
    public float getVX() {
      return vX_;
    }

    public static final int V_Y_FIELD_NUMBER = 6;
    private float vY_;
    /**
     * <pre>
     * Global velocity [m/s] towards y-axis
     * </pre>
     *
     * <code>optional float v_y = 6 [default = 0];</code>
     */
    public boolean hasVY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Global velocity [m/s] towards y-axis
     * </pre>
     *
     * <code>optional float v_y = 6 [default = 0];</code>
     */
    public float getVY() {
      return vY_;
    }

    public static final int V_ANGULAR_FIELD_NUMBER = 7;
    private float vAngular_;
    /**
     * <pre>
     * Angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float v_angular = 7 [default = 0];</code>
     */
    public boolean hasVAngular() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Angular velocity [rad/s]
     * </pre>
     *
     * <code>optional float v_angular = 7 [default = 0];</code>
     */
    public float getVAngular() {
      return vAngular_;
    }

    public static final int PRESENT_FIELD_NUMBER = 8;
    private boolean present_;
    /**
     * <pre>
     * Robot should be present on the field?
     * true -&gt; robot will be added, if it does not exist yet
     * false -&gt; robot will be removed, if it is present
     * </pre>
     *
     * <code>optional bool present = 8;</code>
     */
    public boolean hasPresent() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Robot should be present on the field?
     * true -&gt; robot will be added, if it does not exist yet
     * false -&gt; robot will be removed, if it is present
     * </pre>
     *
     * <code>optional bool present = 8;</code>
     */
    public boolean getPresent() {
      return present_;
    }

    public static final int BY_FORCE_FIELD_NUMBER = 9;
    private boolean byForce_;
    /**
     * <pre>
     * Instead of teleporting, apply some force to make sure
     * the robot reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportRobot command for the same bot with by_force = false.
     * To avoid teleporting at the end,
     * do not set any of the optional fields in this message
     * to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    public boolean hasByForce() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Instead of teleporting, apply some force to make sure
     * the robot reaches the required position soon (velocity is ignored if true)
     * WARNING: A command with by_force stays active (the move will take some time)
     * until cancled by another TeleportRobot command for the same bot with by_force = false.
     * To avoid teleporting at the end,
     * do not set any of the optional fields in this message
     * to end the force without triggering
     * an additional teleportation
     * </pre>
     *
     * <code>optional bool by_force = 9 [default = false];</code>
     */
    public boolean getByForce() {
      return byForce_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, orientation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, vX_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, vY_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, vAngular_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, present_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, byForce_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, orientation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, vX_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, vY_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, vAngular_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, present_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, byForce_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationControl.TeleportRobot)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationControl.TeleportRobot other = (proto.simulation.SslSimulationControl.TeleportRobot) obj;

      boolean result = true;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && getId()
            .equals(other.getId());
      }
      result = result && (hasX() == other.hasX());
      if (hasX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getX())
            == java.lang.Float.floatToIntBits(
                other.getX()));
      }
      result = result && (hasY() == other.hasY());
      if (hasY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getY())
            == java.lang.Float.floatToIntBits(
                other.getY()));
      }
      result = result && (hasOrientation() == other.hasOrientation());
      if (hasOrientation()) {
        result = result && (
            java.lang.Float.floatToIntBits(getOrientation())
            == java.lang.Float.floatToIntBits(
                other.getOrientation()));
      }
      result = result && (hasVX() == other.hasVX());
      if (hasVX()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVX())
            == java.lang.Float.floatToIntBits(
                other.getVX()));
      }
      result = result && (hasVY() == other.hasVY());
      if (hasVY()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVY())
            == java.lang.Float.floatToIntBits(
                other.getVY()));
      }
      result = result && (hasVAngular() == other.hasVAngular());
      if (hasVAngular()) {
        result = result && (
            java.lang.Float.floatToIntBits(getVAngular())
            == java.lang.Float.floatToIntBits(
                other.getVAngular()));
      }
      result = result && (hasPresent() == other.hasPresent());
      if (hasPresent()) {
        result = result && (getPresent()
            == other.getPresent());
      }
      result = result && (hasByForce() == other.hasByForce());
      if (hasByForce()) {
        result = result && (getByForce()
            == other.getByForce());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getX());
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getY());
      }
      if (hasOrientation()) {
        hash = (37 * hash) + ORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOrientation());
      }
      if (hasVX()) {
        hash = (37 * hash) + V_X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVX());
      }
      if (hasVY()) {
        hash = (37 * hash) + V_Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVY());
      }
      if (hasVAngular()) {
        hash = (37 * hash) + V_ANGULAR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVAngular());
      }
      if (hasPresent()) {
        hash = (37 * hash) + PRESENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPresent());
      }
      if (hasByForce()) {
        hash = (37 * hash) + BY_FORCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getByForce());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.TeleportRobot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationControl.TeleportRobot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Teleport a robot to some location and give it a velocity
     * </pre>
     *
     * Protobuf type {@code proto.simulation.TeleportRobot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.TeleportRobot)
        proto.simulation.SslSimulationControl.TeleportRobotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportRobot_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportRobot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationControl.TeleportRobot.class, proto.simulation.SslSimulationControl.TeleportRobot.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationControl.TeleportRobot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIdFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        orientation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        vX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        vY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        vAngular_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        present_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        byForce_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_TeleportRobot_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportRobot getDefaultInstanceForType() {
        return proto.simulation.SslSimulationControl.TeleportRobot.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportRobot build() {
        proto.simulation.SslSimulationControl.TeleportRobot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.TeleportRobot buildPartial() {
        proto.simulation.SslSimulationControl.TeleportRobot result = new proto.simulation.SslSimulationControl.TeleportRobot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.orientation_ = orientation_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vX_ = vX_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vY_ = vY_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vAngular_ = vAngular_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.present_ = present_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.byForce_ = byForce_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationControl.TeleportRobot) {
          return mergeFrom((proto.simulation.SslSimulationControl.TeleportRobot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationControl.TeleportRobot other) {
        if (other == proto.simulation.SslSimulationControl.TeleportRobot.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasOrientation()) {
          setOrientation(other.getOrientation());
        }
        if (other.hasVX()) {
          setVX(other.getVX());
        }
        if (other.hasVY()) {
          setVY(other.getVY());
        }
        if (other.hasVAngular()) {
          setVAngular(other.getVAngular());
        }
        if (other.hasPresent()) {
          setPresent(other.getPresent());
        }
        if (other.hasByForce()) {
          setByForce(other.getByForce());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationControl.TeleportRobot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationControl.TeleportRobot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.simulation.SslGcCommon.RobotId id_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder> idBuilder_;
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public proto.simulation.SslGcCommon.RobotId getId() {
        if (idBuilder_ == null) {
          return id_ == null ? proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder setId(proto.simulation.SslGcCommon.RobotId value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder setId(
          proto.simulation.SslGcCommon.RobotId.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder mergeId(proto.simulation.SslGcCommon.RobotId value) {
        if (idBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              id_ != null &&
              id_ != proto.simulation.SslGcCommon.RobotId.getDefaultInstance()) {
            id_ =
              proto.simulation.SslGcCommon.RobotId.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          idBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public proto.simulation.SslGcCommon.RobotId.Builder getIdBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      public proto.simulation.SslGcCommon.RobotIdOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              proto.simulation.SslGcCommon.RobotId.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * Robot id to teleport
       * </pre>
       *
       * <code>required .proto.simulation.RobotId id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslGcCommon.RobotId, proto.simulation.SslGcCommon.RobotId.Builder, proto.simulation.SslGcCommon.RobotIdOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private float x_ ;
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 2;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 2;</code>
       */
      public Builder setX(float value) {
        bitField0_ |= 0x00000002;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * x-coordinate [m]
       * </pre>
       *
       * <code>optional float x = 2;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 3;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 3;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 3;</code>
       */
      public Builder setY(float value) {
        bitField0_ |= 0x00000004;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * y-coordinate [m]
       * </pre>
       *
       * <code>optional float y = 3;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0F;
        onChanged();
        return this;
      }

      private float orientation_ ;
      /**
       * <pre>
       * Orientation [rad], measured from the x-axis counter-clockwise
       * </pre>
       *
       * <code>optional float orientation = 4;</code>
       */
      public boolean hasOrientation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Orientation [rad], measured from the x-axis counter-clockwise
       * </pre>
       *
       * <code>optional float orientation = 4;</code>
       */
      public float getOrientation() {
        return orientation_;
      }
      /**
       * <pre>
       * Orientation [rad], measured from the x-axis counter-clockwise
       * </pre>
       *
       * <code>optional float orientation = 4;</code>
       */
      public Builder setOrientation(float value) {
        bitField0_ |= 0x00000008;
        orientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Orientation [rad], measured from the x-axis counter-clockwise
       * </pre>
       *
       * <code>optional float orientation = 4;</code>
       */
      public Builder clearOrientation() {
        bitField0_ = (bitField0_ & ~0x00000008);
        orientation_ = 0F;
        onChanged();
        return this;
      }

      private float vX_ ;
      /**
       * <pre>
       * Global velocity [m/s] towards x-axis
       * </pre>
       *
       * <code>optional float v_x = 5 [default = 0];</code>
       */
      public boolean hasVX() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Global velocity [m/s] towards x-axis
       * </pre>
       *
       * <code>optional float v_x = 5 [default = 0];</code>
       */
      public float getVX() {
        return vX_;
      }
      /**
       * <pre>
       * Global velocity [m/s] towards x-axis
       * </pre>
       *
       * <code>optional float v_x = 5 [default = 0];</code>
       */
      public Builder setVX(float value) {
        bitField0_ |= 0x00000010;
        vX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Global velocity [m/s] towards x-axis
       * </pre>
       *
       * <code>optional float v_x = 5 [default = 0];</code>
       */
      public Builder clearVX() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vX_ = 0F;
        onChanged();
        return this;
      }

      private float vY_ ;
      /**
       * <pre>
       * Global velocity [m/s] towards y-axis
       * </pre>
       *
       * <code>optional float v_y = 6 [default = 0];</code>
       */
      public boolean hasVY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Global velocity [m/s] towards y-axis
       * </pre>
       *
       * <code>optional float v_y = 6 [default = 0];</code>
       */
      public float getVY() {
        return vY_;
      }
      /**
       * <pre>
       * Global velocity [m/s] towards y-axis
       * </pre>
       *
       * <code>optional float v_y = 6 [default = 0];</code>
       */
      public Builder setVY(float value) {
        bitField0_ |= 0x00000020;
        vY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Global velocity [m/s] towards y-axis
       * </pre>
       *
       * <code>optional float v_y = 6 [default = 0];</code>
       */
      public Builder clearVY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vY_ = 0F;
        onChanged();
        return this;
      }

      private float vAngular_ ;
      /**
       * <pre>
       * Angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float v_angular = 7 [default = 0];</code>
       */
      public boolean hasVAngular() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float v_angular = 7 [default = 0];</code>
       */
      public float getVAngular() {
        return vAngular_;
      }
      /**
       * <pre>
       * Angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float v_angular = 7 [default = 0];</code>
       */
      public Builder setVAngular(float value) {
        bitField0_ |= 0x00000040;
        vAngular_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Angular velocity [rad/s]
       * </pre>
       *
       * <code>optional float v_angular = 7 [default = 0];</code>
       */
      public Builder clearVAngular() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vAngular_ = 0F;
        onChanged();
        return this;
      }

      private boolean present_ ;
      /**
       * <pre>
       * Robot should be present on the field?
       * true -&gt; robot will be added, if it does not exist yet
       * false -&gt; robot will be removed, if it is present
       * </pre>
       *
       * <code>optional bool present = 8;</code>
       */
      public boolean hasPresent() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Robot should be present on the field?
       * true -&gt; robot will be added, if it does not exist yet
       * false -&gt; robot will be removed, if it is present
       * </pre>
       *
       * <code>optional bool present = 8;</code>
       */
      public boolean getPresent() {
        return present_;
      }
      /**
       * <pre>
       * Robot should be present on the field?
       * true -&gt; robot will be added, if it does not exist yet
       * false -&gt; robot will be removed, if it is present
       * </pre>
       *
       * <code>optional bool present = 8;</code>
       */
      public Builder setPresent(boolean value) {
        bitField0_ |= 0x00000080;
        present_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Robot should be present on the field?
       * true -&gt; robot will be added, if it does not exist yet
       * false -&gt; robot will be removed, if it is present
       * </pre>
       *
       * <code>optional bool present = 8;</code>
       */
      public Builder clearPresent() {
        bitField0_ = (bitField0_ & ~0x00000080);
        present_ = false;
        onChanged();
        return this;
      }

      private boolean byForce_ ;
      /**
       * <pre>
       * Instead of teleporting, apply some force to make sure
       * the robot reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportRobot command for the same bot with by_force = false.
       * To avoid teleporting at the end,
       * do not set any of the optional fields in this message
       * to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public boolean hasByForce() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Instead of teleporting, apply some force to make sure
       * the robot reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportRobot command for the same bot with by_force = false.
       * To avoid teleporting at the end,
       * do not set any of the optional fields in this message
       * to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public boolean getByForce() {
        return byForce_;
      }
      /**
       * <pre>
       * Instead of teleporting, apply some force to make sure
       * the robot reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportRobot command for the same bot with by_force = false.
       * To avoid teleporting at the end,
       * do not set any of the optional fields in this message
       * to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public Builder setByForce(boolean value) {
        bitField0_ |= 0x00000100;
        byForce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Instead of teleporting, apply some force to make sure
       * the robot reaches the required position soon (velocity is ignored if true)
       * WARNING: A command with by_force stays active (the move will take some time)
       * until cancled by another TeleportRobot command for the same bot with by_force = false.
       * To avoid teleporting at the end,
       * do not set any of the optional fields in this message
       * to end the force without triggering
       * an additional teleportation
       * </pre>
       *
       * <code>optional bool by_force = 9 [default = false];</code>
       */
      public Builder clearByForce() {
        bitField0_ = (bitField0_ & ~0x00000100);
        byForce_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.TeleportRobot)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.TeleportRobot)
    private static final proto.simulation.SslSimulationControl.TeleportRobot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationControl.TeleportRobot();
    }

    public static proto.simulation.SslSimulationControl.TeleportRobot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TeleportRobot>
        PARSER = new com.google.protobuf.AbstractParser<TeleportRobot>() {
      @java.lang.Override
      public TeleportRobot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TeleportRobot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TeleportRobot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TeleportRobot> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationControl.TeleportRobot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimulatorControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.SimulatorControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    boolean hasTeleportBall();
    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    proto.simulation.SslSimulationControl.TeleportBall getTeleportBall();
    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    proto.simulation.SslSimulationControl.TeleportBallOrBuilder getTeleportBallOrBuilder();

    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    java.util.List<proto.simulation.SslSimulationControl.TeleportRobot> 
        getTeleportRobotList();
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    proto.simulation.SslSimulationControl.TeleportRobot getTeleportRobot(int index);
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    int getTeleportRobotCount();
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    java.util.List<? extends proto.simulation.SslSimulationControl.TeleportRobotOrBuilder> 
        getTeleportRobotOrBuilderList();
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    proto.simulation.SslSimulationControl.TeleportRobotOrBuilder getTeleportRobotOrBuilder(
        int index);

    /**
     * <pre>
     * Change the simulation speed
     * </pre>
     *
     * <code>optional float simulation_speed = 3;</code>
     */
    boolean hasSimulationSpeed();
    /**
     * <pre>
     * Change the simulation speed
     * </pre>
     *
     * <code>optional float simulation_speed = 3;</code>
     */
    float getSimulationSpeed();
  }
  /**
   * <pre>
   * Control the simulation
   * </pre>
   *
   * Protobuf type {@code proto.simulation.SimulatorControl}
   */
  public  static final class SimulatorControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.SimulatorControl)
      SimulatorControlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimulatorControl.newBuilder() to construct.
    private SimulatorControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimulatorControl() {
      teleportRobot_ = java.util.Collections.emptyList();
      simulationSpeed_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimulatorControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslSimulationControl.TeleportBall.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = teleportBall_.toBuilder();
              }
              teleportBall_ = input.readMessage(proto.simulation.SslSimulationControl.TeleportBall.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teleportBall_);
                teleportBall_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                teleportRobot_ = new java.util.ArrayList<proto.simulation.SslSimulationControl.TeleportRobot>();
                mutable_bitField0_ |= 0x00000002;
              }
              teleportRobot_.add(
                  input.readMessage(proto.simulation.SslSimulationControl.TeleportRobot.PARSER, extensionRegistry));
              break;
            }
            case 29: {
              bitField0_ |= 0x00000002;
              simulationSpeed_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          teleportRobot_ = java.util.Collections.unmodifiableList(teleportRobot_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorControl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationControl.SimulatorControl.class, proto.simulation.SslSimulationControl.SimulatorControl.Builder.class);
    }

    private int bitField0_;
    public static final int TELEPORT_BALL_FIELD_NUMBER = 1;
    private proto.simulation.SslSimulationControl.TeleportBall teleportBall_;
    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    public boolean hasTeleportBall() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    public proto.simulation.SslSimulationControl.TeleportBall getTeleportBall() {
      return teleportBall_ == null ? proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance() : teleportBall_;
    }
    /**
     * <pre>
     * Teleport the ball
     * </pre>
     *
     * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
     */
    public proto.simulation.SslSimulationControl.TeleportBallOrBuilder getTeleportBallOrBuilder() {
      return teleportBall_ == null ? proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance() : teleportBall_;
    }

    public static final int TELEPORT_ROBOT_FIELD_NUMBER = 2;
    private java.util.List<proto.simulation.SslSimulationControl.TeleportRobot> teleportRobot_;
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    public java.util.List<proto.simulation.SslSimulationControl.TeleportRobot> getTeleportRobotList() {
      return teleportRobot_;
    }
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    public java.util.List<? extends proto.simulation.SslSimulationControl.TeleportRobotOrBuilder> 
        getTeleportRobotOrBuilderList() {
      return teleportRobot_;
    }
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    public int getTeleportRobotCount() {
      return teleportRobot_.size();
    }
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    public proto.simulation.SslSimulationControl.TeleportRobot getTeleportRobot(int index) {
      return teleportRobot_.get(index);
    }
    /**
     * <pre>
     * Teleport robots
     * </pre>
     *
     * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
     */
    public proto.simulation.SslSimulationControl.TeleportRobotOrBuilder getTeleportRobotOrBuilder(
        int index) {
      return teleportRobot_.get(index);
    }

    public static final int SIMULATION_SPEED_FIELD_NUMBER = 3;
    private float simulationSpeed_;
    /**
     * <pre>
     * Change the simulation speed
     * </pre>
     *
     * <code>optional float simulation_speed = 3;</code>
     */
    public boolean hasSimulationSpeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Change the simulation speed
     * </pre>
     *
     * <code>optional float simulation_speed = 3;</code>
     */
    public float getSimulationSpeed() {
      return simulationSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getTeleportRobotCount(); i++) {
        if (!getTeleportRobot(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getTeleportBall());
      }
      for (int i = 0; i < teleportRobot_.size(); i++) {
        output.writeMessage(2, teleportRobot_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(3, simulationSpeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTeleportBall());
      }
      for (int i = 0; i < teleportRobot_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, teleportRobot_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, simulationSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationControl.SimulatorControl)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationControl.SimulatorControl other = (proto.simulation.SslSimulationControl.SimulatorControl) obj;

      boolean result = true;
      result = result && (hasTeleportBall() == other.hasTeleportBall());
      if (hasTeleportBall()) {
        result = result && getTeleportBall()
            .equals(other.getTeleportBall());
      }
      result = result && getTeleportRobotList()
          .equals(other.getTeleportRobotList());
      result = result && (hasSimulationSpeed() == other.hasSimulationSpeed());
      if (hasSimulationSpeed()) {
        result = result && (
            java.lang.Float.floatToIntBits(getSimulationSpeed())
            == java.lang.Float.floatToIntBits(
                other.getSimulationSpeed()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTeleportBall()) {
        hash = (37 * hash) + TELEPORT_BALL_FIELD_NUMBER;
        hash = (53 * hash) + getTeleportBall().hashCode();
      }
      if (getTeleportRobotCount() > 0) {
        hash = (37 * hash) + TELEPORT_ROBOT_FIELD_NUMBER;
        hash = (53 * hash) + getTeleportRobotList().hashCode();
      }
      if (hasSimulationSpeed()) {
        hash = (37 * hash) + SIMULATION_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSimulationSpeed());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationControl.SimulatorControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * Protobuf type {@code proto.simulation.SimulatorControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.SimulatorControl)
        proto.simulation.SslSimulationControl.SimulatorControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationControl.SimulatorControl.class, proto.simulation.SslSimulationControl.SimulatorControl.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationControl.SimulatorControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTeleportBallFieldBuilder();
          getTeleportRobotFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (teleportBallBuilder_ == null) {
          teleportBall_ = null;
        } else {
          teleportBallBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (teleportRobotBuilder_ == null) {
          teleportRobot_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          teleportRobotBuilder_.clear();
        }
        simulationSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorControl_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorControl getDefaultInstanceForType() {
        return proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorControl build() {
        proto.simulation.SslSimulationControl.SimulatorControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorControl buildPartial() {
        proto.simulation.SslSimulationControl.SimulatorControl result = new proto.simulation.SslSimulationControl.SimulatorControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (teleportBallBuilder_ == null) {
          result.teleportBall_ = teleportBall_;
        } else {
          result.teleportBall_ = teleportBallBuilder_.build();
        }
        if (teleportRobotBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            teleportRobot_ = java.util.Collections.unmodifiableList(teleportRobot_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.teleportRobot_ = teleportRobot_;
        } else {
          result.teleportRobot_ = teleportRobotBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.simulationSpeed_ = simulationSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationControl.SimulatorControl) {
          return mergeFrom((proto.simulation.SslSimulationControl.SimulatorControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationControl.SimulatorControl other) {
        if (other == proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance()) return this;
        if (other.hasTeleportBall()) {
          mergeTeleportBall(other.getTeleportBall());
        }
        if (teleportRobotBuilder_ == null) {
          if (!other.teleportRobot_.isEmpty()) {
            if (teleportRobot_.isEmpty()) {
              teleportRobot_ = other.teleportRobot_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTeleportRobotIsMutable();
              teleportRobot_.addAll(other.teleportRobot_);
            }
            onChanged();
          }
        } else {
          if (!other.teleportRobot_.isEmpty()) {
            if (teleportRobotBuilder_.isEmpty()) {
              teleportRobotBuilder_.dispose();
              teleportRobotBuilder_ = null;
              teleportRobot_ = other.teleportRobot_;
              bitField0_ = (bitField0_ & ~0x00000002);
              teleportRobotBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTeleportRobotFieldBuilder() : null;
            } else {
              teleportRobotBuilder_.addAllMessages(other.teleportRobot_);
            }
          }
        }
        if (other.hasSimulationSpeed()) {
          setSimulationSpeed(other.getSimulationSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getTeleportRobotCount(); i++) {
          if (!getTeleportRobot(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationControl.SimulatorControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationControl.SimulatorControl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.simulation.SslSimulationControl.TeleportBall teleportBall_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationControl.TeleportBall, proto.simulation.SslSimulationControl.TeleportBall.Builder, proto.simulation.SslSimulationControl.TeleportBallOrBuilder> teleportBallBuilder_;
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public boolean hasTeleportBall() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportBall getTeleportBall() {
        if (teleportBallBuilder_ == null) {
          return teleportBall_ == null ? proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance() : teleportBall_;
        } else {
          return teleportBallBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public Builder setTeleportBall(proto.simulation.SslSimulationControl.TeleportBall value) {
        if (teleportBallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teleportBall_ = value;
          onChanged();
        } else {
          teleportBallBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public Builder setTeleportBall(
          proto.simulation.SslSimulationControl.TeleportBall.Builder builderForValue) {
        if (teleportBallBuilder_ == null) {
          teleportBall_ = builderForValue.build();
          onChanged();
        } else {
          teleportBallBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public Builder mergeTeleportBall(proto.simulation.SslSimulationControl.TeleportBall value) {
        if (teleportBallBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              teleportBall_ != null &&
              teleportBall_ != proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance()) {
            teleportBall_ =
              proto.simulation.SslSimulationControl.TeleportBall.newBuilder(teleportBall_).mergeFrom(value).buildPartial();
          } else {
            teleportBall_ = value;
          }
          onChanged();
        } else {
          teleportBallBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public Builder clearTeleportBall() {
        if (teleportBallBuilder_ == null) {
          teleportBall_ = null;
          onChanged();
        } else {
          teleportBallBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportBall.Builder getTeleportBallBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTeleportBallFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportBallOrBuilder getTeleportBallOrBuilder() {
        if (teleportBallBuilder_ != null) {
          return teleportBallBuilder_.getMessageOrBuilder();
        } else {
          return teleportBall_ == null ?
              proto.simulation.SslSimulationControl.TeleportBall.getDefaultInstance() : teleportBall_;
        }
      }
      /**
       * <pre>
       * Teleport the ball
       * </pre>
       *
       * <code>optional .proto.simulation.TeleportBall teleport_ball = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationControl.TeleportBall, proto.simulation.SslSimulationControl.TeleportBall.Builder, proto.simulation.SslSimulationControl.TeleportBallOrBuilder> 
          getTeleportBallFieldBuilder() {
        if (teleportBallBuilder_ == null) {
          teleportBallBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationControl.TeleportBall, proto.simulation.SslSimulationControl.TeleportBall.Builder, proto.simulation.SslSimulationControl.TeleportBallOrBuilder>(
                  getTeleportBall(),
                  getParentForChildren(),
                  isClean());
          teleportBall_ = null;
        }
        return teleportBallBuilder_;
      }

      private java.util.List<proto.simulation.SslSimulationControl.TeleportRobot> teleportRobot_ =
        java.util.Collections.emptyList();
      private void ensureTeleportRobotIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          teleportRobot_ = new java.util.ArrayList<proto.simulation.SslSimulationControl.TeleportRobot>(teleportRobot_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationControl.TeleportRobot, proto.simulation.SslSimulationControl.TeleportRobot.Builder, proto.simulation.SslSimulationControl.TeleportRobotOrBuilder> teleportRobotBuilder_;

      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public java.util.List<proto.simulation.SslSimulationControl.TeleportRobot> getTeleportRobotList() {
        if (teleportRobotBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teleportRobot_);
        } else {
          return teleportRobotBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public int getTeleportRobotCount() {
        if (teleportRobotBuilder_ == null) {
          return teleportRobot_.size();
        } else {
          return teleportRobotBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportRobot getTeleportRobot(int index) {
        if (teleportRobotBuilder_ == null) {
          return teleportRobot_.get(index);
        } else {
          return teleportRobotBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder setTeleportRobot(
          int index, proto.simulation.SslSimulationControl.TeleportRobot value) {
        if (teleportRobotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeleportRobotIsMutable();
          teleportRobot_.set(index, value);
          onChanged();
        } else {
          teleportRobotBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder setTeleportRobot(
          int index, proto.simulation.SslSimulationControl.TeleportRobot.Builder builderForValue) {
        if (teleportRobotBuilder_ == null) {
          ensureTeleportRobotIsMutable();
          teleportRobot_.set(index, builderForValue.build());
          onChanged();
        } else {
          teleportRobotBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder addTeleportRobot(proto.simulation.SslSimulationControl.TeleportRobot value) {
        if (teleportRobotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeleportRobotIsMutable();
          teleportRobot_.add(value);
          onChanged();
        } else {
          teleportRobotBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder addTeleportRobot(
          int index, proto.simulation.SslSimulationControl.TeleportRobot value) {
        if (teleportRobotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeleportRobotIsMutable();
          teleportRobot_.add(index, value);
          onChanged();
        } else {
          teleportRobotBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder addTeleportRobot(
          proto.simulation.SslSimulationControl.TeleportRobot.Builder builderForValue) {
        if (teleportRobotBuilder_ == null) {
          ensureTeleportRobotIsMutable();
          teleportRobot_.add(builderForValue.build());
          onChanged();
        } else {
          teleportRobotBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder addTeleportRobot(
          int index, proto.simulation.SslSimulationControl.TeleportRobot.Builder builderForValue) {
        if (teleportRobotBuilder_ == null) {
          ensureTeleportRobotIsMutable();
          teleportRobot_.add(index, builderForValue.build());
          onChanged();
        } else {
          teleportRobotBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder addAllTeleportRobot(
          java.lang.Iterable<? extends proto.simulation.SslSimulationControl.TeleportRobot> values) {
        if (teleportRobotBuilder_ == null) {
          ensureTeleportRobotIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, teleportRobot_);
          onChanged();
        } else {
          teleportRobotBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder clearTeleportRobot() {
        if (teleportRobotBuilder_ == null) {
          teleportRobot_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          teleportRobotBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public Builder removeTeleportRobot(int index) {
        if (teleportRobotBuilder_ == null) {
          ensureTeleportRobotIsMutable();
          teleportRobot_.remove(index);
          onChanged();
        } else {
          teleportRobotBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportRobot.Builder getTeleportRobotBuilder(
          int index) {
        return getTeleportRobotFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportRobotOrBuilder getTeleportRobotOrBuilder(
          int index) {
        if (teleportRobotBuilder_ == null) {
          return teleportRobot_.get(index);  } else {
          return teleportRobotBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public java.util.List<? extends proto.simulation.SslSimulationControl.TeleportRobotOrBuilder> 
           getTeleportRobotOrBuilderList() {
        if (teleportRobotBuilder_ != null) {
          return teleportRobotBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teleportRobot_);
        }
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportRobot.Builder addTeleportRobotBuilder() {
        return getTeleportRobotFieldBuilder().addBuilder(
            proto.simulation.SslSimulationControl.TeleportRobot.getDefaultInstance());
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public proto.simulation.SslSimulationControl.TeleportRobot.Builder addTeleportRobotBuilder(
          int index) {
        return getTeleportRobotFieldBuilder().addBuilder(
            index, proto.simulation.SslSimulationControl.TeleportRobot.getDefaultInstance());
      }
      /**
       * <pre>
       * Teleport robots
       * </pre>
       *
       * <code>repeated .proto.simulation.TeleportRobot teleport_robot = 2;</code>
       */
      public java.util.List<proto.simulation.SslSimulationControl.TeleportRobot.Builder> 
           getTeleportRobotBuilderList() {
        return getTeleportRobotFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationControl.TeleportRobot, proto.simulation.SslSimulationControl.TeleportRobot.Builder, proto.simulation.SslSimulationControl.TeleportRobotOrBuilder> 
          getTeleportRobotFieldBuilder() {
        if (teleportRobotBuilder_ == null) {
          teleportRobotBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.simulation.SslSimulationControl.TeleportRobot, proto.simulation.SslSimulationControl.TeleportRobot.Builder, proto.simulation.SslSimulationControl.TeleportRobotOrBuilder>(
                  teleportRobot_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          teleportRobot_ = null;
        }
        return teleportRobotBuilder_;
      }

      private float simulationSpeed_ ;
      /**
       * <pre>
       * Change the simulation speed
       * </pre>
       *
       * <code>optional float simulation_speed = 3;</code>
       */
      public boolean hasSimulationSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Change the simulation speed
       * </pre>
       *
       * <code>optional float simulation_speed = 3;</code>
       */
      public float getSimulationSpeed() {
        return simulationSpeed_;
      }
      /**
       * <pre>
       * Change the simulation speed
       * </pre>
       *
       * <code>optional float simulation_speed = 3;</code>
       */
      public Builder setSimulationSpeed(float value) {
        bitField0_ |= 0x00000004;
        simulationSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Change the simulation speed
       * </pre>
       *
       * <code>optional float simulation_speed = 3;</code>
       */
      public Builder clearSimulationSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        simulationSpeed_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.SimulatorControl)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.SimulatorControl)
    private static final proto.simulation.SslSimulationControl.SimulatorControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationControl.SimulatorControl();
    }

    public static proto.simulation.SslSimulationControl.SimulatorControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SimulatorControl>
        PARSER = new com.google.protobuf.AbstractParser<SimulatorControl>() {
      @java.lang.Override
      public SimulatorControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimulatorControl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimulatorControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulatorControl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationControl.SimulatorControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimulatorCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.SimulatorCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    boolean hasControl();
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    proto.simulation.SslSimulationControl.SimulatorControl getControl();
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    proto.simulation.SslSimulationControl.SimulatorControlOrBuilder getControlOrBuilder();

    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    proto.simulation.SslSimulationConfig.SimulatorConfig getConfig();
    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   * Command from the connected client to the simulator
   * </pre>
   *
   * Protobuf type {@code proto.simulation.SimulatorCommand}
   */
  public  static final class SimulatorCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.SimulatorCommand)
      SimulatorCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimulatorCommand.newBuilder() to construct.
    private SimulatorCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimulatorCommand() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimulatorCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              proto.simulation.SslSimulationControl.SimulatorControl.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = control_.toBuilder();
              }
              control_ = input.readMessage(proto.simulation.SslSimulationControl.SimulatorControl.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(control_);
                control_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              proto.simulation.SslSimulationConfig.SimulatorConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(proto.simulation.SslSimulationConfig.SimulatorConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationControl.SimulatorCommand.class, proto.simulation.SslSimulationControl.SimulatorCommand.Builder.class);
    }

    private int bitField0_;
    public static final int CONTROL_FIELD_NUMBER = 1;
    private proto.simulation.SslSimulationControl.SimulatorControl control_;
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    public boolean hasControl() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    public proto.simulation.SslSimulationControl.SimulatorControl getControl() {
      return control_ == null ? proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance() : control_;
    }
    /**
     * <pre>
     * Control the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
     */
    public proto.simulation.SslSimulationControl.SimulatorControlOrBuilder getControlOrBuilder() {
      return control_ == null ? proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance() : control_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private proto.simulation.SslSimulationConfig.SimulatorConfig config_;
    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    public proto.simulation.SslSimulationConfig.SimulatorConfig getConfig() {
      return config_ == null ? proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Configure the simulation
     * </pre>
     *
     * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
     */
    public proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance() : config_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasControl()) {
        if (!getControl().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConfig()) {
        if (!getConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getControl());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getControl());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationControl.SimulatorCommand)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationControl.SimulatorCommand other = (proto.simulation.SslSimulationControl.SimulatorCommand) obj;

      boolean result = true;
      result = result && (hasControl() == other.hasControl());
      if (hasControl()) {
        result = result && getControl()
            .equals(other.getControl());
      }
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasControl()) {
        hash = (37 * hash) + CONTROL_FIELD_NUMBER;
        hash = (53 * hash) + getControl().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationControl.SimulatorCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Command from the connected client to the simulator
     * </pre>
     *
     * Protobuf type {@code proto.simulation.SimulatorCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.SimulatorCommand)
        proto.simulation.SslSimulationControl.SimulatorCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationControl.SimulatorCommand.class, proto.simulation.SslSimulationControl.SimulatorCommand.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationControl.SimulatorCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getControlFieldBuilder();
          getConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (controlBuilder_ == null) {
          control_ = null;
        } else {
          controlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorCommand_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorCommand getDefaultInstanceForType() {
        return proto.simulation.SslSimulationControl.SimulatorCommand.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorCommand build() {
        proto.simulation.SslSimulationControl.SimulatorCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorCommand buildPartial() {
        proto.simulation.SslSimulationControl.SimulatorCommand result = new proto.simulation.SslSimulationControl.SimulatorCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (controlBuilder_ == null) {
          result.control_ = control_;
        } else {
          result.control_ = controlBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationControl.SimulatorCommand) {
          return mergeFrom((proto.simulation.SslSimulationControl.SimulatorCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationControl.SimulatorCommand other) {
        if (other == proto.simulation.SslSimulationControl.SimulatorCommand.getDefaultInstance()) return this;
        if (other.hasControl()) {
          mergeControl(other.getControl());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasControl()) {
          if (!getControl().isInitialized()) {
            return false;
          }
        }
        if (hasConfig()) {
          if (!getConfig().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationControl.SimulatorCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationControl.SimulatorCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.simulation.SslSimulationControl.SimulatorControl control_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationControl.SimulatorControl, proto.simulation.SslSimulationControl.SimulatorControl.Builder, proto.simulation.SslSimulationControl.SimulatorControlOrBuilder> controlBuilder_;
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public boolean hasControl() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public proto.simulation.SslSimulationControl.SimulatorControl getControl() {
        if (controlBuilder_ == null) {
          return control_ == null ? proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance() : control_;
        } else {
          return controlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public Builder setControl(proto.simulation.SslSimulationControl.SimulatorControl value) {
        if (controlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          control_ = value;
          onChanged();
        } else {
          controlBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public Builder setControl(
          proto.simulation.SslSimulationControl.SimulatorControl.Builder builderForValue) {
        if (controlBuilder_ == null) {
          control_ = builderForValue.build();
          onChanged();
        } else {
          controlBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public Builder mergeControl(proto.simulation.SslSimulationControl.SimulatorControl value) {
        if (controlBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              control_ != null &&
              control_ != proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance()) {
            control_ =
              proto.simulation.SslSimulationControl.SimulatorControl.newBuilder(control_).mergeFrom(value).buildPartial();
          } else {
            control_ = value;
          }
          onChanged();
        } else {
          controlBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public Builder clearControl() {
        if (controlBuilder_ == null) {
          control_ = null;
          onChanged();
        } else {
          controlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public proto.simulation.SslSimulationControl.SimulatorControl.Builder getControlBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getControlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      public proto.simulation.SslSimulationControl.SimulatorControlOrBuilder getControlOrBuilder() {
        if (controlBuilder_ != null) {
          return controlBuilder_.getMessageOrBuilder();
        } else {
          return control_ == null ?
              proto.simulation.SslSimulationControl.SimulatorControl.getDefaultInstance() : control_;
        }
      }
      /**
       * <pre>
       * Control the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorControl control = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationControl.SimulatorControl, proto.simulation.SslSimulationControl.SimulatorControl.Builder, proto.simulation.SslSimulationControl.SimulatorControlOrBuilder> 
          getControlFieldBuilder() {
        if (controlBuilder_ == null) {
          controlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationControl.SimulatorControl, proto.simulation.SslSimulationControl.SimulatorControl.Builder, proto.simulation.SslSimulationControl.SimulatorControlOrBuilder>(
                  getControl(),
                  getParentForChildren(),
                  isClean());
          control_ = null;
        }
        return controlBuilder_;
      }

      private proto.simulation.SslSimulationConfig.SimulatorConfig config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.SimulatorConfig, proto.simulation.SslSimulationConfig.SimulatorConfig.Builder, proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.SimulatorConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public Builder setConfig(proto.simulation.SslSimulationConfig.SimulatorConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public Builder setConfig(
          proto.simulation.SslSimulationConfig.SimulatorConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public Builder mergeConfig(proto.simulation.SslSimulationConfig.SimulatorConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              config_ != null &&
              config_ != proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance()) {
            config_ =
              proto.simulation.SslSimulationConfig.SimulatorConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.SimulatorConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      public proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              proto.simulation.SslSimulationConfig.SimulatorConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Configure the simulation
       * </pre>
       *
       * <code>optional .proto.simulation.SimulatorConfig config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.simulation.SslSimulationConfig.SimulatorConfig, proto.simulation.SslSimulationConfig.SimulatorConfig.Builder, proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.simulation.SslSimulationConfig.SimulatorConfig, proto.simulation.SslSimulationConfig.SimulatorConfig.Builder, proto.simulation.SslSimulationConfig.SimulatorConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.SimulatorCommand)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.SimulatorCommand)
    private static final proto.simulation.SslSimulationControl.SimulatorCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationControl.SimulatorCommand();
    }

    public static proto.simulation.SslSimulationControl.SimulatorCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SimulatorCommand>
        PARSER = new com.google.protobuf.AbstractParser<SimulatorCommand>() {
      @java.lang.Override
      public SimulatorCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimulatorCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimulatorCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulatorCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationControl.SimulatorCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimulatorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.simulation.SimulatorResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    java.util.List<proto.simulation.SslSimulationError.SimulatorError> 
        getErrorsList();
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    proto.simulation.SslSimulationError.SimulatorError getErrors(int index);
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    int getErrorsCount();
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    java.util.List<? extends proto.simulation.SslSimulationError.SimulatorErrorOrBuilder> 
        getErrorsOrBuilderList();
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    proto.simulation.SslSimulationError.SimulatorErrorOrBuilder getErrorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Response of the simulator to the connected client
   * </pre>
   *
   * Protobuf type {@code proto.simulation.SimulatorResponse}
   */
  public  static final class SimulatorResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.simulation.SimulatorResponse)
      SimulatorResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SimulatorResponse.newBuilder() to construct.
    private SimulatorResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SimulatorResponse() {
      errors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SimulatorResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                errors_ = new java.util.ArrayList<proto.simulation.SslSimulationError.SimulatorError>();
                mutable_bitField0_ |= 0x00000001;
              }
              errors_.add(
                  input.readMessage(proto.simulation.SslSimulationError.SimulatorError.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.simulation.SslSimulationControl.SimulatorResponse.class, proto.simulation.SslSimulationControl.SimulatorResponse.Builder.class);
    }

    public static final int ERRORS_FIELD_NUMBER = 1;
    private java.util.List<proto.simulation.SslSimulationError.SimulatorError> errors_;
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    public java.util.List<proto.simulation.SslSimulationError.SimulatorError> getErrorsList() {
      return errors_;
    }
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    public java.util.List<? extends proto.simulation.SslSimulationError.SimulatorErrorOrBuilder> 
        getErrorsOrBuilderList() {
      return errors_;
    }
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    public proto.simulation.SslSimulationError.SimulatorError getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <pre>
     * List of errors, like using unsupported features
     * </pre>
     *
     * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
     */
    public proto.simulation.SslSimulationError.SimulatorErrorOrBuilder getErrorsOrBuilder(
        int index) {
      return errors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < errors_.size(); i++) {
        output.writeMessage(1, errors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < errors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, errors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.simulation.SslSimulationControl.SimulatorResponse)) {
        return super.equals(obj);
      }
      proto.simulation.SslSimulationControl.SimulatorResponse other = (proto.simulation.SslSimulationControl.SimulatorResponse) obj;

      boolean result = true;
      result = result && getErrorsList()
          .equals(other.getErrorsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getErrorsCount() > 0) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.simulation.SslSimulationControl.SimulatorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.simulation.SslSimulationControl.SimulatorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response of the simulator to the connected client
     * </pre>
     *
     * Protobuf type {@code proto.simulation.SimulatorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.simulation.SimulatorResponse)
        proto.simulation.SslSimulationControl.SimulatorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.simulation.SslSimulationControl.SimulatorResponse.class, proto.simulation.SslSimulationControl.SimulatorResponse.Builder.class);
      }

      // Construct using proto.simulation.SslSimulationControl.SimulatorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getErrorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.simulation.SslSimulationControl.internal_static_proto_simulation_SimulatorResponse_descriptor;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorResponse getDefaultInstanceForType() {
        return proto.simulation.SslSimulationControl.SimulatorResponse.getDefaultInstance();
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorResponse build() {
        proto.simulation.SslSimulationControl.SimulatorResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.simulation.SslSimulationControl.SimulatorResponse buildPartial() {
        proto.simulation.SslSimulationControl.SimulatorResponse result = new proto.simulation.SslSimulationControl.SimulatorResponse(this);
        int from_bitField0_ = bitField0_;
        if (errorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.errors_ = errors_;
        } else {
          result.errors_ = errorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.simulation.SslSimulationControl.SimulatorResponse) {
          return mergeFrom((proto.simulation.SslSimulationControl.SimulatorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.simulation.SslSimulationControl.SimulatorResponse other) {
        if (other == proto.simulation.SslSimulationControl.SimulatorResponse.getDefaultInstance()) return this;
        if (errorsBuilder_ == null) {
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
        } else {
          if (!other.errors_.isEmpty()) {
            if (errorsBuilder_.isEmpty()) {
              errorsBuilder_.dispose();
              errorsBuilder_ = null;
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              errorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getErrorsFieldBuilder() : null;
            } else {
              errorsBuilder_.addAllMessages(other.errors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.simulation.SslSimulationControl.SimulatorResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.simulation.SslSimulationControl.SimulatorResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<proto.simulation.SslSimulationError.SimulatorError> errors_ =
        java.util.Collections.emptyList();
      private void ensureErrorsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          errors_ = new java.util.ArrayList<proto.simulation.SslSimulationError.SimulatorError>(errors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationError.SimulatorError, proto.simulation.SslSimulationError.SimulatorError.Builder, proto.simulation.SslSimulationError.SimulatorErrorOrBuilder> errorsBuilder_;

      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public java.util.List<proto.simulation.SslSimulationError.SimulatorError> getErrorsList() {
        if (errorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(errors_);
        } else {
          return errorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public int getErrorsCount() {
        if (errorsBuilder_ == null) {
          return errors_.size();
        } else {
          return errorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public proto.simulation.SslSimulationError.SimulatorError getErrors(int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);
        } else {
          return errorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder setErrors(
          int index, proto.simulation.SslSimulationError.SimulatorError value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder setErrors(
          int index, proto.simulation.SslSimulationError.SimulatorError.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.set(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder addErrors(proto.simulation.SslSimulationError.SimulatorError value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder addErrors(
          int index, proto.simulation.SslSimulationError.SimulatorError value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(index, value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder addErrors(
          proto.simulation.SslSimulationError.SimulatorError.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder addErrors(
          int index, proto.simulation.SslSimulationError.SimulatorError.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends proto.simulation.SslSimulationError.SimulatorError> values) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, errors_);
          onChanged();
        } else {
          errorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder clearErrors() {
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public Builder removeErrors(int index) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.remove(index);
          onChanged();
        } else {
          errorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public proto.simulation.SslSimulationError.SimulatorError.Builder getErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public proto.simulation.SslSimulationError.SimulatorErrorOrBuilder getErrorsOrBuilder(
          int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);  } else {
          return errorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public java.util.List<? extends proto.simulation.SslSimulationError.SimulatorErrorOrBuilder> 
           getErrorsOrBuilderList() {
        if (errorsBuilder_ != null) {
          return errorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(errors_);
        }
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public proto.simulation.SslSimulationError.SimulatorError.Builder addErrorsBuilder() {
        return getErrorsFieldBuilder().addBuilder(
            proto.simulation.SslSimulationError.SimulatorError.getDefaultInstance());
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public proto.simulation.SslSimulationError.SimulatorError.Builder addErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().addBuilder(
            index, proto.simulation.SslSimulationError.SimulatorError.getDefaultInstance());
      }
      /**
       * <pre>
       * List of errors, like using unsupported features
       * </pre>
       *
       * <code>repeated .proto.simulation.SimulatorError errors = 1;</code>
       */
      public java.util.List<proto.simulation.SslSimulationError.SimulatorError.Builder> 
           getErrorsBuilderList() {
        return getErrorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.simulation.SslSimulationError.SimulatorError, proto.simulation.SslSimulationError.SimulatorError.Builder, proto.simulation.SslSimulationError.SimulatorErrorOrBuilder> 
          getErrorsFieldBuilder() {
        if (errorsBuilder_ == null) {
          errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.simulation.SslSimulationError.SimulatorError, proto.simulation.SslSimulationError.SimulatorError.Builder, proto.simulation.SslSimulationError.SimulatorErrorOrBuilder>(
                  errors_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          errors_ = null;
        }
        return errorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.simulation.SimulatorResponse)
    }

    // @@protoc_insertion_point(class_scope:proto.simulation.SimulatorResponse)
    private static final proto.simulation.SslSimulationControl.SimulatorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.simulation.SslSimulationControl.SimulatorResponse();
    }

    public static proto.simulation.SslSimulationControl.SimulatorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SimulatorResponse>
        PARSER = new com.google.protobuf.AbstractParser<SimulatorResponse>() {
      @java.lang.Override
      public SimulatorResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimulatorResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SimulatorResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimulatorResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.simulation.SslSimulationControl.SimulatorResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_TeleportBall_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_TeleportBall_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_TeleportRobot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_TeleportRobot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_SimulatorControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_SimulatorControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_SimulatorCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_SimulatorCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_simulation_SimulatorResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_simulation_SimulatorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034ssl_simulation_control.proto\022\020proto.si" +
      "mulation\032\023ssl_gc_common.proto\032\033ssl_simul" +
      "ation_config.proto\032\032ssl_simulation_error" +
      ".proto\"\241\001\n\014TeleportBall\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030" +
      "\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\n\n\002vx\030\004 \001(\002\022\n\n\002vy\030\005 \001(\002" +
      "\022\n\n\002vz\030\006 \001(\002\022\036\n\017teleport_safely\030\007 \001(\010:\005f" +
      "alse\022\023\n\004roll\030\010 \001(\010:\005false\022\027\n\010by_force\030\t " +
      "\001(\010:\005false\"\301\001\n\rTeleportRobot\022%\n\002id\030\001 \002(\013" +
      "2\031.proto.simulation.RobotId\022\t\n\001x\030\002 \001(\002\022\t" +
      "\n\001y\030\003 \001(\002\022\023\n\013orientation\030\004 \001(\002\022\016\n\003v_x\030\005 " +
      "\001(\002:\0010\022\016\n\003v_y\030\006 \001(\002:\0010\022\024\n\tv_angular\030\007 \001(" +
      "\002:\0010\022\017\n\007present\030\010 \001(\010\022\027\n\010by_force\030\t \001(\010:" +
      "\005false\"\234\001\n\020SimulatorControl\0225\n\rteleport_" +
      "ball\030\001 \001(\0132\036.proto.simulation.TeleportBa" +
      "ll\0227\n\016teleport_robot\030\002 \003(\0132\037.proto.simul" +
      "ation.TeleportRobot\022\030\n\020simulation_speed\030" +
      "\003 \001(\002\"z\n\020SimulatorCommand\0223\n\007control\030\001 \001" +
      "(\0132\".proto.simulation.SimulatorControl\0221" +
      "\n\006config\030\002 \001(\0132!.proto.simulation.Simula" +
      "torConfig\"E\n\021SimulatorResponse\0220\n\006errors" +
      "\030\001 \003(\0132 .proto.simulation.SimulatorError" +
      "B8Z6github.com/RoboCup-SSL/ssl-simulatio" +
      "n-protocol/pkg/sim"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.simulation.SslGcCommon.getDescriptor(),
          proto.simulation.SslSimulationConfig.getDescriptor(),
          proto.simulation.SslSimulationError.getDescriptor(),
        }, assigner);
    internal_static_proto_simulation_TeleportBall_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_simulation_TeleportBall_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_TeleportBall_descriptor,
        new java.lang.String[] { "X", "Y", "Z", "Vx", "Vy", "Vz", "TeleportSafely", "Roll", "ByForce", });
    internal_static_proto_simulation_TeleportRobot_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_simulation_TeleportRobot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_TeleportRobot_descriptor,
        new java.lang.String[] { "Id", "X", "Y", "Orientation", "VX", "VY", "VAngular", "Present", "ByForce", });
    internal_static_proto_simulation_SimulatorControl_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_simulation_SimulatorControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_SimulatorControl_descriptor,
        new java.lang.String[] { "TeleportBall", "TeleportRobot", "SimulationSpeed", });
    internal_static_proto_simulation_SimulatorCommand_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_simulation_SimulatorCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_SimulatorCommand_descriptor,
        new java.lang.String[] { "Control", "Config", });
    internal_static_proto_simulation_SimulatorResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_simulation_SimulatorResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_simulation_SimulatorResponse_descriptor,
        new java.lang.String[] { "Errors", });
    proto.simulation.SslGcCommon.getDescriptor();
    proto.simulation.SslSimulationConfig.getDescriptor();
    proto.simulation.SslSimulationError.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
